//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:2.0.50727.4062
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AISbibiDoctor1 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private CHAMBERDataTable tableCHAMBER;
        
        private DOCTORDataTable tableDOCTOR;
        
        private MEDICAL_HISTIRYDataTable tableMEDICAL_HISTIRY;
        
        private PACIENTDataTable tablePACIENT;
        
        private POSTDataTable tablePOST;
        
        private PRIEMDataTable tablePRIEM;
        
        private SPECIALITYDataTable tableSPECIALITY;
        
        private UNITDataTable tableUNIT;
        
        private WWV_FLOW_DUAL100DataTable tableWWV_FLOW_DUAL100;
        
        private WWV_FLOW_FIELD_TEMPLATESDataTable tableWWV_FLOW_FIELD_TEMPLATES;
        
        private WWV_FLOW_LIST_OF_VALUES_DATADataTable tableWWV_FLOW_LIST_OF_VALUES_DATA;
        
        private _WWV_FLOW_LISTS_OF_VALUES_DataTable _tableWWV_FLOW_LISTS_OF_VALUES_;
        
        private WWV_FLOW_LOV_TEMPDataTable tableWWV_FLOW_LOV_TEMP;
        
        private WWV_FLOW_PATCHESDataTable tableWWV_FLOW_PATCHES;
        
        private WWV_FLOW_TEMP_TABLEDataTable tableWWV_FLOW_TEMP_TABLE;
        
        private WWV_FLOW_CLICKTHRU_LOGDataTable tableWWV_FLOW_CLICKTHRU_LOG;
        
        private WWV_FLOW_COLLECTIONSDataTable tableWWV_FLOW_COLLECTIONS;
        
        private WWV_FLOW_FILESDataTable tableWWV_FLOW_FILES;
        
        private WWV_FLOW_GROUP_USERSDataTable tableWWV_FLOW_GROUP_USERS;
        
        private WWV_FLOW_HOURS_12DataTable tableWWV_FLOW_HOURS_12;
        
        private WWV_FLOW_HOURS_24DataTable tableWWV_FLOW_HOURS_24;
        
        private WWV_FLOW_MINUTESDataTable tableWWV_FLOW_MINUTES;
        
        private WWV_FLOW_MINUTES_5DataTable tableWWV_FLOW_MINUTES_5;
        
        private WWV_FLOW_MONTHS_MONDataTable tableWWV_FLOW_MONTHS_MON;
        
        private WWV_FLOW_MONTHS_MONTHDataTable tableWWV_FLOW_MONTHS_MONTH;
        
        private WWV_FLOW_PLSQL_JOBSDataTable tableWWV_FLOW_PLSQL_JOBS;
        
        private WWV_FLOW_USER_ACTIVITY_LOGDataTable tableWWV_FLOW_USER_ACTIVITY_LOG;
        
        private WWV_FLOW_USER_MAIL_LOGDataTable tableWWV_FLOW_USER_MAIL_LOG;
        
        private WWV_FLOW_USER_MAIL_QUEUEDataTable tableWWV_FLOW_USER_MAIL_QUEUE;
        
        private WWV_FLOW_USERSDataTable tableWWV_FLOW_USERS;
        
        private WWV_FLOW_YEARSDataTable tableWWV_FLOW_YEARS;
        
        private PASSWORDDataTable tablePASSWORD;
        
        private global::System.Data.DataRelation relationA;
        
        private global::System.Data.DataRelation relationB;
        
        private global::System.Data.DataRelation relationDOCTOR_R01;
        
        private global::System.Data.DataRelation relationASS;
        
        private global::System.Data.DataRelation relationPRIEM_R011;
        
        private global::System.Data.DataRelation relationUNIT_R012;
        
        private global::System.Data.DataRelation relationWWV_FLOW_LOV_DATA_FK;
        
        private global::System.Data.DataRelation relationpcient_PRIEM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CHAMBER"] != null)) {
                    base.Tables.Add(new CHAMBERDataTable(ds.Tables["CHAMBER"]));
                }
                if ((ds.Tables["DOCTOR"] != null)) {
                    base.Tables.Add(new DOCTORDataTable(ds.Tables["DOCTOR"]));
                }
                if ((ds.Tables["MEDICAL_HISTIRY"] != null)) {
                    base.Tables.Add(new MEDICAL_HISTIRYDataTable(ds.Tables["MEDICAL_HISTIRY"]));
                }
                if ((ds.Tables["PACIENT"] != null)) {
                    base.Tables.Add(new PACIENTDataTable(ds.Tables["PACIENT"]));
                }
                if ((ds.Tables["POST"] != null)) {
                    base.Tables.Add(new POSTDataTable(ds.Tables["POST"]));
                }
                if ((ds.Tables["PRIEM"] != null)) {
                    base.Tables.Add(new PRIEMDataTable(ds.Tables["PRIEM"]));
                }
                if ((ds.Tables["SPECIALITY"] != null)) {
                    base.Tables.Add(new SPECIALITYDataTable(ds.Tables["SPECIALITY"]));
                }
                if ((ds.Tables["UNIT"] != null)) {
                    base.Tables.Add(new UNITDataTable(ds.Tables["UNIT"]));
                }
                if ((ds.Tables["WWV_FLOW_DUAL100"] != null)) {
                    base.Tables.Add(new WWV_FLOW_DUAL100DataTable(ds.Tables["WWV_FLOW_DUAL100"]));
                }
                if ((ds.Tables["WWV_FLOW_FIELD_TEMPLATES"] != null)) {
                    base.Tables.Add(new WWV_FLOW_FIELD_TEMPLATESDataTable(ds.Tables["WWV_FLOW_FIELD_TEMPLATES"]));
                }
                if ((ds.Tables["WWV_FLOW_LIST_OF_VALUES_DATA"] != null)) {
                    base.Tables.Add(new WWV_FLOW_LIST_OF_VALUES_DATADataTable(ds.Tables["WWV_FLOW_LIST_OF_VALUES_DATA"]));
                }
                if ((ds.Tables["WWV_FLOW_LISTS_OF_VALUES$"] != null)) {
                    base.Tables.Add(new _WWV_FLOW_LISTS_OF_VALUES_DataTable(ds.Tables["WWV_FLOW_LISTS_OF_VALUES$"]));
                }
                if ((ds.Tables["WWV_FLOW_LOV_TEMP"] != null)) {
                    base.Tables.Add(new WWV_FLOW_LOV_TEMPDataTable(ds.Tables["WWV_FLOW_LOV_TEMP"]));
                }
                if ((ds.Tables["WWV_FLOW_PATCHES"] != null)) {
                    base.Tables.Add(new WWV_FLOW_PATCHESDataTable(ds.Tables["WWV_FLOW_PATCHES"]));
                }
                if ((ds.Tables["WWV_FLOW_TEMP_TABLE"] != null)) {
                    base.Tables.Add(new WWV_FLOW_TEMP_TABLEDataTable(ds.Tables["WWV_FLOW_TEMP_TABLE"]));
                }
                if ((ds.Tables["WWV_FLOW_CLICKTHRU_LOG"] != null)) {
                    base.Tables.Add(new WWV_FLOW_CLICKTHRU_LOGDataTable(ds.Tables["WWV_FLOW_CLICKTHRU_LOG"]));
                }
                if ((ds.Tables["WWV_FLOW_COLLECTIONS"] != null)) {
                    base.Tables.Add(new WWV_FLOW_COLLECTIONSDataTable(ds.Tables["WWV_FLOW_COLLECTIONS"]));
                }
                if ((ds.Tables["WWV_FLOW_FILES"] != null)) {
                    base.Tables.Add(new WWV_FLOW_FILESDataTable(ds.Tables["WWV_FLOW_FILES"]));
                }
                if ((ds.Tables["WWV_FLOW_GROUP_USERS"] != null)) {
                    base.Tables.Add(new WWV_FLOW_GROUP_USERSDataTable(ds.Tables["WWV_FLOW_GROUP_USERS"]));
                }
                if ((ds.Tables["WWV_FLOW_HOURS_12"] != null)) {
                    base.Tables.Add(new WWV_FLOW_HOURS_12DataTable(ds.Tables["WWV_FLOW_HOURS_12"]));
                }
                if ((ds.Tables["WWV_FLOW_HOURS_24"] != null)) {
                    base.Tables.Add(new WWV_FLOW_HOURS_24DataTable(ds.Tables["WWV_FLOW_HOURS_24"]));
                }
                if ((ds.Tables["WWV_FLOW_MINUTES"] != null)) {
                    base.Tables.Add(new WWV_FLOW_MINUTESDataTable(ds.Tables["WWV_FLOW_MINUTES"]));
                }
                if ((ds.Tables["WWV_FLOW_MINUTES_5"] != null)) {
                    base.Tables.Add(new WWV_FLOW_MINUTES_5DataTable(ds.Tables["WWV_FLOW_MINUTES_5"]));
                }
                if ((ds.Tables["WWV_FLOW_MONTHS_MON"] != null)) {
                    base.Tables.Add(new WWV_FLOW_MONTHS_MONDataTable(ds.Tables["WWV_FLOW_MONTHS_MON"]));
                }
                if ((ds.Tables["WWV_FLOW_MONTHS_MONTH"] != null)) {
                    base.Tables.Add(new WWV_FLOW_MONTHS_MONTHDataTable(ds.Tables["WWV_FLOW_MONTHS_MONTH"]));
                }
                if ((ds.Tables["WWV_FLOW_PLSQL_JOBS"] != null)) {
                    base.Tables.Add(new WWV_FLOW_PLSQL_JOBSDataTable(ds.Tables["WWV_FLOW_PLSQL_JOBS"]));
                }
                if ((ds.Tables["WWV_FLOW_USER_ACTIVITY_LOG"] != null)) {
                    base.Tables.Add(new WWV_FLOW_USER_ACTIVITY_LOGDataTable(ds.Tables["WWV_FLOW_USER_ACTIVITY_LOG"]));
                }
                if ((ds.Tables["WWV_FLOW_USER_MAIL_LOG"] != null)) {
                    base.Tables.Add(new WWV_FLOW_USER_MAIL_LOGDataTable(ds.Tables["WWV_FLOW_USER_MAIL_LOG"]));
                }
                if ((ds.Tables["WWV_FLOW_USER_MAIL_QUEUE"] != null)) {
                    base.Tables.Add(new WWV_FLOW_USER_MAIL_QUEUEDataTable(ds.Tables["WWV_FLOW_USER_MAIL_QUEUE"]));
                }
                if ((ds.Tables["WWV_FLOW_USERS"] != null)) {
                    base.Tables.Add(new WWV_FLOW_USERSDataTable(ds.Tables["WWV_FLOW_USERS"]));
                }
                if ((ds.Tables["WWV_FLOW_YEARS"] != null)) {
                    base.Tables.Add(new WWV_FLOW_YEARSDataTable(ds.Tables["WWV_FLOW_YEARS"]));
                }
                if ((ds.Tables["PASSWORD"] != null)) {
                    base.Tables.Add(new PASSWORDDataTable(ds.Tables["PASSWORD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHAMBERDataTable CHAMBER {
            get {
                return this.tableCHAMBER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DOCTORDataTable DOCTOR {
            get {
                return this.tableDOCTOR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MEDICAL_HISTIRYDataTable MEDICAL_HISTIRY {
            get {
                return this.tableMEDICAL_HISTIRY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PACIENTDataTable PACIENT {
            get {
                return this.tablePACIENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public POSTDataTable POST {
            get {
                return this.tablePOST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PRIEMDataTable PRIEM {
            get {
                return this.tablePRIEM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SPECIALITYDataTable SPECIALITY {
            get {
                return this.tableSPECIALITY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UNITDataTable UNIT {
            get {
                return this.tableUNIT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_DUAL100DataTable WWV_FLOW_DUAL100 {
            get {
                return this.tableWWV_FLOW_DUAL100;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_FIELD_TEMPLATESDataTable WWV_FLOW_FIELD_TEMPLATES {
            get {
                return this.tableWWV_FLOW_FIELD_TEMPLATES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_LIST_OF_VALUES_DATADataTable WWV_FLOW_LIST_OF_VALUES_DATA {
            get {
                return this.tableWWV_FLOW_LIST_OF_VALUES_DATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _WWV_FLOW_LISTS_OF_VALUES_DataTable _WWV_FLOW_LISTS_OF_VALUES_ {
            get {
                return this._tableWWV_FLOW_LISTS_OF_VALUES_;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_LOV_TEMPDataTable WWV_FLOW_LOV_TEMP {
            get {
                return this.tableWWV_FLOW_LOV_TEMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_PATCHESDataTable WWV_FLOW_PATCHES {
            get {
                return this.tableWWV_FLOW_PATCHES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_TEMP_TABLEDataTable WWV_FLOW_TEMP_TABLE {
            get {
                return this.tableWWV_FLOW_TEMP_TABLE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_CLICKTHRU_LOGDataTable WWV_FLOW_CLICKTHRU_LOG {
            get {
                return this.tableWWV_FLOW_CLICKTHRU_LOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_COLLECTIONSDataTable WWV_FLOW_COLLECTIONS {
            get {
                return this.tableWWV_FLOW_COLLECTIONS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_FILESDataTable WWV_FLOW_FILES {
            get {
                return this.tableWWV_FLOW_FILES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_GROUP_USERSDataTable WWV_FLOW_GROUP_USERS {
            get {
                return this.tableWWV_FLOW_GROUP_USERS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_HOURS_12DataTable WWV_FLOW_HOURS_12 {
            get {
                return this.tableWWV_FLOW_HOURS_12;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_HOURS_24DataTable WWV_FLOW_HOURS_24 {
            get {
                return this.tableWWV_FLOW_HOURS_24;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_MINUTESDataTable WWV_FLOW_MINUTES {
            get {
                return this.tableWWV_FLOW_MINUTES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_MINUTES_5DataTable WWV_FLOW_MINUTES_5 {
            get {
                return this.tableWWV_FLOW_MINUTES_5;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_MONTHS_MONDataTable WWV_FLOW_MONTHS_MON {
            get {
                return this.tableWWV_FLOW_MONTHS_MON;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_MONTHS_MONTHDataTable WWV_FLOW_MONTHS_MONTH {
            get {
                return this.tableWWV_FLOW_MONTHS_MONTH;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_PLSQL_JOBSDataTable WWV_FLOW_PLSQL_JOBS {
            get {
                return this.tableWWV_FLOW_PLSQL_JOBS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_USER_ACTIVITY_LOGDataTable WWV_FLOW_USER_ACTIVITY_LOG {
            get {
                return this.tableWWV_FLOW_USER_ACTIVITY_LOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_USER_MAIL_LOGDataTable WWV_FLOW_USER_MAIL_LOG {
            get {
                return this.tableWWV_FLOW_USER_MAIL_LOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_USER_MAIL_QUEUEDataTable WWV_FLOW_USER_MAIL_QUEUE {
            get {
                return this.tableWWV_FLOW_USER_MAIL_QUEUE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_USERSDataTable WWV_FLOW_USERS {
            get {
                return this.tableWWV_FLOW_USERS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WWV_FLOW_YEARSDataTable WWV_FLOW_YEARS {
            get {
                return this.tableWWV_FLOW_YEARS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PASSWORDDataTable PASSWORD {
            get {
                return this.tablePASSWORD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CHAMBER"] != null)) {
                    base.Tables.Add(new CHAMBERDataTable(ds.Tables["CHAMBER"]));
                }
                if ((ds.Tables["DOCTOR"] != null)) {
                    base.Tables.Add(new DOCTORDataTable(ds.Tables["DOCTOR"]));
                }
                if ((ds.Tables["MEDICAL_HISTIRY"] != null)) {
                    base.Tables.Add(new MEDICAL_HISTIRYDataTable(ds.Tables["MEDICAL_HISTIRY"]));
                }
                if ((ds.Tables["PACIENT"] != null)) {
                    base.Tables.Add(new PACIENTDataTable(ds.Tables["PACIENT"]));
                }
                if ((ds.Tables["POST"] != null)) {
                    base.Tables.Add(new POSTDataTable(ds.Tables["POST"]));
                }
                if ((ds.Tables["PRIEM"] != null)) {
                    base.Tables.Add(new PRIEMDataTable(ds.Tables["PRIEM"]));
                }
                if ((ds.Tables["SPECIALITY"] != null)) {
                    base.Tables.Add(new SPECIALITYDataTable(ds.Tables["SPECIALITY"]));
                }
                if ((ds.Tables["UNIT"] != null)) {
                    base.Tables.Add(new UNITDataTable(ds.Tables["UNIT"]));
                }
                if ((ds.Tables["WWV_FLOW_DUAL100"] != null)) {
                    base.Tables.Add(new WWV_FLOW_DUAL100DataTable(ds.Tables["WWV_FLOW_DUAL100"]));
                }
                if ((ds.Tables["WWV_FLOW_FIELD_TEMPLATES"] != null)) {
                    base.Tables.Add(new WWV_FLOW_FIELD_TEMPLATESDataTable(ds.Tables["WWV_FLOW_FIELD_TEMPLATES"]));
                }
                if ((ds.Tables["WWV_FLOW_LIST_OF_VALUES_DATA"] != null)) {
                    base.Tables.Add(new WWV_FLOW_LIST_OF_VALUES_DATADataTable(ds.Tables["WWV_FLOW_LIST_OF_VALUES_DATA"]));
                }
                if ((ds.Tables["WWV_FLOW_LISTS_OF_VALUES$"] != null)) {
                    base.Tables.Add(new _WWV_FLOW_LISTS_OF_VALUES_DataTable(ds.Tables["WWV_FLOW_LISTS_OF_VALUES$"]));
                }
                if ((ds.Tables["WWV_FLOW_LOV_TEMP"] != null)) {
                    base.Tables.Add(new WWV_FLOW_LOV_TEMPDataTable(ds.Tables["WWV_FLOW_LOV_TEMP"]));
                }
                if ((ds.Tables["WWV_FLOW_PATCHES"] != null)) {
                    base.Tables.Add(new WWV_FLOW_PATCHESDataTable(ds.Tables["WWV_FLOW_PATCHES"]));
                }
                if ((ds.Tables["WWV_FLOW_TEMP_TABLE"] != null)) {
                    base.Tables.Add(new WWV_FLOW_TEMP_TABLEDataTable(ds.Tables["WWV_FLOW_TEMP_TABLE"]));
                }
                if ((ds.Tables["WWV_FLOW_CLICKTHRU_LOG"] != null)) {
                    base.Tables.Add(new WWV_FLOW_CLICKTHRU_LOGDataTable(ds.Tables["WWV_FLOW_CLICKTHRU_LOG"]));
                }
                if ((ds.Tables["WWV_FLOW_COLLECTIONS"] != null)) {
                    base.Tables.Add(new WWV_FLOW_COLLECTIONSDataTable(ds.Tables["WWV_FLOW_COLLECTIONS"]));
                }
                if ((ds.Tables["WWV_FLOW_FILES"] != null)) {
                    base.Tables.Add(new WWV_FLOW_FILESDataTable(ds.Tables["WWV_FLOW_FILES"]));
                }
                if ((ds.Tables["WWV_FLOW_GROUP_USERS"] != null)) {
                    base.Tables.Add(new WWV_FLOW_GROUP_USERSDataTable(ds.Tables["WWV_FLOW_GROUP_USERS"]));
                }
                if ((ds.Tables["WWV_FLOW_HOURS_12"] != null)) {
                    base.Tables.Add(new WWV_FLOW_HOURS_12DataTable(ds.Tables["WWV_FLOW_HOURS_12"]));
                }
                if ((ds.Tables["WWV_FLOW_HOURS_24"] != null)) {
                    base.Tables.Add(new WWV_FLOW_HOURS_24DataTable(ds.Tables["WWV_FLOW_HOURS_24"]));
                }
                if ((ds.Tables["WWV_FLOW_MINUTES"] != null)) {
                    base.Tables.Add(new WWV_FLOW_MINUTESDataTable(ds.Tables["WWV_FLOW_MINUTES"]));
                }
                if ((ds.Tables["WWV_FLOW_MINUTES_5"] != null)) {
                    base.Tables.Add(new WWV_FLOW_MINUTES_5DataTable(ds.Tables["WWV_FLOW_MINUTES_5"]));
                }
                if ((ds.Tables["WWV_FLOW_MONTHS_MON"] != null)) {
                    base.Tables.Add(new WWV_FLOW_MONTHS_MONDataTable(ds.Tables["WWV_FLOW_MONTHS_MON"]));
                }
                if ((ds.Tables["WWV_FLOW_MONTHS_MONTH"] != null)) {
                    base.Tables.Add(new WWV_FLOW_MONTHS_MONTHDataTable(ds.Tables["WWV_FLOW_MONTHS_MONTH"]));
                }
                if ((ds.Tables["WWV_FLOW_PLSQL_JOBS"] != null)) {
                    base.Tables.Add(new WWV_FLOW_PLSQL_JOBSDataTable(ds.Tables["WWV_FLOW_PLSQL_JOBS"]));
                }
                if ((ds.Tables["WWV_FLOW_USER_ACTIVITY_LOG"] != null)) {
                    base.Tables.Add(new WWV_FLOW_USER_ACTIVITY_LOGDataTable(ds.Tables["WWV_FLOW_USER_ACTIVITY_LOG"]));
                }
                if ((ds.Tables["WWV_FLOW_USER_MAIL_LOG"] != null)) {
                    base.Tables.Add(new WWV_FLOW_USER_MAIL_LOGDataTable(ds.Tables["WWV_FLOW_USER_MAIL_LOG"]));
                }
                if ((ds.Tables["WWV_FLOW_USER_MAIL_QUEUE"] != null)) {
                    base.Tables.Add(new WWV_FLOW_USER_MAIL_QUEUEDataTable(ds.Tables["WWV_FLOW_USER_MAIL_QUEUE"]));
                }
                if ((ds.Tables["WWV_FLOW_USERS"] != null)) {
                    base.Tables.Add(new WWV_FLOW_USERSDataTable(ds.Tables["WWV_FLOW_USERS"]));
                }
                if ((ds.Tables["WWV_FLOW_YEARS"] != null)) {
                    base.Tables.Add(new WWV_FLOW_YEARSDataTable(ds.Tables["WWV_FLOW_YEARS"]));
                }
                if ((ds.Tables["PASSWORD"] != null)) {
                    base.Tables.Add(new PASSWORDDataTable(ds.Tables["PASSWORD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCHAMBER = ((CHAMBERDataTable)(base.Tables["CHAMBER"]));
            if ((initTable == true)) {
                if ((this.tableCHAMBER != null)) {
                    this.tableCHAMBER.InitVars();
                }
            }
            this.tableDOCTOR = ((DOCTORDataTable)(base.Tables["DOCTOR"]));
            if ((initTable == true)) {
                if ((this.tableDOCTOR != null)) {
                    this.tableDOCTOR.InitVars();
                }
            }
            this.tableMEDICAL_HISTIRY = ((MEDICAL_HISTIRYDataTable)(base.Tables["MEDICAL_HISTIRY"]));
            if ((initTable == true)) {
                if ((this.tableMEDICAL_HISTIRY != null)) {
                    this.tableMEDICAL_HISTIRY.InitVars();
                }
            }
            this.tablePACIENT = ((PACIENTDataTable)(base.Tables["PACIENT"]));
            if ((initTable == true)) {
                if ((this.tablePACIENT != null)) {
                    this.tablePACIENT.InitVars();
                }
            }
            this.tablePOST = ((POSTDataTable)(base.Tables["POST"]));
            if ((initTable == true)) {
                if ((this.tablePOST != null)) {
                    this.tablePOST.InitVars();
                }
            }
            this.tablePRIEM = ((PRIEMDataTable)(base.Tables["PRIEM"]));
            if ((initTable == true)) {
                if ((this.tablePRIEM != null)) {
                    this.tablePRIEM.InitVars();
                }
            }
            this.tableSPECIALITY = ((SPECIALITYDataTable)(base.Tables["SPECIALITY"]));
            if ((initTable == true)) {
                if ((this.tableSPECIALITY != null)) {
                    this.tableSPECIALITY.InitVars();
                }
            }
            this.tableUNIT = ((UNITDataTable)(base.Tables["UNIT"]));
            if ((initTable == true)) {
                if ((this.tableUNIT != null)) {
                    this.tableUNIT.InitVars();
                }
            }
            this.tableWWV_FLOW_DUAL100 = ((WWV_FLOW_DUAL100DataTable)(base.Tables["WWV_FLOW_DUAL100"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_DUAL100 != null)) {
                    this.tableWWV_FLOW_DUAL100.InitVars();
                }
            }
            this.tableWWV_FLOW_FIELD_TEMPLATES = ((WWV_FLOW_FIELD_TEMPLATESDataTable)(base.Tables["WWV_FLOW_FIELD_TEMPLATES"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_FIELD_TEMPLATES != null)) {
                    this.tableWWV_FLOW_FIELD_TEMPLATES.InitVars();
                }
            }
            this.tableWWV_FLOW_LIST_OF_VALUES_DATA = ((WWV_FLOW_LIST_OF_VALUES_DATADataTable)(base.Tables["WWV_FLOW_LIST_OF_VALUES_DATA"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_LIST_OF_VALUES_DATA != null)) {
                    this.tableWWV_FLOW_LIST_OF_VALUES_DATA.InitVars();
                }
            }
            this._tableWWV_FLOW_LISTS_OF_VALUES_ = ((_WWV_FLOW_LISTS_OF_VALUES_DataTable)(base.Tables["WWV_FLOW_LISTS_OF_VALUES$"]));
            if ((initTable == true)) {
                if ((this._tableWWV_FLOW_LISTS_OF_VALUES_ != null)) {
                    this._tableWWV_FLOW_LISTS_OF_VALUES_.InitVars();
                }
            }
            this.tableWWV_FLOW_LOV_TEMP = ((WWV_FLOW_LOV_TEMPDataTable)(base.Tables["WWV_FLOW_LOV_TEMP"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_LOV_TEMP != null)) {
                    this.tableWWV_FLOW_LOV_TEMP.InitVars();
                }
            }
            this.tableWWV_FLOW_PATCHES = ((WWV_FLOW_PATCHESDataTable)(base.Tables["WWV_FLOW_PATCHES"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_PATCHES != null)) {
                    this.tableWWV_FLOW_PATCHES.InitVars();
                }
            }
            this.tableWWV_FLOW_TEMP_TABLE = ((WWV_FLOW_TEMP_TABLEDataTable)(base.Tables["WWV_FLOW_TEMP_TABLE"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_TEMP_TABLE != null)) {
                    this.tableWWV_FLOW_TEMP_TABLE.InitVars();
                }
            }
            this.tableWWV_FLOW_CLICKTHRU_LOG = ((WWV_FLOW_CLICKTHRU_LOGDataTable)(base.Tables["WWV_FLOW_CLICKTHRU_LOG"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_CLICKTHRU_LOG != null)) {
                    this.tableWWV_FLOW_CLICKTHRU_LOG.InitVars();
                }
            }
            this.tableWWV_FLOW_COLLECTIONS = ((WWV_FLOW_COLLECTIONSDataTable)(base.Tables["WWV_FLOW_COLLECTIONS"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_COLLECTIONS != null)) {
                    this.tableWWV_FLOW_COLLECTIONS.InitVars();
                }
            }
            this.tableWWV_FLOW_FILES = ((WWV_FLOW_FILESDataTable)(base.Tables["WWV_FLOW_FILES"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_FILES != null)) {
                    this.tableWWV_FLOW_FILES.InitVars();
                }
            }
            this.tableWWV_FLOW_GROUP_USERS = ((WWV_FLOW_GROUP_USERSDataTable)(base.Tables["WWV_FLOW_GROUP_USERS"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_GROUP_USERS != null)) {
                    this.tableWWV_FLOW_GROUP_USERS.InitVars();
                }
            }
            this.tableWWV_FLOW_HOURS_12 = ((WWV_FLOW_HOURS_12DataTable)(base.Tables["WWV_FLOW_HOURS_12"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_HOURS_12 != null)) {
                    this.tableWWV_FLOW_HOURS_12.InitVars();
                }
            }
            this.tableWWV_FLOW_HOURS_24 = ((WWV_FLOW_HOURS_24DataTable)(base.Tables["WWV_FLOW_HOURS_24"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_HOURS_24 != null)) {
                    this.tableWWV_FLOW_HOURS_24.InitVars();
                }
            }
            this.tableWWV_FLOW_MINUTES = ((WWV_FLOW_MINUTESDataTable)(base.Tables["WWV_FLOW_MINUTES"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_MINUTES != null)) {
                    this.tableWWV_FLOW_MINUTES.InitVars();
                }
            }
            this.tableWWV_FLOW_MINUTES_5 = ((WWV_FLOW_MINUTES_5DataTable)(base.Tables["WWV_FLOW_MINUTES_5"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_MINUTES_5 != null)) {
                    this.tableWWV_FLOW_MINUTES_5.InitVars();
                }
            }
            this.tableWWV_FLOW_MONTHS_MON = ((WWV_FLOW_MONTHS_MONDataTable)(base.Tables["WWV_FLOW_MONTHS_MON"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_MONTHS_MON != null)) {
                    this.tableWWV_FLOW_MONTHS_MON.InitVars();
                }
            }
            this.tableWWV_FLOW_MONTHS_MONTH = ((WWV_FLOW_MONTHS_MONTHDataTable)(base.Tables["WWV_FLOW_MONTHS_MONTH"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_MONTHS_MONTH != null)) {
                    this.tableWWV_FLOW_MONTHS_MONTH.InitVars();
                }
            }
            this.tableWWV_FLOW_PLSQL_JOBS = ((WWV_FLOW_PLSQL_JOBSDataTable)(base.Tables["WWV_FLOW_PLSQL_JOBS"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_PLSQL_JOBS != null)) {
                    this.tableWWV_FLOW_PLSQL_JOBS.InitVars();
                }
            }
            this.tableWWV_FLOW_USER_ACTIVITY_LOG = ((WWV_FLOW_USER_ACTIVITY_LOGDataTable)(base.Tables["WWV_FLOW_USER_ACTIVITY_LOG"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_USER_ACTIVITY_LOG != null)) {
                    this.tableWWV_FLOW_USER_ACTIVITY_LOG.InitVars();
                }
            }
            this.tableWWV_FLOW_USER_MAIL_LOG = ((WWV_FLOW_USER_MAIL_LOGDataTable)(base.Tables["WWV_FLOW_USER_MAIL_LOG"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_USER_MAIL_LOG != null)) {
                    this.tableWWV_FLOW_USER_MAIL_LOG.InitVars();
                }
            }
            this.tableWWV_FLOW_USER_MAIL_QUEUE = ((WWV_FLOW_USER_MAIL_QUEUEDataTable)(base.Tables["WWV_FLOW_USER_MAIL_QUEUE"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_USER_MAIL_QUEUE != null)) {
                    this.tableWWV_FLOW_USER_MAIL_QUEUE.InitVars();
                }
            }
            this.tableWWV_FLOW_USERS = ((WWV_FLOW_USERSDataTable)(base.Tables["WWV_FLOW_USERS"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_USERS != null)) {
                    this.tableWWV_FLOW_USERS.InitVars();
                }
            }
            this.tableWWV_FLOW_YEARS = ((WWV_FLOW_YEARSDataTable)(base.Tables["WWV_FLOW_YEARS"]));
            if ((initTable == true)) {
                if ((this.tableWWV_FLOW_YEARS != null)) {
                    this.tableWWV_FLOW_YEARS.InitVars();
                }
            }
            this.tablePASSWORD = ((PASSWORDDataTable)(base.Tables["PASSWORD"]));
            if ((initTable == true)) {
                if ((this.tablePASSWORD != null)) {
                    this.tablePASSWORD.InitVars();
                }
            }
            this.relationA = this.Relations["A"];
            this.relationB = this.Relations["B"];
            this.relationDOCTOR_R01 = this.Relations["DOCTOR_R01"];
            this.relationASS = this.Relations["ASS"];
            this.relationPRIEM_R011 = this.Relations["PRIEM_R011"];
            this.relationUNIT_R012 = this.Relations["UNIT_R012"];
            this.relationWWV_FLOW_LOV_DATA_FK = this.Relations["WWV_FLOW_LOV_DATA_FK"];
            this.relationpcient_PRIEM = this.Relations["pcient_PRIEM"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCHAMBER = new CHAMBERDataTable();
            base.Tables.Add(this.tableCHAMBER);
            this.tableDOCTOR = new DOCTORDataTable();
            base.Tables.Add(this.tableDOCTOR);
            this.tableMEDICAL_HISTIRY = new MEDICAL_HISTIRYDataTable();
            base.Tables.Add(this.tableMEDICAL_HISTIRY);
            this.tablePACIENT = new PACIENTDataTable();
            base.Tables.Add(this.tablePACIENT);
            this.tablePOST = new POSTDataTable();
            base.Tables.Add(this.tablePOST);
            this.tablePRIEM = new PRIEMDataTable();
            base.Tables.Add(this.tablePRIEM);
            this.tableSPECIALITY = new SPECIALITYDataTable();
            base.Tables.Add(this.tableSPECIALITY);
            this.tableUNIT = new UNITDataTable();
            base.Tables.Add(this.tableUNIT);
            this.tableWWV_FLOW_DUAL100 = new WWV_FLOW_DUAL100DataTable();
            base.Tables.Add(this.tableWWV_FLOW_DUAL100);
            this.tableWWV_FLOW_FIELD_TEMPLATES = new WWV_FLOW_FIELD_TEMPLATESDataTable();
            base.Tables.Add(this.tableWWV_FLOW_FIELD_TEMPLATES);
            this.tableWWV_FLOW_LIST_OF_VALUES_DATA = new WWV_FLOW_LIST_OF_VALUES_DATADataTable();
            base.Tables.Add(this.tableWWV_FLOW_LIST_OF_VALUES_DATA);
            this._tableWWV_FLOW_LISTS_OF_VALUES_ = new _WWV_FLOW_LISTS_OF_VALUES_DataTable();
            base.Tables.Add(this._tableWWV_FLOW_LISTS_OF_VALUES_);
            this.tableWWV_FLOW_LOV_TEMP = new WWV_FLOW_LOV_TEMPDataTable();
            base.Tables.Add(this.tableWWV_FLOW_LOV_TEMP);
            this.tableWWV_FLOW_PATCHES = new WWV_FLOW_PATCHESDataTable();
            base.Tables.Add(this.tableWWV_FLOW_PATCHES);
            this.tableWWV_FLOW_TEMP_TABLE = new WWV_FLOW_TEMP_TABLEDataTable();
            base.Tables.Add(this.tableWWV_FLOW_TEMP_TABLE);
            this.tableWWV_FLOW_CLICKTHRU_LOG = new WWV_FLOW_CLICKTHRU_LOGDataTable();
            base.Tables.Add(this.tableWWV_FLOW_CLICKTHRU_LOG);
            this.tableWWV_FLOW_COLLECTIONS = new WWV_FLOW_COLLECTIONSDataTable();
            base.Tables.Add(this.tableWWV_FLOW_COLLECTIONS);
            this.tableWWV_FLOW_FILES = new WWV_FLOW_FILESDataTable();
            base.Tables.Add(this.tableWWV_FLOW_FILES);
            this.tableWWV_FLOW_GROUP_USERS = new WWV_FLOW_GROUP_USERSDataTable();
            base.Tables.Add(this.tableWWV_FLOW_GROUP_USERS);
            this.tableWWV_FLOW_HOURS_12 = new WWV_FLOW_HOURS_12DataTable();
            base.Tables.Add(this.tableWWV_FLOW_HOURS_12);
            this.tableWWV_FLOW_HOURS_24 = new WWV_FLOW_HOURS_24DataTable();
            base.Tables.Add(this.tableWWV_FLOW_HOURS_24);
            this.tableWWV_FLOW_MINUTES = new WWV_FLOW_MINUTESDataTable();
            base.Tables.Add(this.tableWWV_FLOW_MINUTES);
            this.tableWWV_FLOW_MINUTES_5 = new WWV_FLOW_MINUTES_5DataTable();
            base.Tables.Add(this.tableWWV_FLOW_MINUTES_5);
            this.tableWWV_FLOW_MONTHS_MON = new WWV_FLOW_MONTHS_MONDataTable();
            base.Tables.Add(this.tableWWV_FLOW_MONTHS_MON);
            this.tableWWV_FLOW_MONTHS_MONTH = new WWV_FLOW_MONTHS_MONTHDataTable();
            base.Tables.Add(this.tableWWV_FLOW_MONTHS_MONTH);
            this.tableWWV_FLOW_PLSQL_JOBS = new WWV_FLOW_PLSQL_JOBSDataTable();
            base.Tables.Add(this.tableWWV_FLOW_PLSQL_JOBS);
            this.tableWWV_FLOW_USER_ACTIVITY_LOG = new WWV_FLOW_USER_ACTIVITY_LOGDataTable();
            base.Tables.Add(this.tableWWV_FLOW_USER_ACTIVITY_LOG);
            this.tableWWV_FLOW_USER_MAIL_LOG = new WWV_FLOW_USER_MAIL_LOGDataTable();
            base.Tables.Add(this.tableWWV_FLOW_USER_MAIL_LOG);
            this.tableWWV_FLOW_USER_MAIL_QUEUE = new WWV_FLOW_USER_MAIL_QUEUEDataTable();
            base.Tables.Add(this.tableWWV_FLOW_USER_MAIL_QUEUE);
            this.tableWWV_FLOW_USERS = new WWV_FLOW_USERSDataTable();
            base.Tables.Add(this.tableWWV_FLOW_USERS);
            this.tableWWV_FLOW_YEARS = new WWV_FLOW_YEARSDataTable();
            base.Tables.Add(this.tableWWV_FLOW_YEARS);
            this.tablePASSWORD = new PASSWORDDataTable();
            base.Tables.Add(this.tablePASSWORD);
            this.relationA = new global::System.Data.DataRelation("A", new global::System.Data.DataColumn[] {
                        this.tableUNIT.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDOCTOR.UNIT_IDColumn}, false);
            this.Relations.Add(this.relationA);
            this.relationB = new global::System.Data.DataRelation("B", new global::System.Data.DataColumn[] {
                        this.tablePOST.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDOCTOR.POST_IDColumn}, false);
            this.Relations.Add(this.relationB);
            this.relationDOCTOR_R01 = new global::System.Data.DataRelation("DOCTOR_R01", new global::System.Data.DataColumn[] {
                        this.tableSPECIALITY.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDOCTOR.SPECIALTY_IDColumn}, false);
            this.Relations.Add(this.relationDOCTOR_R01);
            this.relationASS = new global::System.Data.DataRelation("ASS", new global::System.Data.DataColumn[] {
                        this.tablePRIEM.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableMEDICAL_HISTIRY.PRIEM_IDColumn}, false);
            this.Relations.Add(this.relationASS);
            this.relationPRIEM_R011 = new global::System.Data.DataRelation("PRIEM_R011", new global::System.Data.DataColumn[] {
                        this.tableDOCTOR.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tablePRIEM.DOCTOR_IDColumn}, false);
            this.Relations.Add(this.relationPRIEM_R011);
            this.relationUNIT_R012 = new global::System.Data.DataRelation("UNIT_R012", new global::System.Data.DataColumn[] {
                        this.tableDOCTOR.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableUNIT.MANAGER_IDColumn}, false);
            this.Relations.Add(this.relationUNIT_R012);
            this.relationWWV_FLOW_LOV_DATA_FK = new global::System.Data.DataRelation("WWV_FLOW_LOV_DATA_FK", new global::System.Data.DataColumn[] {
                        this._tableWWV_FLOW_LISTS_OF_VALUES_.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_IDColumn}, false);
            this.Relations.Add(this.relationWWV_FLOW_LOV_DATA_FK);
            this.relationpcient_PRIEM = new global::System.Data.DataRelation("pcient_PRIEM", new global::System.Data.DataColumn[] {
                        this.tablePACIENT.Номер_картыColumn}, new global::System.Data.DataColumn[] {
                        this.tablePRIEM.IDColumn}, false);
            this.Relations.Add(this.relationpcient_PRIEM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCHAMBER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDOCTOR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMEDICAL_HISTIRY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePACIENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePOST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePRIEM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSPECIALITY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUNIT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_DUAL100() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_FIELD_TEMPLATES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_LIST_OF_VALUES_DATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_WWV_FLOW_LISTS_OF_VALUES_() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_LOV_TEMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_PATCHES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_TEMP_TABLE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_CLICKTHRU_LOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_COLLECTIONS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_FILES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_GROUP_USERS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_HOURS_12() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_HOURS_24() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_MINUTES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_MINUTES_5() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_MONTHS_MON() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_MONTHS_MONTH() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_PLSQL_JOBS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_USER_ACTIVITY_LOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_USER_MAIL_LOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_USER_MAIL_QUEUE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_USERS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWWV_FLOW_YEARS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePASSWORD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CHAMBERRowChangeEventHandler(object sender, CHAMBERRowChangeEvent e);
        
        public delegate void DOCTORRowChangeEventHandler(object sender, DOCTORRowChangeEvent e);
        
        public delegate void MEDICAL_HISTIRYRowChangeEventHandler(object sender, MEDICAL_HISTIRYRowChangeEvent e);
        
        public delegate void PACIENTRowChangeEventHandler(object sender, PACIENTRowChangeEvent e);
        
        public delegate void POSTRowChangeEventHandler(object sender, POSTRowChangeEvent e);
        
        public delegate void PRIEMRowChangeEventHandler(object sender, PRIEMRowChangeEvent e);
        
        public delegate void SPECIALITYRowChangeEventHandler(object sender, SPECIALITYRowChangeEvent e);
        
        public delegate void UNITRowChangeEventHandler(object sender, UNITRowChangeEvent e);
        
        public delegate void WWV_FLOW_DUAL100RowChangeEventHandler(object sender, WWV_FLOW_DUAL100RowChangeEvent e);
        
        public delegate void WWV_FLOW_FIELD_TEMPLATESRowChangeEventHandler(object sender, WWV_FLOW_FIELD_TEMPLATESRowChangeEvent e);
        
        public delegate void WWV_FLOW_LIST_OF_VALUES_DATARowChangeEventHandler(object sender, WWV_FLOW_LIST_OF_VALUES_DATARowChangeEvent e);
        
        public delegate void _WWV_FLOW_LISTS_OF_VALUES_RowChangeEventHandler(object sender, _WWV_FLOW_LISTS_OF_VALUES_RowChangeEvent e);
        
        public delegate void WWV_FLOW_LOV_TEMPRowChangeEventHandler(object sender, WWV_FLOW_LOV_TEMPRowChangeEvent e);
        
        public delegate void WWV_FLOW_PATCHESRowChangeEventHandler(object sender, WWV_FLOW_PATCHESRowChangeEvent e);
        
        public delegate void WWV_FLOW_TEMP_TABLERowChangeEventHandler(object sender, WWV_FLOW_TEMP_TABLERowChangeEvent e);
        
        public delegate void WWV_FLOW_CLICKTHRU_LOGRowChangeEventHandler(object sender, WWV_FLOW_CLICKTHRU_LOGRowChangeEvent e);
        
        public delegate void WWV_FLOW_COLLECTIONSRowChangeEventHandler(object sender, WWV_FLOW_COLLECTIONSRowChangeEvent e);
        
        public delegate void WWV_FLOW_FILESRowChangeEventHandler(object sender, WWV_FLOW_FILESRowChangeEvent e);
        
        public delegate void WWV_FLOW_GROUP_USERSRowChangeEventHandler(object sender, WWV_FLOW_GROUP_USERSRowChangeEvent e);
        
        public delegate void WWV_FLOW_HOURS_12RowChangeEventHandler(object sender, WWV_FLOW_HOURS_12RowChangeEvent e);
        
        public delegate void WWV_FLOW_HOURS_24RowChangeEventHandler(object sender, WWV_FLOW_HOURS_24RowChangeEvent e);
        
        public delegate void WWV_FLOW_MINUTESRowChangeEventHandler(object sender, WWV_FLOW_MINUTESRowChangeEvent e);
        
        public delegate void WWV_FLOW_MINUTES_5RowChangeEventHandler(object sender, WWV_FLOW_MINUTES_5RowChangeEvent e);
        
        public delegate void WWV_FLOW_MONTHS_MONRowChangeEventHandler(object sender, WWV_FLOW_MONTHS_MONRowChangeEvent e);
        
        public delegate void WWV_FLOW_MONTHS_MONTHRowChangeEventHandler(object sender, WWV_FLOW_MONTHS_MONTHRowChangeEvent e);
        
        public delegate void WWV_FLOW_PLSQL_JOBSRowChangeEventHandler(object sender, WWV_FLOW_PLSQL_JOBSRowChangeEvent e);
        
        public delegate void WWV_FLOW_USER_ACTIVITY_LOGRowChangeEventHandler(object sender, WWV_FLOW_USER_ACTIVITY_LOGRowChangeEvent e);
        
        public delegate void WWV_FLOW_USER_MAIL_LOGRowChangeEventHandler(object sender, WWV_FLOW_USER_MAIL_LOGRowChangeEvent e);
        
        public delegate void WWV_FLOW_USER_MAIL_QUEUERowChangeEventHandler(object sender, WWV_FLOW_USER_MAIL_QUEUERowChangeEvent e);
        
        public delegate void WWV_FLOW_USERSRowChangeEventHandler(object sender, WWV_FLOW_USERSRowChangeEvent e);
        
        public delegate void WWV_FLOW_YEARSRowChangeEventHandler(object sender, WWV_FLOW_YEARSRowChangeEvent e);
        
        public delegate void PASSWORDRowChangeEventHandler(object sender, PASSWORDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CHAMBERDataTable : global::System.Data.TypedTableBase<CHAMBERRow> {
            
            private global::System.Data.DataColumn columnНомер_палаты;
            
            private global::System.Data.DataColumn columnОТДЕЛЕНИЕ;
            
            private global::System.Data.DataColumn columnКоличество_коек;
            
            private global::System.Data.DataColumn columnСвободно_коек;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHAMBERDataTable() {
                this.TableName = "CHAMBER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHAMBERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CHAMBERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Номер_палатыColumn {
                get {
                    return this.columnНомер_палаты;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ОТДЕЛЕНИЕColumn {
                get {
                    return this.columnОТДЕЛЕНИЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Количество_коекColumn {
                get {
                    return this.columnКоличество_коек;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Свободно_коекColumn {
                get {
                    return this.columnСвободно_коек;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHAMBERRow this[int index] {
                get {
                    return ((CHAMBERRow)(this.Rows[index]));
                }
            }
            
            public event CHAMBERRowChangeEventHandler CHAMBERRowChanging;
            
            public event CHAMBERRowChangeEventHandler CHAMBERRowChanged;
            
            public event CHAMBERRowChangeEventHandler CHAMBERRowDeleting;
            
            public event CHAMBERRowChangeEventHandler CHAMBERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCHAMBERRow(CHAMBERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHAMBERRow AddCHAMBERRow(decimal Номер_палаты, decimal ОТДЕЛЕНИЕ, decimal Количество_коек, decimal Свободно_коек) {
                CHAMBERRow rowCHAMBERRow = ((CHAMBERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Номер_палаты,
                        ОТДЕЛЕНИЕ,
                        Количество_коек,
                        Свободно_коек};
                rowCHAMBERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCHAMBERRow);
                return rowCHAMBERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHAMBERRow FindByНомер_палаты(decimal Номер_палаты) {
                return ((CHAMBERRow)(this.Rows.Find(new object[] {
                            Номер_палаты})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CHAMBERDataTable cln = ((CHAMBERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CHAMBERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnНомер_палаты = base.Columns["Номер палаты"];
                this.columnОТДЕЛЕНИЕ = base.Columns["ОТДЕЛЕНИЕ"];
                this.columnКоличество_коек = base.Columns["Количество коек"];
                this.columnСвободно_коек = base.Columns["Свободно коек"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnНомер_палаты = new global::System.Data.DataColumn("Номер палаты", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_палаты);
                this.columnОТДЕЛЕНИЕ = new global::System.Data.DataColumn("ОТДЕЛЕНИЕ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОТДЕЛЕНИЕ);
                this.columnКоличество_коек = new global::System.Data.DataColumn("Количество коек", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество_коек);
                this.columnСвободно_коек = new global::System.Data.DataColumn("Свободно коек", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСвободно_коек);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnНомер_палаты}, true));
                this.columnНомер_палаты.AllowDBNull = false;
                this.columnНомер_палаты.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHAMBERRow NewCHAMBERRow() {
                return ((CHAMBERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CHAMBERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CHAMBERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHAMBERRowChanged != null)) {
                    this.CHAMBERRowChanged(this, new CHAMBERRowChangeEvent(((CHAMBERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHAMBERRowChanging != null)) {
                    this.CHAMBERRowChanging(this, new CHAMBERRowChangeEvent(((CHAMBERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHAMBERRowDeleted != null)) {
                    this.CHAMBERRowDeleted(this, new CHAMBERRowChangeEvent(((CHAMBERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHAMBERRowDeleting != null)) {
                    this.CHAMBERRowDeleting(this, new CHAMBERRowChangeEvent(((CHAMBERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCHAMBERRow(CHAMBERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CHAMBERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DOCTORDataTable : global::System.Data.TypedTableBase<DOCTORRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSURNAME;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnOTCHESTVO;
            
            private global::System.Data.DataColumn columnSPECIALTY_ID;
            
            private global::System.Data.DataColumn columnUNIT_ID;
            
            private global::System.Data.DataColumn columnPOST_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOCTORDataTable() {
                this.TableName = "DOCTOR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DOCTORDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DOCTORDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SURNAMEColumn {
                get {
                    return this.columnSURNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OTCHESTVOColumn {
                get {
                    return this.columnOTCHESTVO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPECIALTY_IDColumn {
                get {
                    return this.columnSPECIALTY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNIT_IDColumn {
                get {
                    return this.columnUNIT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POST_IDColumn {
                get {
                    return this.columnPOST_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOCTORRow this[int index] {
                get {
                    return ((DOCTORRow)(this.Rows[index]));
                }
            }
            
            public event DOCTORRowChangeEventHandler DOCTORRowChanging;
            
            public event DOCTORRowChangeEventHandler DOCTORRowChanged;
            
            public event DOCTORRowChangeEventHandler DOCTORRowDeleting;
            
            public event DOCTORRowChangeEventHandler DOCTORRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDOCTORRow(DOCTORRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOCTORRow AddDOCTORRow(decimal ID, string SURNAME, string NAME, string OTCHESTVO, SPECIALITYRow parentSPECIALITYRowByDOCTOR_R01, UNITRow parentUNITRowByA, POSTRow parentPOSTRowByB) {
                DOCTORRow rowDOCTORRow = ((DOCTORRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        SURNAME,
                        NAME,
                        OTCHESTVO,
                        null,
                        null,
                        null};
                if ((parentSPECIALITYRowByDOCTOR_R01 != null)) {
                    columnValuesArray[4] = parentSPECIALITYRowByDOCTOR_R01[0];
                }
                if ((parentUNITRowByA != null)) {
                    columnValuesArray[5] = parentUNITRowByA[0];
                }
                if ((parentPOSTRowByB != null)) {
                    columnValuesArray[6] = parentPOSTRowByB[0];
                }
                rowDOCTORRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDOCTORRow);
                return rowDOCTORRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOCTORRow FindByID(decimal ID) {
                return ((DOCTORRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DOCTORDataTable cln = ((DOCTORDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DOCTORDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSURNAME = base.Columns["SURNAME"];
                this.columnNAME = base.Columns["NAME"];
                this.columnOTCHESTVO = base.Columns["OTCHESTVO"];
                this.columnSPECIALTY_ID = base.Columns["SPECIALTY_ID"];
                this.columnUNIT_ID = base.Columns["UNIT_ID"];
                this.columnPOST_ID = base.Columns["POST_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSURNAME = new global::System.Data.DataColumn("SURNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSURNAME);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnOTCHESTVO = new global::System.Data.DataColumn("OTCHESTVO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTCHESTVO);
                this.columnSPECIALTY_ID = new global::System.Data.DataColumn("SPECIALTY_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECIALTY_ID);
                this.columnUNIT_ID = new global::System.Data.DataColumn("UNIT_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_ID);
                this.columnPOST_ID = new global::System.Data.DataColumn("POST_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOST_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnSURNAME.MaxLength = 25;
                this.columnNAME.MaxLength = 25;
                this.columnOTCHESTVO.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOCTORRow NewDOCTORRow() {
                return ((DOCTORRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DOCTORRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DOCTORRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DOCTORRowChanged != null)) {
                    this.DOCTORRowChanged(this, new DOCTORRowChangeEvent(((DOCTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DOCTORRowChanging != null)) {
                    this.DOCTORRowChanging(this, new DOCTORRowChangeEvent(((DOCTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DOCTORRowDeleted != null)) {
                    this.DOCTORRowDeleted(this, new DOCTORRowChangeEvent(((DOCTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DOCTORRowDeleting != null)) {
                    this.DOCTORRowDeleting(this, new DOCTORRowChangeEvent(((DOCTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDOCTORRow(DOCTORRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DOCTORDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MEDICAL_HISTIRYDataTable : global::System.Data.TypedTableBase<MEDICAL_HISTIRYRow> {
            
            private global::System.Data.DataColumn columnPRIEM_ID;
            
            private global::System.Data.DataColumn columnDATE_VIPISKI;
            
            private global::System.Data.DataColumn columnLECH_DOCTOR_ID;
            
            private global::System.Data.DataColumn columnCOMPLAINS;
            
            private global::System.Data.DataColumn columnOSMOTR;
            
            private global::System.Data.DataColumn columnDIAGNISIS;
            
            private global::System.Data.DataColumn columnMEDICATION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEDICAL_HISTIRYDataTable() {
                this.TableName = "MEDICAL_HISTIRY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MEDICAL_HISTIRYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MEDICAL_HISTIRYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRIEM_IDColumn {
                get {
                    return this.columnPRIEM_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATE_VIPISKIColumn {
                get {
                    return this.columnDATE_VIPISKI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LECH_DOCTOR_IDColumn {
                get {
                    return this.columnLECH_DOCTOR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPLAINSColumn {
                get {
                    return this.columnCOMPLAINS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSMOTRColumn {
                get {
                    return this.columnOSMOTR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DIAGNISISColumn {
                get {
                    return this.columnDIAGNISIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEDICATIONColumn {
                get {
                    return this.columnMEDICATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEDICAL_HISTIRYRow this[int index] {
                get {
                    return ((MEDICAL_HISTIRYRow)(this.Rows[index]));
                }
            }
            
            public event MEDICAL_HISTIRYRowChangeEventHandler MEDICAL_HISTIRYRowChanging;
            
            public event MEDICAL_HISTIRYRowChangeEventHandler MEDICAL_HISTIRYRowChanged;
            
            public event MEDICAL_HISTIRYRowChangeEventHandler MEDICAL_HISTIRYRowDeleting;
            
            public event MEDICAL_HISTIRYRowChangeEventHandler MEDICAL_HISTIRYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMEDICAL_HISTIRYRow(MEDICAL_HISTIRYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEDICAL_HISTIRYRow AddMEDICAL_HISTIRYRow(PRIEMRow parentPRIEMRowByASS, System.DateTime DATE_VIPISKI, decimal LECH_DOCTOR_ID, string COMPLAINS, string OSMOTR, string DIAGNISIS, string MEDICATION) {
                MEDICAL_HISTIRYRow rowMEDICAL_HISTIRYRow = ((MEDICAL_HISTIRYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DATE_VIPISKI,
                        LECH_DOCTOR_ID,
                        COMPLAINS,
                        OSMOTR,
                        DIAGNISIS,
                        MEDICATION};
                if ((parentPRIEMRowByASS != null)) {
                    columnValuesArray[0] = parentPRIEMRowByASS[0];
                }
                rowMEDICAL_HISTIRYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMEDICAL_HISTIRYRow);
                return rowMEDICAL_HISTIRYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEDICAL_HISTIRYRow FindByPRIEM_ID(decimal PRIEM_ID) {
                return ((MEDICAL_HISTIRYRow)(this.Rows.Find(new object[] {
                            PRIEM_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MEDICAL_HISTIRYDataTable cln = ((MEDICAL_HISTIRYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MEDICAL_HISTIRYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPRIEM_ID = base.Columns["PRIEM_ID"];
                this.columnDATE_VIPISKI = base.Columns["DATE_VIPISKI"];
                this.columnLECH_DOCTOR_ID = base.Columns["LECH_DOCTOR_ID"];
                this.columnCOMPLAINS = base.Columns["COMPLAINS"];
                this.columnOSMOTR = base.Columns["OSMOTR"];
                this.columnDIAGNISIS = base.Columns["DIAGNISIS"];
                this.columnMEDICATION = base.Columns["MEDICATION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPRIEM_ID = new global::System.Data.DataColumn("PRIEM_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIEM_ID);
                this.columnDATE_VIPISKI = new global::System.Data.DataColumn("DATE_VIPISKI", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_VIPISKI);
                this.columnLECH_DOCTOR_ID = new global::System.Data.DataColumn("LECH_DOCTOR_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLECH_DOCTOR_ID);
                this.columnCOMPLAINS = new global::System.Data.DataColumn("COMPLAINS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPLAINS);
                this.columnOSMOTR = new global::System.Data.DataColumn("OSMOTR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSMOTR);
                this.columnDIAGNISIS = new global::System.Data.DataColumn("DIAGNISIS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIAGNISIS);
                this.columnMEDICATION = new global::System.Data.DataColumn("MEDICATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEDICATION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPRIEM_ID}, true));
                this.columnPRIEM_ID.AllowDBNull = false;
                this.columnPRIEM_ID.Unique = true;
                this.columnCOMPLAINS.MaxLength = 800;
                this.columnOSMOTR.MaxLength = 2000;
                this.columnDIAGNISIS.MaxLength = 200;
                this.columnMEDICATION.MaxLength = 2000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEDICAL_HISTIRYRow NewMEDICAL_HISTIRYRow() {
                return ((MEDICAL_HISTIRYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MEDICAL_HISTIRYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MEDICAL_HISTIRYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MEDICAL_HISTIRYRowChanged != null)) {
                    this.MEDICAL_HISTIRYRowChanged(this, new MEDICAL_HISTIRYRowChangeEvent(((MEDICAL_HISTIRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MEDICAL_HISTIRYRowChanging != null)) {
                    this.MEDICAL_HISTIRYRowChanging(this, new MEDICAL_HISTIRYRowChangeEvent(((MEDICAL_HISTIRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MEDICAL_HISTIRYRowDeleted != null)) {
                    this.MEDICAL_HISTIRYRowDeleted(this, new MEDICAL_HISTIRYRowChangeEvent(((MEDICAL_HISTIRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MEDICAL_HISTIRYRowDeleting != null)) {
                    this.MEDICAL_HISTIRYRowDeleting(this, new MEDICAL_HISTIRYRowChangeEvent(((MEDICAL_HISTIRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMEDICAL_HISTIRYRow(MEDICAL_HISTIRYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MEDICAL_HISTIRYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PACIENTDataTable : global::System.Data.TypedTableBase<PACIENTRow> {
            
            private global::System.Data.DataColumn columnФАМИЛИЯ;
            
            private global::System.Data.DataColumn columnИМЯ;
            
            private global::System.Data.DataColumn columnОТЧЕСТВО;
            
            private global::System.Data.DataColumn columnНомер_карты;
            
            private global::System.Data.DataColumn columnНомер_полиса;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACIENTDataTable() {
                this.TableName = "PACIENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PACIENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PACIENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ФАМИЛИЯColumn {
                get {
                    return this.columnФАМИЛИЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ИМЯColumn {
                get {
                    return this.columnИМЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ОТЧЕСТВОColumn {
                get {
                    return this.columnОТЧЕСТВО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Номер_картыColumn {
                get {
                    return this.columnНомер_карты;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Номер_полисаColumn {
                get {
                    return this.columnНомер_полиса;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACIENTRow this[int index] {
                get {
                    return ((PACIENTRow)(this.Rows[index]));
                }
            }
            
            public event PACIENTRowChangeEventHandler PACIENTRowChanging;
            
            public event PACIENTRowChangeEventHandler PACIENTRowChanged;
            
            public event PACIENTRowChangeEventHandler PACIENTRowDeleting;
            
            public event PACIENTRowChangeEventHandler PACIENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPACIENTRow(PACIENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACIENTRow AddPACIENTRow(string ФАМИЛИЯ, string ИМЯ, string ОТЧЕСТВО, decimal Номер_карты, decimal Номер_полиса) {
                PACIENTRow rowPACIENTRow = ((PACIENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ФАМИЛИЯ,
                        ИМЯ,
                        ОТЧЕСТВО,
                        Номер_карты,
                        Номер_полиса};
                rowPACIENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPACIENTRow);
                return rowPACIENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACIENTRow FindByНомер_карты(decimal Номер_карты) {
                return ((PACIENTRow)(this.Rows.Find(new object[] {
                            Номер_карты})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PACIENTDataTable cln = ((PACIENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PACIENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnФАМИЛИЯ = base.Columns["ФАМИЛИЯ"];
                this.columnИМЯ = base.Columns["ИМЯ"];
                this.columnОТЧЕСТВО = base.Columns["ОТЧЕСТВО"];
                this.columnНомер_карты = base.Columns["Номер карты"];
                this.columnНомер_полиса = base.Columns["Номер полиса"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnФАМИЛИЯ = new global::System.Data.DataColumn("ФАМИЛИЯ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФАМИЛИЯ);
                this.columnИМЯ = new global::System.Data.DataColumn("ИМЯ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИМЯ);
                this.columnОТЧЕСТВО = new global::System.Data.DataColumn("ОТЧЕСТВО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОТЧЕСТВО);
                this.columnНомер_карты = new global::System.Data.DataColumn("Номер карты", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_карты);
                this.columnНомер_полиса = new global::System.Data.DataColumn("Номер полиса", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_полиса);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnНомер_карты}, true));
                this.columnФАМИЛИЯ.MaxLength = 25;
                this.columnИМЯ.MaxLength = 25;
                this.columnОТЧЕСТВО.MaxLength = 50;
                this.columnНомер_карты.AllowDBNull = false;
                this.columnНомер_карты.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACIENTRow NewPACIENTRow() {
                return ((PACIENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PACIENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PACIENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PACIENTRowChanged != null)) {
                    this.PACIENTRowChanged(this, new PACIENTRowChangeEvent(((PACIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PACIENTRowChanging != null)) {
                    this.PACIENTRowChanging(this, new PACIENTRowChangeEvent(((PACIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PACIENTRowDeleted != null)) {
                    this.PACIENTRowDeleted(this, new PACIENTRowChangeEvent(((PACIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PACIENTRowDeleting != null)) {
                    this.PACIENTRowDeleting(this, new PACIENTRowChangeEvent(((PACIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePACIENTRow(PACIENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PACIENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class POSTDataTable : global::System.Data.TypedTableBase<POSTRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnNAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POSTDataTable() {
                this.TableName = "POST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POSTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected POSTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POSTRow this[int index] {
                get {
                    return ((POSTRow)(this.Rows[index]));
                }
            }
            
            public event POSTRowChangeEventHandler POSTRowChanging;
            
            public event POSTRowChangeEventHandler POSTRowChanged;
            
            public event POSTRowChangeEventHandler POSTRowDeleting;
            
            public event POSTRowChangeEventHandler POSTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPOSTRow(POSTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POSTRow AddPOSTRow(decimal ID, string NAME) {
                POSTRow rowPOSTRow = ((POSTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        NAME};
                rowPOSTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPOSTRow);
                return rowPOSTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POSTRow FindByID(decimal ID) {
                return ((POSTRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                POSTDataTable cln = ((POSTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new POSTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnNAME = base.Columns["NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnNAME.MaxLength = 22;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POSTRow NewPOSTRow() {
                return ((POSTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new POSTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(POSTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.POSTRowChanged != null)) {
                    this.POSTRowChanged(this, new POSTRowChangeEvent(((POSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.POSTRowChanging != null)) {
                    this.POSTRowChanging(this, new POSTRowChangeEvent(((POSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.POSTRowDeleted != null)) {
                    this.POSTRowDeleted(this, new POSTRowChangeEvent(((POSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.POSTRowDeleting != null)) {
                    this.POSTRowDeleting(this, new POSTRowChangeEvent(((POSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePOSTRow(POSTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "POSTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PRIEMDataTable : global::System.Data.TypedTableBase<PRIEMRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDATA;
            
            private global::System.Data.DataColumn columnPACIENT_ID;
            
            private global::System.Data.DataColumn columnDOCTOR_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRIEMDataTable() {
                this.TableName = "PRIEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PRIEMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PRIEMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATAColumn {
                get {
                    return this.columnDATA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACIENT_IDColumn {
                get {
                    return this.columnPACIENT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOCTOR_IDColumn {
                get {
                    return this.columnDOCTOR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRIEMRow this[int index] {
                get {
                    return ((PRIEMRow)(this.Rows[index]));
                }
            }
            
            public event PRIEMRowChangeEventHandler PRIEMRowChanging;
            
            public event PRIEMRowChangeEventHandler PRIEMRowChanged;
            
            public event PRIEMRowChangeEventHandler PRIEMRowDeleting;
            
            public event PRIEMRowChangeEventHandler PRIEMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPRIEMRow(PRIEMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRIEMRow AddPRIEMRow(PACIENTRow parentPACIENTRowBypcient_PRIEM, System.DateTime DATA, decimal PACIENT_ID, DOCTORRow parentDOCTORRowByPRIEM_R011) {
                PRIEMRow rowPRIEMRow = ((PRIEMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DATA,
                        PACIENT_ID,
                        null};
                if ((parentPACIENTRowBypcient_PRIEM != null)) {
                    columnValuesArray[0] = parentPACIENTRowBypcient_PRIEM[3];
                }
                if ((parentDOCTORRowByPRIEM_R011 != null)) {
                    columnValuesArray[3] = parentDOCTORRowByPRIEM_R011[0];
                }
                rowPRIEMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPRIEMRow);
                return rowPRIEMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRIEMRow FindByID(decimal ID) {
                return ((PRIEMRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PRIEMDataTable cln = ((PRIEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PRIEMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDATA = base.Columns["DATA"];
                this.columnPACIENT_ID = base.Columns["PACIENT_ID"];
                this.columnDOCTOR_ID = base.Columns["DOCTOR_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDATA = new global::System.Data.DataColumn("DATA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA);
                this.columnPACIENT_ID = new global::System.Data.DataColumn("PACIENT_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACIENT_ID);
                this.columnDOCTOR_ID = new global::System.Data.DataColumn("DOCTOR_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCTOR_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRIEMRow NewPRIEMRow() {
                return ((PRIEMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PRIEMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PRIEMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PRIEMRowChanged != null)) {
                    this.PRIEMRowChanged(this, new PRIEMRowChangeEvent(((PRIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PRIEMRowChanging != null)) {
                    this.PRIEMRowChanging(this, new PRIEMRowChangeEvent(((PRIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PRIEMRowDeleted != null)) {
                    this.PRIEMRowDeleted(this, new PRIEMRowChangeEvent(((PRIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PRIEMRowDeleting != null)) {
                    this.PRIEMRowDeleting(this, new PRIEMRowChangeEvent(((PRIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePRIEMRow(PRIEMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PRIEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SPECIALITYDataTable : global::System.Data.TypedTableBase<SPECIALITYRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnNAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIALITYDataTable() {
                this.TableName = "SPECIALITY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SPECIALITYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SPECIALITYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIALITYRow this[int index] {
                get {
                    return ((SPECIALITYRow)(this.Rows[index]));
                }
            }
            
            public event SPECIALITYRowChangeEventHandler SPECIALITYRowChanging;
            
            public event SPECIALITYRowChangeEventHandler SPECIALITYRowChanged;
            
            public event SPECIALITYRowChangeEventHandler SPECIALITYRowDeleting;
            
            public event SPECIALITYRowChangeEventHandler SPECIALITYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSPECIALITYRow(SPECIALITYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIALITYRow AddSPECIALITYRow(decimal ID, string NAME) {
                SPECIALITYRow rowSPECIALITYRow = ((SPECIALITYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        NAME};
                rowSPECIALITYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSPECIALITYRow);
                return rowSPECIALITYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIALITYRow FindByID(decimal ID) {
                return ((SPECIALITYRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SPECIALITYDataTable cln = ((SPECIALITYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SPECIALITYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnNAME = base.Columns["NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnNAME.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIALITYRow NewSPECIALITYRow() {
                return ((SPECIALITYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SPECIALITYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SPECIALITYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SPECIALITYRowChanged != null)) {
                    this.SPECIALITYRowChanged(this, new SPECIALITYRowChangeEvent(((SPECIALITYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SPECIALITYRowChanging != null)) {
                    this.SPECIALITYRowChanging(this, new SPECIALITYRowChangeEvent(((SPECIALITYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SPECIALITYRowDeleted != null)) {
                    this.SPECIALITYRowDeleted(this, new SPECIALITYRowChangeEvent(((SPECIALITYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SPECIALITYRowDeleting != null)) {
                    this.SPECIALITYRowDeleting(this, new SPECIALITYRowChangeEvent(((SPECIALITYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSPECIALITYRow(SPECIALITYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SPECIALITYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UNITDataTable : global::System.Data.TypedTableBase<UNITRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnMANAGER_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITDataTable() {
                this.TableName = "UNIT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UNITDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UNITDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANAGER_IDColumn {
                get {
                    return this.columnMANAGER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITRow this[int index] {
                get {
                    return ((UNITRow)(this.Rows[index]));
                }
            }
            
            public event UNITRowChangeEventHandler UNITRowChanging;
            
            public event UNITRowChangeEventHandler UNITRowChanged;
            
            public event UNITRowChangeEventHandler UNITRowDeleting;
            
            public event UNITRowChangeEventHandler UNITRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUNITRow(UNITRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITRow AddUNITRow(decimal ID, string NAME, DOCTORRow parentDOCTORRowByUNIT_R012) {
                UNITRow rowUNITRow = ((UNITRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        NAME,
                        null};
                if ((parentDOCTORRowByUNIT_R012 != null)) {
                    columnValuesArray[2] = parentDOCTORRowByUNIT_R012[0];
                }
                rowUNITRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUNITRow);
                return rowUNITRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITRow FindByID(decimal ID) {
                return ((UNITRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UNITDataTable cln = ((UNITDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UNITDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnNAME = base.Columns["NAME"];
                this.columnMANAGER_ID = base.Columns["MANAGER_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnMANAGER_ID = new global::System.Data.DataColumn("MANAGER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANAGER_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnNAME.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITRow NewUNITRow() {
                return ((UNITRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UNITRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UNITRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UNITRowChanged != null)) {
                    this.UNITRowChanged(this, new UNITRowChangeEvent(((UNITRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UNITRowChanging != null)) {
                    this.UNITRowChanging(this, new UNITRowChangeEvent(((UNITRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UNITRowDeleted != null)) {
                    this.UNITRowDeleted(this, new UNITRowChangeEvent(((UNITRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UNITRowDeleting != null)) {
                    this.UNITRowDeleting(this, new UNITRowChangeEvent(((UNITRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUNITRow(UNITRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UNITDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_DUAL100DataTable : global::System.Data.TypedTableBase<WWV_FLOW_DUAL100Row> {
            
            private global::System.Data.DataColumn columnI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_DUAL100DataTable() {
                this.TableName = "WWV_FLOW_DUAL100";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_DUAL100DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_DUAL100DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IColumn {
                get {
                    return this.columnI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_DUAL100Row this[int index] {
                get {
                    return ((WWV_FLOW_DUAL100Row)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_DUAL100RowChangeEventHandler WWV_FLOW_DUAL100RowChanging;
            
            public event WWV_FLOW_DUAL100RowChangeEventHandler WWV_FLOW_DUAL100RowChanged;
            
            public event WWV_FLOW_DUAL100RowChangeEventHandler WWV_FLOW_DUAL100RowDeleting;
            
            public event WWV_FLOW_DUAL100RowChangeEventHandler WWV_FLOW_DUAL100RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_DUAL100Row(WWV_FLOW_DUAL100Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_DUAL100Row AddWWV_FLOW_DUAL100Row(decimal I) {
                WWV_FLOW_DUAL100Row rowWWV_FLOW_DUAL100Row = ((WWV_FLOW_DUAL100Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        I};
                rowWWV_FLOW_DUAL100Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_DUAL100Row);
                return rowWWV_FLOW_DUAL100Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_DUAL100DataTable cln = ((WWV_FLOW_DUAL100DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_DUAL100DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnI = base.Columns["I"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnI = new global::System.Data.DataColumn("I", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnI);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_DUAL100Row NewWWV_FLOW_DUAL100Row() {
                return ((WWV_FLOW_DUAL100Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_DUAL100Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_DUAL100Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_DUAL100RowChanged != null)) {
                    this.WWV_FLOW_DUAL100RowChanged(this, new WWV_FLOW_DUAL100RowChangeEvent(((WWV_FLOW_DUAL100Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_DUAL100RowChanging != null)) {
                    this.WWV_FLOW_DUAL100RowChanging(this, new WWV_FLOW_DUAL100RowChangeEvent(((WWV_FLOW_DUAL100Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_DUAL100RowDeleted != null)) {
                    this.WWV_FLOW_DUAL100RowDeleted(this, new WWV_FLOW_DUAL100RowChangeEvent(((WWV_FLOW_DUAL100Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_DUAL100RowDeleting != null)) {
                    this.WWV_FLOW_DUAL100RowDeleting(this, new WWV_FLOW_DUAL100RowChangeEvent(((WWV_FLOW_DUAL100Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_DUAL100Row(WWV_FLOW_DUAL100Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_DUAL100DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_FIELD_TEMPLATESDataTable : global::System.Data.TypedTableBase<WWV_FLOW_FIELD_TEMPLATESRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnFLOW_ID;
            
            private global::System.Data.DataColumn columnSECURITY_GROUP_ID;
            
            private global::System.Data.DataColumn columnTHEME_ID;
            
            private global::System.Data.DataColumn columnTHEME_CLASS_ID;
            
            private global::System.Data.DataColumn columnTEMPLATE_NAME;
            
            private global::System.Data.DataColumn columnTEMPLATE_BODY1;
            
            private global::System.Data.DataColumn columnTEMPLATE_BODY2;
            
            private global::System.Data.DataColumn columnREFERENCE_ID;
            
            private global::System.Data.DataColumn columnON_ERROR_BEFORE_LABEL;
            
            private global::System.Data.DataColumn columnON_ERROR_AFTER_LABEL;
            
            private global::System.Data.DataColumn columnLAST_UPDATED_ON;
            
            private global::System.Data.DataColumn columnLAST_UPDATED_BY;
            
            private global::System.Data.DataColumn columnTRANSLATE_THIS_TEMPLATE;
            
            private global::System.Data.DataColumn columnTEMPLATE_COMMENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_FIELD_TEMPLATESDataTable() {
                this.TableName = "WWV_FLOW_FIELD_TEMPLATES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_FIELD_TEMPLATESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_FIELD_TEMPLATESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLOW_IDColumn {
                get {
                    return this.columnFLOW_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SECURITY_GROUP_IDColumn {
                get {
                    return this.columnSECURITY_GROUP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn THEME_IDColumn {
                get {
                    return this.columnTHEME_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn THEME_CLASS_IDColumn {
                get {
                    return this.columnTHEME_CLASS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEMPLATE_NAMEColumn {
                get {
                    return this.columnTEMPLATE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEMPLATE_BODY1Column {
                get {
                    return this.columnTEMPLATE_BODY1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEMPLATE_BODY2Column {
                get {
                    return this.columnTEMPLATE_BODY2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REFERENCE_IDColumn {
                get {
                    return this.columnREFERENCE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ON_ERROR_BEFORE_LABELColumn {
                get {
                    return this.columnON_ERROR_BEFORE_LABEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ON_ERROR_AFTER_LABELColumn {
                get {
                    return this.columnON_ERROR_AFTER_LABEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_UPDATED_ONColumn {
                get {
                    return this.columnLAST_UPDATED_ON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_UPDATED_BYColumn {
                get {
                    return this.columnLAST_UPDATED_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRANSLATE_THIS_TEMPLATEColumn {
                get {
                    return this.columnTRANSLATE_THIS_TEMPLATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEMPLATE_COMMENTColumn {
                get {
                    return this.columnTEMPLATE_COMMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_FIELD_TEMPLATESRow this[int index] {
                get {
                    return ((WWV_FLOW_FIELD_TEMPLATESRow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_FIELD_TEMPLATESRowChangeEventHandler WWV_FLOW_FIELD_TEMPLATESRowChanging;
            
            public event WWV_FLOW_FIELD_TEMPLATESRowChangeEventHandler WWV_FLOW_FIELD_TEMPLATESRowChanged;
            
            public event WWV_FLOW_FIELD_TEMPLATESRowChangeEventHandler WWV_FLOW_FIELD_TEMPLATESRowDeleting;
            
            public event WWV_FLOW_FIELD_TEMPLATESRowChangeEventHandler WWV_FLOW_FIELD_TEMPLATESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_FIELD_TEMPLATESRow(WWV_FLOW_FIELD_TEMPLATESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_FIELD_TEMPLATESRow AddWWV_FLOW_FIELD_TEMPLATESRow(decimal ID, decimal FLOW_ID, decimal SECURITY_GROUP_ID, decimal THEME_ID, decimal THEME_CLASS_ID, string TEMPLATE_NAME, string TEMPLATE_BODY1, string TEMPLATE_BODY2, decimal REFERENCE_ID, string ON_ERROR_BEFORE_LABEL, string ON_ERROR_AFTER_LABEL, System.DateTime LAST_UPDATED_ON, string LAST_UPDATED_BY, string TRANSLATE_THIS_TEMPLATE, string TEMPLATE_COMMENT) {
                WWV_FLOW_FIELD_TEMPLATESRow rowWWV_FLOW_FIELD_TEMPLATESRow = ((WWV_FLOW_FIELD_TEMPLATESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        FLOW_ID,
                        SECURITY_GROUP_ID,
                        THEME_ID,
                        THEME_CLASS_ID,
                        TEMPLATE_NAME,
                        TEMPLATE_BODY1,
                        TEMPLATE_BODY2,
                        REFERENCE_ID,
                        ON_ERROR_BEFORE_LABEL,
                        ON_ERROR_AFTER_LABEL,
                        LAST_UPDATED_ON,
                        LAST_UPDATED_BY,
                        TRANSLATE_THIS_TEMPLATE,
                        TEMPLATE_COMMENT};
                rowWWV_FLOW_FIELD_TEMPLATESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_FIELD_TEMPLATESRow);
                return rowWWV_FLOW_FIELD_TEMPLATESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_FIELD_TEMPLATESRow FindByID(decimal ID) {
                return ((WWV_FLOW_FIELD_TEMPLATESRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_FIELD_TEMPLATESDataTable cln = ((WWV_FLOW_FIELD_TEMPLATESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_FIELD_TEMPLATESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnFLOW_ID = base.Columns["FLOW_ID"];
                this.columnSECURITY_GROUP_ID = base.Columns["SECURITY_GROUP_ID"];
                this.columnTHEME_ID = base.Columns["THEME_ID"];
                this.columnTHEME_CLASS_ID = base.Columns["THEME_CLASS_ID"];
                this.columnTEMPLATE_NAME = base.Columns["TEMPLATE_NAME"];
                this.columnTEMPLATE_BODY1 = base.Columns["TEMPLATE_BODY1"];
                this.columnTEMPLATE_BODY2 = base.Columns["TEMPLATE_BODY2"];
                this.columnREFERENCE_ID = base.Columns["REFERENCE_ID"];
                this.columnON_ERROR_BEFORE_LABEL = base.Columns["ON_ERROR_BEFORE_LABEL"];
                this.columnON_ERROR_AFTER_LABEL = base.Columns["ON_ERROR_AFTER_LABEL"];
                this.columnLAST_UPDATED_ON = base.Columns["LAST_UPDATED_ON"];
                this.columnLAST_UPDATED_BY = base.Columns["LAST_UPDATED_BY"];
                this.columnTRANSLATE_THIS_TEMPLATE = base.Columns["TRANSLATE_THIS_TEMPLATE"];
                this.columnTEMPLATE_COMMENT = base.Columns["TEMPLATE_COMMENT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnFLOW_ID = new global::System.Data.DataColumn("FLOW_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOW_ID);
                this.columnSECURITY_GROUP_ID = new global::System.Data.DataColumn("SECURITY_GROUP_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECURITY_GROUP_ID);
                this.columnTHEME_ID = new global::System.Data.DataColumn("THEME_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHEME_ID);
                this.columnTHEME_CLASS_ID = new global::System.Data.DataColumn("THEME_CLASS_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHEME_CLASS_ID);
                this.columnTEMPLATE_NAME = new global::System.Data.DataColumn("TEMPLATE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMPLATE_NAME);
                this.columnTEMPLATE_BODY1 = new global::System.Data.DataColumn("TEMPLATE_BODY1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMPLATE_BODY1);
                this.columnTEMPLATE_BODY2 = new global::System.Data.DataColumn("TEMPLATE_BODY2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMPLATE_BODY2);
                this.columnREFERENCE_ID = new global::System.Data.DataColumn("REFERENCE_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFERENCE_ID);
                this.columnON_ERROR_BEFORE_LABEL = new global::System.Data.DataColumn("ON_ERROR_BEFORE_LABEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnON_ERROR_BEFORE_LABEL);
                this.columnON_ERROR_AFTER_LABEL = new global::System.Data.DataColumn("ON_ERROR_AFTER_LABEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnON_ERROR_AFTER_LABEL);
                this.columnLAST_UPDATED_ON = new global::System.Data.DataColumn("LAST_UPDATED_ON", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_UPDATED_ON);
                this.columnLAST_UPDATED_BY = new global::System.Data.DataColumn("LAST_UPDATED_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_UPDATED_BY);
                this.columnTRANSLATE_THIS_TEMPLATE = new global::System.Data.DataColumn("TRANSLATE_THIS_TEMPLATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSLATE_THIS_TEMPLATE);
                this.columnTEMPLATE_COMMENT = new global::System.Data.DataColumn("TEMPLATE_COMMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMPLATE_COMMENT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnFLOW_ID.AllowDBNull = false;
                this.columnSECURITY_GROUP_ID.AllowDBNull = false;
                this.columnTEMPLATE_NAME.AllowDBNull = false;
                this.columnTEMPLATE_NAME.MaxLength = 255;
                this.columnTEMPLATE_BODY1.MaxLength = 4000;
                this.columnTEMPLATE_BODY2.MaxLength = 4000;
                this.columnON_ERROR_BEFORE_LABEL.MaxLength = 4000;
                this.columnON_ERROR_AFTER_LABEL.MaxLength = 4000;
                this.columnLAST_UPDATED_BY.MaxLength = 255;
                this.columnTRANSLATE_THIS_TEMPLATE.MaxLength = 1;
                this.columnTEMPLATE_COMMENT.MaxLength = 4000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_FIELD_TEMPLATESRow NewWWV_FLOW_FIELD_TEMPLATESRow() {
                return ((WWV_FLOW_FIELD_TEMPLATESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_FIELD_TEMPLATESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_FIELD_TEMPLATESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_FIELD_TEMPLATESRowChanged != null)) {
                    this.WWV_FLOW_FIELD_TEMPLATESRowChanged(this, new WWV_FLOW_FIELD_TEMPLATESRowChangeEvent(((WWV_FLOW_FIELD_TEMPLATESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_FIELD_TEMPLATESRowChanging != null)) {
                    this.WWV_FLOW_FIELD_TEMPLATESRowChanging(this, new WWV_FLOW_FIELD_TEMPLATESRowChangeEvent(((WWV_FLOW_FIELD_TEMPLATESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_FIELD_TEMPLATESRowDeleted != null)) {
                    this.WWV_FLOW_FIELD_TEMPLATESRowDeleted(this, new WWV_FLOW_FIELD_TEMPLATESRowChangeEvent(((WWV_FLOW_FIELD_TEMPLATESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_FIELD_TEMPLATESRowDeleting != null)) {
                    this.WWV_FLOW_FIELD_TEMPLATESRowDeleting(this, new WWV_FLOW_FIELD_TEMPLATESRowChangeEvent(((WWV_FLOW_FIELD_TEMPLATESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_FIELD_TEMPLATESRow(WWV_FLOW_FIELD_TEMPLATESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_FIELD_TEMPLATESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_LIST_OF_VALUES_DATADataTable : global::System.Data.TypedTableBase<WWV_FLOW_LIST_OF_VALUES_DATARow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnLOV_ID;
            
            private global::System.Data.DataColumn columnFLOW_ID;
            
            private global::System.Data.DataColumn columnLOV_DISP_SEQUENCE;
            
            private global::System.Data.DataColumn columnLOV_DISP_VALUE;
            
            private global::System.Data.DataColumn columnLOV_RETURN_VALUE;
            
            private global::System.Data.DataColumn columnLOV_TEMPLATE;
            
            private global::System.Data.DataColumn columnLOV_DISP_COND_TYPE;
            
            private global::System.Data.DataColumn columnLOV_DISP_COND;
            
            private global::System.Data.DataColumn columnLOV_DISP_COND2;
            
            private global::System.Data.DataColumn columnREQUIRED_PATCH;
            
            private global::System.Data.DataColumn columnSECURITY_GROUP_ID;
            
            private global::System.Data.DataColumn columnLAST_UPDATED_BY;
            
            private global::System.Data.DataColumn columnLAST_UPDATED_ON;
            
            private global::System.Data.DataColumn columnLOV_DATA_COMMENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_LIST_OF_VALUES_DATADataTable() {
                this.TableName = "WWV_FLOW_LIST_OF_VALUES_DATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_LIST_OF_VALUES_DATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_LIST_OF_VALUES_DATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOV_IDColumn {
                get {
                    return this.columnLOV_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLOW_IDColumn {
                get {
                    return this.columnFLOW_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOV_DISP_SEQUENCEColumn {
                get {
                    return this.columnLOV_DISP_SEQUENCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOV_DISP_VALUEColumn {
                get {
                    return this.columnLOV_DISP_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOV_RETURN_VALUEColumn {
                get {
                    return this.columnLOV_RETURN_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOV_TEMPLATEColumn {
                get {
                    return this.columnLOV_TEMPLATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOV_DISP_COND_TYPEColumn {
                get {
                    return this.columnLOV_DISP_COND_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOV_DISP_CONDColumn {
                get {
                    return this.columnLOV_DISP_COND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOV_DISP_COND2Column {
                get {
                    return this.columnLOV_DISP_COND2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REQUIRED_PATCHColumn {
                get {
                    return this.columnREQUIRED_PATCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SECURITY_GROUP_IDColumn {
                get {
                    return this.columnSECURITY_GROUP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_UPDATED_BYColumn {
                get {
                    return this.columnLAST_UPDATED_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_UPDATED_ONColumn {
                get {
                    return this.columnLAST_UPDATED_ON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOV_DATA_COMMENTColumn {
                get {
                    return this.columnLOV_DATA_COMMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_LIST_OF_VALUES_DATARow this[int index] {
                get {
                    return ((WWV_FLOW_LIST_OF_VALUES_DATARow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_LIST_OF_VALUES_DATARowChangeEventHandler WWV_FLOW_LIST_OF_VALUES_DATARowChanging;
            
            public event WWV_FLOW_LIST_OF_VALUES_DATARowChangeEventHandler WWV_FLOW_LIST_OF_VALUES_DATARowChanged;
            
            public event WWV_FLOW_LIST_OF_VALUES_DATARowChangeEventHandler WWV_FLOW_LIST_OF_VALUES_DATARowDeleting;
            
            public event WWV_FLOW_LIST_OF_VALUES_DATARowChangeEventHandler WWV_FLOW_LIST_OF_VALUES_DATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_LIST_OF_VALUES_DATARow(WWV_FLOW_LIST_OF_VALUES_DATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_LIST_OF_VALUES_DATARow AddWWV_FLOW_LIST_OF_VALUES_DATARow(decimal ID, _WWV_FLOW_LISTS_OF_VALUES_Row parent_WWV_FLOW_LISTS_OF_VALUES_RowByWWV_FLOW_LOV_DATA_FK, decimal FLOW_ID, decimal LOV_DISP_SEQUENCE, string LOV_DISP_VALUE, string LOV_RETURN_VALUE, string LOV_TEMPLATE, string LOV_DISP_COND_TYPE, string LOV_DISP_COND, string LOV_DISP_COND2, decimal REQUIRED_PATCH, decimal SECURITY_GROUP_ID, string LAST_UPDATED_BY, System.DateTime LAST_UPDATED_ON, string LOV_DATA_COMMENT) {
                WWV_FLOW_LIST_OF_VALUES_DATARow rowWWV_FLOW_LIST_OF_VALUES_DATARow = ((WWV_FLOW_LIST_OF_VALUES_DATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        null,
                        FLOW_ID,
                        LOV_DISP_SEQUENCE,
                        LOV_DISP_VALUE,
                        LOV_RETURN_VALUE,
                        LOV_TEMPLATE,
                        LOV_DISP_COND_TYPE,
                        LOV_DISP_COND,
                        LOV_DISP_COND2,
                        REQUIRED_PATCH,
                        SECURITY_GROUP_ID,
                        LAST_UPDATED_BY,
                        LAST_UPDATED_ON,
                        LOV_DATA_COMMENT};
                if ((parent_WWV_FLOW_LISTS_OF_VALUES_RowByWWV_FLOW_LOV_DATA_FK != null)) {
                    columnValuesArray[1] = parent_WWV_FLOW_LISTS_OF_VALUES_RowByWWV_FLOW_LOV_DATA_FK[0];
                }
                rowWWV_FLOW_LIST_OF_VALUES_DATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_LIST_OF_VALUES_DATARow);
                return rowWWV_FLOW_LIST_OF_VALUES_DATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_LIST_OF_VALUES_DATARow FindByID(decimal ID) {
                return ((WWV_FLOW_LIST_OF_VALUES_DATARow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_LIST_OF_VALUES_DATADataTable cln = ((WWV_FLOW_LIST_OF_VALUES_DATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_LIST_OF_VALUES_DATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnLOV_ID = base.Columns["LOV_ID"];
                this.columnFLOW_ID = base.Columns["FLOW_ID"];
                this.columnLOV_DISP_SEQUENCE = base.Columns["LOV_DISP_SEQUENCE"];
                this.columnLOV_DISP_VALUE = base.Columns["LOV_DISP_VALUE"];
                this.columnLOV_RETURN_VALUE = base.Columns["LOV_RETURN_VALUE"];
                this.columnLOV_TEMPLATE = base.Columns["LOV_TEMPLATE"];
                this.columnLOV_DISP_COND_TYPE = base.Columns["LOV_DISP_COND_TYPE"];
                this.columnLOV_DISP_COND = base.Columns["LOV_DISP_COND"];
                this.columnLOV_DISP_COND2 = base.Columns["LOV_DISP_COND2"];
                this.columnREQUIRED_PATCH = base.Columns["REQUIRED_PATCH"];
                this.columnSECURITY_GROUP_ID = base.Columns["SECURITY_GROUP_ID"];
                this.columnLAST_UPDATED_BY = base.Columns["LAST_UPDATED_BY"];
                this.columnLAST_UPDATED_ON = base.Columns["LAST_UPDATED_ON"];
                this.columnLOV_DATA_COMMENT = base.Columns["LOV_DATA_COMMENT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnLOV_ID = new global::System.Data.DataColumn("LOV_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOV_ID);
                this.columnFLOW_ID = new global::System.Data.DataColumn("FLOW_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOW_ID);
                this.columnLOV_DISP_SEQUENCE = new global::System.Data.DataColumn("LOV_DISP_SEQUENCE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOV_DISP_SEQUENCE);
                this.columnLOV_DISP_VALUE = new global::System.Data.DataColumn("LOV_DISP_VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOV_DISP_VALUE);
                this.columnLOV_RETURN_VALUE = new global::System.Data.DataColumn("LOV_RETURN_VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOV_RETURN_VALUE);
                this.columnLOV_TEMPLATE = new global::System.Data.DataColumn("LOV_TEMPLATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOV_TEMPLATE);
                this.columnLOV_DISP_COND_TYPE = new global::System.Data.DataColumn("LOV_DISP_COND_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOV_DISP_COND_TYPE);
                this.columnLOV_DISP_COND = new global::System.Data.DataColumn("LOV_DISP_COND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOV_DISP_COND);
                this.columnLOV_DISP_COND2 = new global::System.Data.DataColumn("LOV_DISP_COND2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOV_DISP_COND2);
                this.columnREQUIRED_PATCH = new global::System.Data.DataColumn("REQUIRED_PATCH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREQUIRED_PATCH);
                this.columnSECURITY_GROUP_ID = new global::System.Data.DataColumn("SECURITY_GROUP_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECURITY_GROUP_ID);
                this.columnLAST_UPDATED_BY = new global::System.Data.DataColumn("LAST_UPDATED_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_UPDATED_BY);
                this.columnLAST_UPDATED_ON = new global::System.Data.DataColumn("LAST_UPDATED_ON", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_UPDATED_ON);
                this.columnLOV_DATA_COMMENT = new global::System.Data.DataColumn("LOV_DATA_COMMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOV_DATA_COMMENT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnLOV_DISP_SEQUENCE.AllowDBNull = false;
                this.columnLOV_DISP_VALUE.AllowDBNull = false;
                this.columnLOV_DISP_VALUE.MaxLength = 4000;
                this.columnLOV_RETURN_VALUE.AllowDBNull = false;
                this.columnLOV_RETURN_VALUE.MaxLength = 4000;
                this.columnLOV_TEMPLATE.MaxLength = 4000;
                this.columnLOV_DISP_COND_TYPE.MaxLength = 255;
                this.columnLOV_DISP_COND.MaxLength = 4000;
                this.columnLOV_DISP_COND2.MaxLength = 4000;
                this.columnSECURITY_GROUP_ID.AllowDBNull = false;
                this.columnLAST_UPDATED_BY.MaxLength = 255;
                this.columnLOV_DATA_COMMENT.MaxLength = 4000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_LIST_OF_VALUES_DATARow NewWWV_FLOW_LIST_OF_VALUES_DATARow() {
                return ((WWV_FLOW_LIST_OF_VALUES_DATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_LIST_OF_VALUES_DATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_LIST_OF_VALUES_DATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_LIST_OF_VALUES_DATARowChanged != null)) {
                    this.WWV_FLOW_LIST_OF_VALUES_DATARowChanged(this, new WWV_FLOW_LIST_OF_VALUES_DATARowChangeEvent(((WWV_FLOW_LIST_OF_VALUES_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_LIST_OF_VALUES_DATARowChanging != null)) {
                    this.WWV_FLOW_LIST_OF_VALUES_DATARowChanging(this, new WWV_FLOW_LIST_OF_VALUES_DATARowChangeEvent(((WWV_FLOW_LIST_OF_VALUES_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_LIST_OF_VALUES_DATARowDeleted != null)) {
                    this.WWV_FLOW_LIST_OF_VALUES_DATARowDeleted(this, new WWV_FLOW_LIST_OF_VALUES_DATARowChangeEvent(((WWV_FLOW_LIST_OF_VALUES_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_LIST_OF_VALUES_DATARowDeleting != null)) {
                    this.WWV_FLOW_LIST_OF_VALUES_DATARowDeleting(this, new WWV_FLOW_LIST_OF_VALUES_DATARowChangeEvent(((WWV_FLOW_LIST_OF_VALUES_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_LIST_OF_VALUES_DATARow(WWV_FLOW_LIST_OF_VALUES_DATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_LIST_OF_VALUES_DATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _WWV_FLOW_LISTS_OF_VALUES_DataTable : global::System.Data.TypedTableBase<_WWV_FLOW_LISTS_OF_VALUES_Row> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnFLOW_ID;
            
            private global::System.Data.DataColumn columnLOV_NAME;
            
            private global::System.Data.DataColumn columnLOV_QUERY;
            
            private global::System.Data.DataColumn columnSECURITY_GROUP_ID;
            
            private global::System.Data.DataColumn columnREFERENCE_ID;
            
            private global::System.Data.DataColumn columnLAST_UPDATED_BY;
            
            private global::System.Data.DataColumn columnLAST_UPDATED_ON;
            
            private global::System.Data.DataColumn columnLOV_COMMENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _WWV_FLOW_LISTS_OF_VALUES_DataTable() {
                this.TableName = "WWV_FLOW_LISTS_OF_VALUES$";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _WWV_FLOW_LISTS_OF_VALUES_DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _WWV_FLOW_LISTS_OF_VALUES_DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLOW_IDColumn {
                get {
                    return this.columnFLOW_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOV_NAMEColumn {
                get {
                    return this.columnLOV_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOV_QUERYColumn {
                get {
                    return this.columnLOV_QUERY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SECURITY_GROUP_IDColumn {
                get {
                    return this.columnSECURITY_GROUP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REFERENCE_IDColumn {
                get {
                    return this.columnREFERENCE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_UPDATED_BYColumn {
                get {
                    return this.columnLAST_UPDATED_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_UPDATED_ONColumn {
                get {
                    return this.columnLAST_UPDATED_ON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOV_COMMENTColumn {
                get {
                    return this.columnLOV_COMMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _WWV_FLOW_LISTS_OF_VALUES_Row this[int index] {
                get {
                    return ((_WWV_FLOW_LISTS_OF_VALUES_Row)(this.Rows[index]));
                }
            }
            
            public event _WWV_FLOW_LISTS_OF_VALUES_RowChangeEventHandler _WWV_FLOW_LISTS_OF_VALUES_RowChanging;
            
            public event _WWV_FLOW_LISTS_OF_VALUES_RowChangeEventHandler _WWV_FLOW_LISTS_OF_VALUES_RowChanged;
            
            public event _WWV_FLOW_LISTS_OF_VALUES_RowChangeEventHandler _WWV_FLOW_LISTS_OF_VALUES_RowDeleting;
            
            public event _WWV_FLOW_LISTS_OF_VALUES_RowChangeEventHandler _WWV_FLOW_LISTS_OF_VALUES_RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_WWV_FLOW_LISTS_OF_VALUES_Row(_WWV_FLOW_LISTS_OF_VALUES_Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _WWV_FLOW_LISTS_OF_VALUES_Row Add_WWV_FLOW_LISTS_OF_VALUES_Row(decimal ID, decimal FLOW_ID, string LOV_NAME, string LOV_QUERY, decimal SECURITY_GROUP_ID, decimal REFERENCE_ID, string LAST_UPDATED_BY, System.DateTime LAST_UPDATED_ON, string LOV_COMMENT) {
                _WWV_FLOW_LISTS_OF_VALUES_Row row_WWV_FLOW_LISTS_OF_VALUES_Row = ((_WWV_FLOW_LISTS_OF_VALUES_Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        FLOW_ID,
                        LOV_NAME,
                        LOV_QUERY,
                        SECURITY_GROUP_ID,
                        REFERENCE_ID,
                        LAST_UPDATED_BY,
                        LAST_UPDATED_ON,
                        LOV_COMMENT};
                row_WWV_FLOW_LISTS_OF_VALUES_Row.ItemArray = columnValuesArray;
                this.Rows.Add(row_WWV_FLOW_LISTS_OF_VALUES_Row);
                return row_WWV_FLOW_LISTS_OF_VALUES_Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _WWV_FLOW_LISTS_OF_VALUES_Row FindByID(decimal ID) {
                return ((_WWV_FLOW_LISTS_OF_VALUES_Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _WWV_FLOW_LISTS_OF_VALUES_DataTable cln = ((_WWV_FLOW_LISTS_OF_VALUES_DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _WWV_FLOW_LISTS_OF_VALUES_DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnFLOW_ID = base.Columns["FLOW_ID"];
                this.columnLOV_NAME = base.Columns["LOV_NAME"];
                this.columnLOV_QUERY = base.Columns["LOV_QUERY"];
                this.columnSECURITY_GROUP_ID = base.Columns["SECURITY_GROUP_ID"];
                this.columnREFERENCE_ID = base.Columns["REFERENCE_ID"];
                this.columnLAST_UPDATED_BY = base.Columns["LAST_UPDATED_BY"];
                this.columnLAST_UPDATED_ON = base.Columns["LAST_UPDATED_ON"];
                this.columnLOV_COMMENT = base.Columns["LOV_COMMENT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnFLOW_ID = new global::System.Data.DataColumn("FLOW_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOW_ID);
                this.columnLOV_NAME = new global::System.Data.DataColumn("LOV_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOV_NAME);
                this.columnLOV_QUERY = new global::System.Data.DataColumn("LOV_QUERY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOV_QUERY);
                this.columnSECURITY_GROUP_ID = new global::System.Data.DataColumn("SECURITY_GROUP_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECURITY_GROUP_ID);
                this.columnREFERENCE_ID = new global::System.Data.DataColumn("REFERENCE_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFERENCE_ID);
                this.columnLAST_UPDATED_BY = new global::System.Data.DataColumn("LAST_UPDATED_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_UPDATED_BY);
                this.columnLAST_UPDATED_ON = new global::System.Data.DataColumn("LAST_UPDATED_ON", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_UPDATED_ON);
                this.columnLOV_COMMENT = new global::System.Data.DataColumn("LOV_COMMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOV_COMMENT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnFLOW_ID.AllowDBNull = false;
                this.columnLOV_NAME.AllowDBNull = false;
                this.columnLOV_NAME.MaxLength = 255;
                this.columnLOV_QUERY.AllowDBNull = false;
                this.columnLOV_QUERY.MaxLength = 4000;
                this.columnSECURITY_GROUP_ID.AllowDBNull = false;
                this.columnLAST_UPDATED_BY.MaxLength = 255;
                this.columnLOV_COMMENT.MaxLength = 4000;
                this.ExtendedProperties.Add("Generator_TableVarName", "_tableWWV_FLOW_LISTS_OF_VALUES_");
                this.ExtendedProperties.Add("Generator_UserTableName", "WWV_FLOW_LISTS_OF_VALUES$");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _WWV_FLOW_LISTS_OF_VALUES_Row New_WWV_FLOW_LISTS_OF_VALUES_Row() {
                return ((_WWV_FLOW_LISTS_OF_VALUES_Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _WWV_FLOW_LISTS_OF_VALUES_Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_WWV_FLOW_LISTS_OF_VALUES_Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._WWV_FLOW_LISTS_OF_VALUES_RowChanged != null)) {
                    this._WWV_FLOW_LISTS_OF_VALUES_RowChanged(this, new _WWV_FLOW_LISTS_OF_VALUES_RowChangeEvent(((_WWV_FLOW_LISTS_OF_VALUES_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._WWV_FLOW_LISTS_OF_VALUES_RowChanging != null)) {
                    this._WWV_FLOW_LISTS_OF_VALUES_RowChanging(this, new _WWV_FLOW_LISTS_OF_VALUES_RowChangeEvent(((_WWV_FLOW_LISTS_OF_VALUES_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._WWV_FLOW_LISTS_OF_VALUES_RowDeleted != null)) {
                    this._WWV_FLOW_LISTS_OF_VALUES_RowDeleted(this, new _WWV_FLOW_LISTS_OF_VALUES_RowChangeEvent(((_WWV_FLOW_LISTS_OF_VALUES_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._WWV_FLOW_LISTS_OF_VALUES_RowDeleting != null)) {
                    this._WWV_FLOW_LISTS_OF_VALUES_RowDeleting(this, new _WWV_FLOW_LISTS_OF_VALUES_RowChangeEvent(((_WWV_FLOW_LISTS_OF_VALUES_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_WWV_FLOW_LISTS_OF_VALUES_Row(_WWV_FLOW_LISTS_OF_VALUES_Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_WWV_FLOW_LISTS_OF_VALUES_DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_LOV_TEMPDataTable : global::System.Data.TypedTableBase<WWV_FLOW_LOV_TEMPRow> {
            
            private global::System.Data.DataColumn columnINSERT_ORDER;
            
            private global::System.Data.DataColumn columnDISP;
            
            private global::System.Data.DataColumn columnVAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_LOV_TEMPDataTable() {
                this.TableName = "WWV_FLOW_LOV_TEMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_LOV_TEMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_LOV_TEMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSERT_ORDERColumn {
                get {
                    return this.columnINSERT_ORDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISPColumn {
                get {
                    return this.columnDISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALColumn {
                get {
                    return this.columnVAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_LOV_TEMPRow this[int index] {
                get {
                    return ((WWV_FLOW_LOV_TEMPRow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_LOV_TEMPRowChangeEventHandler WWV_FLOW_LOV_TEMPRowChanging;
            
            public event WWV_FLOW_LOV_TEMPRowChangeEventHandler WWV_FLOW_LOV_TEMPRowChanged;
            
            public event WWV_FLOW_LOV_TEMPRowChangeEventHandler WWV_FLOW_LOV_TEMPRowDeleting;
            
            public event WWV_FLOW_LOV_TEMPRowChangeEventHandler WWV_FLOW_LOV_TEMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_LOV_TEMPRow(WWV_FLOW_LOV_TEMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_LOV_TEMPRow AddWWV_FLOW_LOV_TEMPRow(decimal INSERT_ORDER, string DISP, string VAL) {
                WWV_FLOW_LOV_TEMPRow rowWWV_FLOW_LOV_TEMPRow = ((WWV_FLOW_LOV_TEMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        INSERT_ORDER,
                        DISP,
                        VAL};
                rowWWV_FLOW_LOV_TEMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_LOV_TEMPRow);
                return rowWWV_FLOW_LOV_TEMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_LOV_TEMPDataTable cln = ((WWV_FLOW_LOV_TEMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_LOV_TEMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnINSERT_ORDER = base.Columns["INSERT_ORDER"];
                this.columnDISP = base.Columns["DISP"];
                this.columnVAL = base.Columns["VAL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnINSERT_ORDER = new global::System.Data.DataColumn("INSERT_ORDER", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSERT_ORDER);
                this.columnDISP = new global::System.Data.DataColumn("DISP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISP);
                this.columnVAL = new global::System.Data.DataColumn("VAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAL);
                this.columnDISP.MaxLength = 4000;
                this.columnVAL.MaxLength = 4000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_LOV_TEMPRow NewWWV_FLOW_LOV_TEMPRow() {
                return ((WWV_FLOW_LOV_TEMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_LOV_TEMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_LOV_TEMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_LOV_TEMPRowChanged != null)) {
                    this.WWV_FLOW_LOV_TEMPRowChanged(this, new WWV_FLOW_LOV_TEMPRowChangeEvent(((WWV_FLOW_LOV_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_LOV_TEMPRowChanging != null)) {
                    this.WWV_FLOW_LOV_TEMPRowChanging(this, new WWV_FLOW_LOV_TEMPRowChangeEvent(((WWV_FLOW_LOV_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_LOV_TEMPRowDeleted != null)) {
                    this.WWV_FLOW_LOV_TEMPRowDeleted(this, new WWV_FLOW_LOV_TEMPRowChangeEvent(((WWV_FLOW_LOV_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_LOV_TEMPRowDeleting != null)) {
                    this.WWV_FLOW_LOV_TEMPRowDeleting(this, new WWV_FLOW_LOV_TEMPRowChangeEvent(((WWV_FLOW_LOV_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_LOV_TEMPRow(WWV_FLOW_LOV_TEMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_LOV_TEMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_PATCHESDataTable : global::System.Data.TypedTableBase<WWV_FLOW_PATCHESRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnFLOW_ID;
            
            private global::System.Data.DataColumn columnPATCH_NAME;
            
            private global::System.Data.DataColumn columnPATCH_STATUS;
            
            private global::System.Data.DataColumn columnSECURITY_GROUP_ID;
            
            private global::System.Data.DataColumn columnDEFAULT_ON_EXPORT;
            
            private global::System.Data.DataColumn columnATTRIBUTE1;
            
            private global::System.Data.DataColumn columnATTRIBUTE2;
            
            private global::System.Data.DataColumn columnATTRIBUTE3;
            
            private global::System.Data.DataColumn columnATTRIBUTE4;
            
            private global::System.Data.DataColumn columnLAST_UPDATED_BY;
            
            private global::System.Data.DataColumn columnLAST_UPDATED_ON;
            
            private global::System.Data.DataColumn columnPATCH_COMMENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_PATCHESDataTable() {
                this.TableName = "WWV_FLOW_PATCHES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_PATCHESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_PATCHESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLOW_IDColumn {
                get {
                    return this.columnFLOW_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PATCH_NAMEColumn {
                get {
                    return this.columnPATCH_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PATCH_STATUSColumn {
                get {
                    return this.columnPATCH_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SECURITY_GROUP_IDColumn {
                get {
                    return this.columnSECURITY_GROUP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEFAULT_ON_EXPORTColumn {
                get {
                    return this.columnDEFAULT_ON_EXPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTRIBUTE1Column {
                get {
                    return this.columnATTRIBUTE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTRIBUTE2Column {
                get {
                    return this.columnATTRIBUTE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTRIBUTE3Column {
                get {
                    return this.columnATTRIBUTE3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTRIBUTE4Column {
                get {
                    return this.columnATTRIBUTE4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_UPDATED_BYColumn {
                get {
                    return this.columnLAST_UPDATED_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_UPDATED_ONColumn {
                get {
                    return this.columnLAST_UPDATED_ON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PATCH_COMMENTColumn {
                get {
                    return this.columnPATCH_COMMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_PATCHESRow this[int index] {
                get {
                    return ((WWV_FLOW_PATCHESRow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_PATCHESRowChangeEventHandler WWV_FLOW_PATCHESRowChanging;
            
            public event WWV_FLOW_PATCHESRowChangeEventHandler WWV_FLOW_PATCHESRowChanged;
            
            public event WWV_FLOW_PATCHESRowChangeEventHandler WWV_FLOW_PATCHESRowDeleting;
            
            public event WWV_FLOW_PATCHESRowChangeEventHandler WWV_FLOW_PATCHESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_PATCHESRow(WWV_FLOW_PATCHESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_PATCHESRow AddWWV_FLOW_PATCHESRow(decimal ID, decimal FLOW_ID, string PATCH_NAME, string PATCH_STATUS, decimal SECURITY_GROUP_ID, string DEFAULT_ON_EXPORT, string ATTRIBUTE1, string ATTRIBUTE2, string ATTRIBUTE3, string ATTRIBUTE4, string LAST_UPDATED_BY, System.DateTime LAST_UPDATED_ON, string PATCH_COMMENT) {
                WWV_FLOW_PATCHESRow rowWWV_FLOW_PATCHESRow = ((WWV_FLOW_PATCHESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        FLOW_ID,
                        PATCH_NAME,
                        PATCH_STATUS,
                        SECURITY_GROUP_ID,
                        DEFAULT_ON_EXPORT,
                        ATTRIBUTE1,
                        ATTRIBUTE2,
                        ATTRIBUTE3,
                        ATTRIBUTE4,
                        LAST_UPDATED_BY,
                        LAST_UPDATED_ON,
                        PATCH_COMMENT};
                rowWWV_FLOW_PATCHESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_PATCHESRow);
                return rowWWV_FLOW_PATCHESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_PATCHESRow FindByID(decimal ID) {
                return ((WWV_FLOW_PATCHESRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_PATCHESDataTable cln = ((WWV_FLOW_PATCHESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_PATCHESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnFLOW_ID = base.Columns["FLOW_ID"];
                this.columnPATCH_NAME = base.Columns["PATCH_NAME"];
                this.columnPATCH_STATUS = base.Columns["PATCH_STATUS"];
                this.columnSECURITY_GROUP_ID = base.Columns["SECURITY_GROUP_ID"];
                this.columnDEFAULT_ON_EXPORT = base.Columns["DEFAULT_ON_EXPORT"];
                this.columnATTRIBUTE1 = base.Columns["ATTRIBUTE1"];
                this.columnATTRIBUTE2 = base.Columns["ATTRIBUTE2"];
                this.columnATTRIBUTE3 = base.Columns["ATTRIBUTE3"];
                this.columnATTRIBUTE4 = base.Columns["ATTRIBUTE4"];
                this.columnLAST_UPDATED_BY = base.Columns["LAST_UPDATED_BY"];
                this.columnLAST_UPDATED_ON = base.Columns["LAST_UPDATED_ON"];
                this.columnPATCH_COMMENT = base.Columns["PATCH_COMMENT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnFLOW_ID = new global::System.Data.DataColumn("FLOW_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOW_ID);
                this.columnPATCH_NAME = new global::System.Data.DataColumn("PATCH_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATCH_NAME);
                this.columnPATCH_STATUS = new global::System.Data.DataColumn("PATCH_STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATCH_STATUS);
                this.columnSECURITY_GROUP_ID = new global::System.Data.DataColumn("SECURITY_GROUP_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECURITY_GROUP_ID);
                this.columnDEFAULT_ON_EXPORT = new global::System.Data.DataColumn("DEFAULT_ON_EXPORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFAULT_ON_EXPORT);
                this.columnATTRIBUTE1 = new global::System.Data.DataColumn("ATTRIBUTE1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTRIBUTE1);
                this.columnATTRIBUTE2 = new global::System.Data.DataColumn("ATTRIBUTE2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTRIBUTE2);
                this.columnATTRIBUTE3 = new global::System.Data.DataColumn("ATTRIBUTE3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTRIBUTE3);
                this.columnATTRIBUTE4 = new global::System.Data.DataColumn("ATTRIBUTE4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTRIBUTE4);
                this.columnLAST_UPDATED_BY = new global::System.Data.DataColumn("LAST_UPDATED_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_UPDATED_BY);
                this.columnLAST_UPDATED_ON = new global::System.Data.DataColumn("LAST_UPDATED_ON", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_UPDATED_ON);
                this.columnPATCH_COMMENT = new global::System.Data.DataColumn("PATCH_COMMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATCH_COMMENT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnFLOW_ID.AllowDBNull = false;
                this.columnPATCH_NAME.AllowDBNull = false;
                this.columnPATCH_NAME.MaxLength = 255;
                this.columnPATCH_STATUS.MaxLength = 30;
                this.columnSECURITY_GROUP_ID.AllowDBNull = false;
                this.columnDEFAULT_ON_EXPORT.MaxLength = 30;
                this.columnATTRIBUTE1.MaxLength = 255;
                this.columnATTRIBUTE2.MaxLength = 255;
                this.columnATTRIBUTE3.MaxLength = 255;
                this.columnATTRIBUTE4.MaxLength = 255;
                this.columnLAST_UPDATED_BY.MaxLength = 255;
                this.columnPATCH_COMMENT.MaxLength = 4000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_PATCHESRow NewWWV_FLOW_PATCHESRow() {
                return ((WWV_FLOW_PATCHESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_PATCHESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_PATCHESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_PATCHESRowChanged != null)) {
                    this.WWV_FLOW_PATCHESRowChanged(this, new WWV_FLOW_PATCHESRowChangeEvent(((WWV_FLOW_PATCHESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_PATCHESRowChanging != null)) {
                    this.WWV_FLOW_PATCHESRowChanging(this, new WWV_FLOW_PATCHESRowChangeEvent(((WWV_FLOW_PATCHESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_PATCHESRowDeleted != null)) {
                    this.WWV_FLOW_PATCHESRowDeleted(this, new WWV_FLOW_PATCHESRowChangeEvent(((WWV_FLOW_PATCHESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_PATCHESRowDeleting != null)) {
                    this.WWV_FLOW_PATCHESRowDeleting(this, new WWV_FLOW_PATCHESRowChangeEvent(((WWV_FLOW_PATCHESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_PATCHESRow(WWV_FLOW_PATCHESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_PATCHESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_TEMP_TABLEDataTable : global::System.Data.TypedTableBase<WWV_FLOW_TEMP_TABLERow> {
            
            private global::System.Data.DataColumn columnR;
            
            private global::System.Data.DataColumn columnC001;
            
            private global::System.Data.DataColumn columnC002;
            
            private global::System.Data.DataColumn columnC003;
            
            private global::System.Data.DataColumn columnC004;
            
            private global::System.Data.DataColumn columnC005;
            
            private global::System.Data.DataColumn columnC006;
            
            private global::System.Data.DataColumn columnC007;
            
            private global::System.Data.DataColumn columnC008;
            
            private global::System.Data.DataColumn columnC009;
            
            private global::System.Data.DataColumn columnC010;
            
            private global::System.Data.DataColumn columnC011;
            
            private global::System.Data.DataColumn columnC012;
            
            private global::System.Data.DataColumn columnC013;
            
            private global::System.Data.DataColumn columnC014;
            
            private global::System.Data.DataColumn columnC015;
            
            private global::System.Data.DataColumn columnC016;
            
            private global::System.Data.DataColumn columnC017;
            
            private global::System.Data.DataColumn columnC018;
            
            private global::System.Data.DataColumn columnC019;
            
            private global::System.Data.DataColumn columnC020;
            
            private global::System.Data.DataColumn columnC021;
            
            private global::System.Data.DataColumn columnC022;
            
            private global::System.Data.DataColumn columnC023;
            
            private global::System.Data.DataColumn columnC024;
            
            private global::System.Data.DataColumn columnC025;
            
            private global::System.Data.DataColumn columnC026;
            
            private global::System.Data.DataColumn columnC027;
            
            private global::System.Data.DataColumn columnC028;
            
            private global::System.Data.DataColumn columnC029;
            
            private global::System.Data.DataColumn columnC030;
            
            private global::System.Data.DataColumn columnC031;
            
            private global::System.Data.DataColumn columnC032;
            
            private global::System.Data.DataColumn columnC033;
            
            private global::System.Data.DataColumn columnC034;
            
            private global::System.Data.DataColumn columnC035;
            
            private global::System.Data.DataColumn columnC036;
            
            private global::System.Data.DataColumn columnC037;
            
            private global::System.Data.DataColumn columnC038;
            
            private global::System.Data.DataColumn columnC039;
            
            private global::System.Data.DataColumn columnC040;
            
            private global::System.Data.DataColumn columnC041;
            
            private global::System.Data.DataColumn columnC042;
            
            private global::System.Data.DataColumn columnC043;
            
            private global::System.Data.DataColumn columnC044;
            
            private global::System.Data.DataColumn columnC045;
            
            private global::System.Data.DataColumn columnC046;
            
            private global::System.Data.DataColumn columnC047;
            
            private global::System.Data.DataColumn columnC048;
            
            private global::System.Data.DataColumn columnC049;
            
            private global::System.Data.DataColumn columnC050;
            
            private global::System.Data.DataColumn columnC051;
            
            private global::System.Data.DataColumn columnC052;
            
            private global::System.Data.DataColumn columnC053;
            
            private global::System.Data.DataColumn columnC054;
            
            private global::System.Data.DataColumn columnC055;
            
            private global::System.Data.DataColumn columnC056;
            
            private global::System.Data.DataColumn columnC057;
            
            private global::System.Data.DataColumn columnC058;
            
            private global::System.Data.DataColumn columnC059;
            
            private global::System.Data.DataColumn columnC060;
            
            private global::System.Data.DataColumn columnC061;
            
            private global::System.Data.DataColumn columnC062;
            
            private global::System.Data.DataColumn columnC063;
            
            private global::System.Data.DataColumn columnC064;
            
            private global::System.Data.DataColumn columnC065;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_TEMP_TABLEDataTable() {
                this.TableName = "WWV_FLOW_TEMP_TABLE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_TEMP_TABLEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_TEMP_TABLEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RColumn {
                get {
                    return this.columnR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C001Column {
                get {
                    return this.columnC001;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C002Column {
                get {
                    return this.columnC002;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C003Column {
                get {
                    return this.columnC003;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C004Column {
                get {
                    return this.columnC004;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C005Column {
                get {
                    return this.columnC005;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C006Column {
                get {
                    return this.columnC006;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C007Column {
                get {
                    return this.columnC007;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C008Column {
                get {
                    return this.columnC008;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C009Column {
                get {
                    return this.columnC009;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C010Column {
                get {
                    return this.columnC010;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C011Column {
                get {
                    return this.columnC011;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C012Column {
                get {
                    return this.columnC012;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C013Column {
                get {
                    return this.columnC013;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C014Column {
                get {
                    return this.columnC014;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C015Column {
                get {
                    return this.columnC015;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C016Column {
                get {
                    return this.columnC016;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C017Column {
                get {
                    return this.columnC017;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C018Column {
                get {
                    return this.columnC018;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C019Column {
                get {
                    return this.columnC019;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C020Column {
                get {
                    return this.columnC020;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C021Column {
                get {
                    return this.columnC021;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C022Column {
                get {
                    return this.columnC022;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C023Column {
                get {
                    return this.columnC023;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C024Column {
                get {
                    return this.columnC024;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C025Column {
                get {
                    return this.columnC025;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C026Column {
                get {
                    return this.columnC026;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C027Column {
                get {
                    return this.columnC027;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C028Column {
                get {
                    return this.columnC028;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C029Column {
                get {
                    return this.columnC029;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C030Column {
                get {
                    return this.columnC030;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C031Column {
                get {
                    return this.columnC031;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C032Column {
                get {
                    return this.columnC032;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C033Column {
                get {
                    return this.columnC033;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C034Column {
                get {
                    return this.columnC034;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C035Column {
                get {
                    return this.columnC035;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C036Column {
                get {
                    return this.columnC036;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C037Column {
                get {
                    return this.columnC037;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C038Column {
                get {
                    return this.columnC038;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C039Column {
                get {
                    return this.columnC039;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C040Column {
                get {
                    return this.columnC040;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C041Column {
                get {
                    return this.columnC041;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C042Column {
                get {
                    return this.columnC042;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C043Column {
                get {
                    return this.columnC043;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C044Column {
                get {
                    return this.columnC044;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C045Column {
                get {
                    return this.columnC045;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C046Column {
                get {
                    return this.columnC046;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C047Column {
                get {
                    return this.columnC047;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C048Column {
                get {
                    return this.columnC048;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C049Column {
                get {
                    return this.columnC049;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C050Column {
                get {
                    return this.columnC050;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C051Column {
                get {
                    return this.columnC051;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C052Column {
                get {
                    return this.columnC052;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C053Column {
                get {
                    return this.columnC053;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C054Column {
                get {
                    return this.columnC054;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C055Column {
                get {
                    return this.columnC055;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C056Column {
                get {
                    return this.columnC056;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C057Column {
                get {
                    return this.columnC057;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C058Column {
                get {
                    return this.columnC058;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C059Column {
                get {
                    return this.columnC059;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C060Column {
                get {
                    return this.columnC060;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C061Column {
                get {
                    return this.columnC061;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C062Column {
                get {
                    return this.columnC062;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C063Column {
                get {
                    return this.columnC063;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C064Column {
                get {
                    return this.columnC064;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C065Column {
                get {
                    return this.columnC065;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_TEMP_TABLERow this[int index] {
                get {
                    return ((WWV_FLOW_TEMP_TABLERow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_TEMP_TABLERowChangeEventHandler WWV_FLOW_TEMP_TABLERowChanging;
            
            public event WWV_FLOW_TEMP_TABLERowChangeEventHandler WWV_FLOW_TEMP_TABLERowChanged;
            
            public event WWV_FLOW_TEMP_TABLERowChangeEventHandler WWV_FLOW_TEMP_TABLERowDeleting;
            
            public event WWV_FLOW_TEMP_TABLERowChangeEventHandler WWV_FLOW_TEMP_TABLERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_TEMP_TABLERow(WWV_FLOW_TEMP_TABLERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_TEMP_TABLERow AddWWV_FLOW_TEMP_TABLERow(
                        decimal R, 
                        string C001, 
                        string C002, 
                        string C003, 
                        string C004, 
                        string C005, 
                        string C006, 
                        string C007, 
                        string C008, 
                        string C009, 
                        string C010, 
                        string C011, 
                        string C012, 
                        string C013, 
                        string C014, 
                        string C015, 
                        string C016, 
                        string C017, 
                        string C018, 
                        string C019, 
                        string C020, 
                        string C021, 
                        string C022, 
                        string C023, 
                        string C024, 
                        string C025, 
                        string C026, 
                        string C027, 
                        string C028, 
                        string C029, 
                        string C030, 
                        string C031, 
                        string C032, 
                        string C033, 
                        string C034, 
                        string C035, 
                        string C036, 
                        string C037, 
                        string C038, 
                        string C039, 
                        string C040, 
                        string C041, 
                        string C042, 
                        string C043, 
                        string C044, 
                        string C045, 
                        string C046, 
                        string C047, 
                        string C048, 
                        string C049, 
                        string C050, 
                        string C051, 
                        string C052, 
                        string C053, 
                        string C054, 
                        string C055, 
                        string C056, 
                        string C057, 
                        string C058, 
                        string C059, 
                        string C060, 
                        string C061, 
                        string C062, 
                        string C063, 
                        string C064, 
                        string C065) {
                WWV_FLOW_TEMP_TABLERow rowWWV_FLOW_TEMP_TABLERow = ((WWV_FLOW_TEMP_TABLERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        R,
                        C001,
                        C002,
                        C003,
                        C004,
                        C005,
                        C006,
                        C007,
                        C008,
                        C009,
                        C010,
                        C011,
                        C012,
                        C013,
                        C014,
                        C015,
                        C016,
                        C017,
                        C018,
                        C019,
                        C020,
                        C021,
                        C022,
                        C023,
                        C024,
                        C025,
                        C026,
                        C027,
                        C028,
                        C029,
                        C030,
                        C031,
                        C032,
                        C033,
                        C034,
                        C035,
                        C036,
                        C037,
                        C038,
                        C039,
                        C040,
                        C041,
                        C042,
                        C043,
                        C044,
                        C045,
                        C046,
                        C047,
                        C048,
                        C049,
                        C050,
                        C051,
                        C052,
                        C053,
                        C054,
                        C055,
                        C056,
                        C057,
                        C058,
                        C059,
                        C060,
                        C061,
                        C062,
                        C063,
                        C064,
                        C065};
                rowWWV_FLOW_TEMP_TABLERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_TEMP_TABLERow);
                return rowWWV_FLOW_TEMP_TABLERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_TEMP_TABLEDataTable cln = ((WWV_FLOW_TEMP_TABLEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_TEMP_TABLEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnR = base.Columns["R"];
                this.columnC001 = base.Columns["C001"];
                this.columnC002 = base.Columns["C002"];
                this.columnC003 = base.Columns["C003"];
                this.columnC004 = base.Columns["C004"];
                this.columnC005 = base.Columns["C005"];
                this.columnC006 = base.Columns["C006"];
                this.columnC007 = base.Columns["C007"];
                this.columnC008 = base.Columns["C008"];
                this.columnC009 = base.Columns["C009"];
                this.columnC010 = base.Columns["C010"];
                this.columnC011 = base.Columns["C011"];
                this.columnC012 = base.Columns["C012"];
                this.columnC013 = base.Columns["C013"];
                this.columnC014 = base.Columns["C014"];
                this.columnC015 = base.Columns["C015"];
                this.columnC016 = base.Columns["C016"];
                this.columnC017 = base.Columns["C017"];
                this.columnC018 = base.Columns["C018"];
                this.columnC019 = base.Columns["C019"];
                this.columnC020 = base.Columns["C020"];
                this.columnC021 = base.Columns["C021"];
                this.columnC022 = base.Columns["C022"];
                this.columnC023 = base.Columns["C023"];
                this.columnC024 = base.Columns["C024"];
                this.columnC025 = base.Columns["C025"];
                this.columnC026 = base.Columns["C026"];
                this.columnC027 = base.Columns["C027"];
                this.columnC028 = base.Columns["C028"];
                this.columnC029 = base.Columns["C029"];
                this.columnC030 = base.Columns["C030"];
                this.columnC031 = base.Columns["C031"];
                this.columnC032 = base.Columns["C032"];
                this.columnC033 = base.Columns["C033"];
                this.columnC034 = base.Columns["C034"];
                this.columnC035 = base.Columns["C035"];
                this.columnC036 = base.Columns["C036"];
                this.columnC037 = base.Columns["C037"];
                this.columnC038 = base.Columns["C038"];
                this.columnC039 = base.Columns["C039"];
                this.columnC040 = base.Columns["C040"];
                this.columnC041 = base.Columns["C041"];
                this.columnC042 = base.Columns["C042"];
                this.columnC043 = base.Columns["C043"];
                this.columnC044 = base.Columns["C044"];
                this.columnC045 = base.Columns["C045"];
                this.columnC046 = base.Columns["C046"];
                this.columnC047 = base.Columns["C047"];
                this.columnC048 = base.Columns["C048"];
                this.columnC049 = base.Columns["C049"];
                this.columnC050 = base.Columns["C050"];
                this.columnC051 = base.Columns["C051"];
                this.columnC052 = base.Columns["C052"];
                this.columnC053 = base.Columns["C053"];
                this.columnC054 = base.Columns["C054"];
                this.columnC055 = base.Columns["C055"];
                this.columnC056 = base.Columns["C056"];
                this.columnC057 = base.Columns["C057"];
                this.columnC058 = base.Columns["C058"];
                this.columnC059 = base.Columns["C059"];
                this.columnC060 = base.Columns["C060"];
                this.columnC061 = base.Columns["C061"];
                this.columnC062 = base.Columns["C062"];
                this.columnC063 = base.Columns["C063"];
                this.columnC064 = base.Columns["C064"];
                this.columnC065 = base.Columns["C065"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnR = new global::System.Data.DataColumn("R", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnR);
                this.columnC001 = new global::System.Data.DataColumn("C001", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC001);
                this.columnC002 = new global::System.Data.DataColumn("C002", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC002);
                this.columnC003 = new global::System.Data.DataColumn("C003", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC003);
                this.columnC004 = new global::System.Data.DataColumn("C004", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC004);
                this.columnC005 = new global::System.Data.DataColumn("C005", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC005);
                this.columnC006 = new global::System.Data.DataColumn("C006", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC006);
                this.columnC007 = new global::System.Data.DataColumn("C007", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC007);
                this.columnC008 = new global::System.Data.DataColumn("C008", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC008);
                this.columnC009 = new global::System.Data.DataColumn("C009", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC009);
                this.columnC010 = new global::System.Data.DataColumn("C010", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC010);
                this.columnC011 = new global::System.Data.DataColumn("C011", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC011);
                this.columnC012 = new global::System.Data.DataColumn("C012", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC012);
                this.columnC013 = new global::System.Data.DataColumn("C013", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC013);
                this.columnC014 = new global::System.Data.DataColumn("C014", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC014);
                this.columnC015 = new global::System.Data.DataColumn("C015", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC015);
                this.columnC016 = new global::System.Data.DataColumn("C016", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC016);
                this.columnC017 = new global::System.Data.DataColumn("C017", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC017);
                this.columnC018 = new global::System.Data.DataColumn("C018", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC018);
                this.columnC019 = new global::System.Data.DataColumn("C019", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC019);
                this.columnC020 = new global::System.Data.DataColumn("C020", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC020);
                this.columnC021 = new global::System.Data.DataColumn("C021", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC021);
                this.columnC022 = new global::System.Data.DataColumn("C022", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC022);
                this.columnC023 = new global::System.Data.DataColumn("C023", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC023);
                this.columnC024 = new global::System.Data.DataColumn("C024", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC024);
                this.columnC025 = new global::System.Data.DataColumn("C025", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC025);
                this.columnC026 = new global::System.Data.DataColumn("C026", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC026);
                this.columnC027 = new global::System.Data.DataColumn("C027", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC027);
                this.columnC028 = new global::System.Data.DataColumn("C028", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC028);
                this.columnC029 = new global::System.Data.DataColumn("C029", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC029);
                this.columnC030 = new global::System.Data.DataColumn("C030", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC030);
                this.columnC031 = new global::System.Data.DataColumn("C031", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC031);
                this.columnC032 = new global::System.Data.DataColumn("C032", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC032);
                this.columnC033 = new global::System.Data.DataColumn("C033", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC033);
                this.columnC034 = new global::System.Data.DataColumn("C034", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC034);
                this.columnC035 = new global::System.Data.DataColumn("C035", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC035);
                this.columnC036 = new global::System.Data.DataColumn("C036", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC036);
                this.columnC037 = new global::System.Data.DataColumn("C037", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC037);
                this.columnC038 = new global::System.Data.DataColumn("C038", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC038);
                this.columnC039 = new global::System.Data.DataColumn("C039", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC039);
                this.columnC040 = new global::System.Data.DataColumn("C040", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC040);
                this.columnC041 = new global::System.Data.DataColumn("C041", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC041);
                this.columnC042 = new global::System.Data.DataColumn("C042", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC042);
                this.columnC043 = new global::System.Data.DataColumn("C043", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC043);
                this.columnC044 = new global::System.Data.DataColumn("C044", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC044);
                this.columnC045 = new global::System.Data.DataColumn("C045", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC045);
                this.columnC046 = new global::System.Data.DataColumn("C046", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC046);
                this.columnC047 = new global::System.Data.DataColumn("C047", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC047);
                this.columnC048 = new global::System.Data.DataColumn("C048", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC048);
                this.columnC049 = new global::System.Data.DataColumn("C049", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC049);
                this.columnC050 = new global::System.Data.DataColumn("C050", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC050);
                this.columnC051 = new global::System.Data.DataColumn("C051", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC051);
                this.columnC052 = new global::System.Data.DataColumn("C052", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC052);
                this.columnC053 = new global::System.Data.DataColumn("C053", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC053);
                this.columnC054 = new global::System.Data.DataColumn("C054", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC054);
                this.columnC055 = new global::System.Data.DataColumn("C055", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC055);
                this.columnC056 = new global::System.Data.DataColumn("C056", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC056);
                this.columnC057 = new global::System.Data.DataColumn("C057", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC057);
                this.columnC058 = new global::System.Data.DataColumn("C058", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC058);
                this.columnC059 = new global::System.Data.DataColumn("C059", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC059);
                this.columnC060 = new global::System.Data.DataColumn("C060", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC060);
                this.columnC061 = new global::System.Data.DataColumn("C061", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC061);
                this.columnC062 = new global::System.Data.DataColumn("C062", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC062);
                this.columnC063 = new global::System.Data.DataColumn("C063", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC063);
                this.columnC064 = new global::System.Data.DataColumn("C064", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC064);
                this.columnC065 = new global::System.Data.DataColumn("C065", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC065);
                this.columnC001.MaxLength = 4000;
                this.columnC002.MaxLength = 4000;
                this.columnC003.MaxLength = 4000;
                this.columnC004.MaxLength = 4000;
                this.columnC005.MaxLength = 4000;
                this.columnC006.MaxLength = 4000;
                this.columnC007.MaxLength = 4000;
                this.columnC008.MaxLength = 4000;
                this.columnC009.MaxLength = 4000;
                this.columnC010.MaxLength = 4000;
                this.columnC011.MaxLength = 4000;
                this.columnC012.MaxLength = 4000;
                this.columnC013.MaxLength = 4000;
                this.columnC014.MaxLength = 4000;
                this.columnC015.MaxLength = 4000;
                this.columnC016.MaxLength = 4000;
                this.columnC017.MaxLength = 4000;
                this.columnC018.MaxLength = 4000;
                this.columnC019.MaxLength = 4000;
                this.columnC020.MaxLength = 4000;
                this.columnC021.MaxLength = 4000;
                this.columnC022.MaxLength = 4000;
                this.columnC023.MaxLength = 4000;
                this.columnC024.MaxLength = 4000;
                this.columnC025.MaxLength = 4000;
                this.columnC026.MaxLength = 4000;
                this.columnC027.MaxLength = 4000;
                this.columnC028.MaxLength = 4000;
                this.columnC029.MaxLength = 4000;
                this.columnC030.MaxLength = 4000;
                this.columnC031.MaxLength = 4000;
                this.columnC032.MaxLength = 4000;
                this.columnC033.MaxLength = 4000;
                this.columnC034.MaxLength = 4000;
                this.columnC035.MaxLength = 4000;
                this.columnC036.MaxLength = 4000;
                this.columnC037.MaxLength = 4000;
                this.columnC038.MaxLength = 4000;
                this.columnC039.MaxLength = 4000;
                this.columnC040.MaxLength = 4000;
                this.columnC041.MaxLength = 4000;
                this.columnC042.MaxLength = 4000;
                this.columnC043.MaxLength = 4000;
                this.columnC044.MaxLength = 4000;
                this.columnC045.MaxLength = 4000;
                this.columnC046.MaxLength = 4000;
                this.columnC047.MaxLength = 4000;
                this.columnC048.MaxLength = 4000;
                this.columnC049.MaxLength = 4000;
                this.columnC050.MaxLength = 4000;
                this.columnC051.MaxLength = 4000;
                this.columnC052.MaxLength = 4000;
                this.columnC053.MaxLength = 4000;
                this.columnC054.MaxLength = 4000;
                this.columnC055.MaxLength = 4000;
                this.columnC056.MaxLength = 4000;
                this.columnC057.MaxLength = 4000;
                this.columnC058.MaxLength = 4000;
                this.columnC059.MaxLength = 4000;
                this.columnC060.MaxLength = 4000;
                this.columnC061.MaxLength = 4000;
                this.columnC062.MaxLength = 4000;
                this.columnC063.MaxLength = 4000;
                this.columnC064.MaxLength = 4000;
                this.columnC065.MaxLength = 4000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_TEMP_TABLERow NewWWV_FLOW_TEMP_TABLERow() {
                return ((WWV_FLOW_TEMP_TABLERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_TEMP_TABLERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_TEMP_TABLERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_TEMP_TABLERowChanged != null)) {
                    this.WWV_FLOW_TEMP_TABLERowChanged(this, new WWV_FLOW_TEMP_TABLERowChangeEvent(((WWV_FLOW_TEMP_TABLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_TEMP_TABLERowChanging != null)) {
                    this.WWV_FLOW_TEMP_TABLERowChanging(this, new WWV_FLOW_TEMP_TABLERowChangeEvent(((WWV_FLOW_TEMP_TABLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_TEMP_TABLERowDeleted != null)) {
                    this.WWV_FLOW_TEMP_TABLERowDeleted(this, new WWV_FLOW_TEMP_TABLERowChangeEvent(((WWV_FLOW_TEMP_TABLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_TEMP_TABLERowDeleting != null)) {
                    this.WWV_FLOW_TEMP_TABLERowDeleting(this, new WWV_FLOW_TEMP_TABLERowChangeEvent(((WWV_FLOW_TEMP_TABLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_TEMP_TABLERow(WWV_FLOW_TEMP_TABLERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_TEMP_TABLEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_CLICKTHRU_LOGDataTable : global::System.Data.TypedTableBase<WWV_FLOW_CLICKTHRU_LOGRow> {
            
            private global::System.Data.DataColumn columnCLICKDATE;
            
            private global::System.Data.DataColumn columnCATEGORY;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnFLOW_USER;
            
            private global::System.Data.DataColumn columnIP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_CLICKTHRU_LOGDataTable() {
                this.TableName = "WWV_FLOW_CLICKTHRU_LOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_CLICKTHRU_LOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_CLICKTHRU_LOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLICKDATEColumn {
                get {
                    return this.columnCLICKDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CATEGORYColumn {
                get {
                    return this.columnCATEGORY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLOW_USERColumn {
                get {
                    return this.columnFLOW_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IPColumn {
                get {
                    return this.columnIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_CLICKTHRU_LOGRow this[int index] {
                get {
                    return ((WWV_FLOW_CLICKTHRU_LOGRow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_CLICKTHRU_LOGRowChangeEventHandler WWV_FLOW_CLICKTHRU_LOGRowChanging;
            
            public event WWV_FLOW_CLICKTHRU_LOGRowChangeEventHandler WWV_FLOW_CLICKTHRU_LOGRowChanged;
            
            public event WWV_FLOW_CLICKTHRU_LOGRowChangeEventHandler WWV_FLOW_CLICKTHRU_LOGRowDeleting;
            
            public event WWV_FLOW_CLICKTHRU_LOGRowChangeEventHandler WWV_FLOW_CLICKTHRU_LOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_CLICKTHRU_LOGRow(WWV_FLOW_CLICKTHRU_LOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_CLICKTHRU_LOGRow AddWWV_FLOW_CLICKTHRU_LOGRow(System.DateTime CLICKDATE, string CATEGORY, decimal ID, string FLOW_USER, string IP) {
                WWV_FLOW_CLICKTHRU_LOGRow rowWWV_FLOW_CLICKTHRU_LOGRow = ((WWV_FLOW_CLICKTHRU_LOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CLICKDATE,
                        CATEGORY,
                        ID,
                        FLOW_USER,
                        IP};
                rowWWV_FLOW_CLICKTHRU_LOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_CLICKTHRU_LOGRow);
                return rowWWV_FLOW_CLICKTHRU_LOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_CLICKTHRU_LOGDataTable cln = ((WWV_FLOW_CLICKTHRU_LOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_CLICKTHRU_LOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCLICKDATE = base.Columns["CLICKDATE"];
                this.columnCATEGORY = base.Columns["CATEGORY"];
                this.columnID = base.Columns["ID"];
                this.columnFLOW_USER = base.Columns["FLOW_USER"];
                this.columnIP = base.Columns["IP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCLICKDATE = new global::System.Data.DataColumn("CLICKDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLICKDATE);
                this.columnCATEGORY = new global::System.Data.DataColumn("CATEGORY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCATEGORY);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnFLOW_USER = new global::System.Data.DataColumn("FLOW_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOW_USER);
                this.columnIP = new global::System.Data.DataColumn("IP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP);
                this.columnCATEGORY.MaxLength = 255;
                this.columnFLOW_USER.MaxLength = 255;
                this.columnIP.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_CLICKTHRU_LOGRow NewWWV_FLOW_CLICKTHRU_LOGRow() {
                return ((WWV_FLOW_CLICKTHRU_LOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_CLICKTHRU_LOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_CLICKTHRU_LOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_CLICKTHRU_LOGRowChanged != null)) {
                    this.WWV_FLOW_CLICKTHRU_LOGRowChanged(this, new WWV_FLOW_CLICKTHRU_LOGRowChangeEvent(((WWV_FLOW_CLICKTHRU_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_CLICKTHRU_LOGRowChanging != null)) {
                    this.WWV_FLOW_CLICKTHRU_LOGRowChanging(this, new WWV_FLOW_CLICKTHRU_LOGRowChangeEvent(((WWV_FLOW_CLICKTHRU_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_CLICKTHRU_LOGRowDeleted != null)) {
                    this.WWV_FLOW_CLICKTHRU_LOGRowDeleted(this, new WWV_FLOW_CLICKTHRU_LOGRowChangeEvent(((WWV_FLOW_CLICKTHRU_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_CLICKTHRU_LOGRowDeleting != null)) {
                    this.WWV_FLOW_CLICKTHRU_LOGRowDeleting(this, new WWV_FLOW_CLICKTHRU_LOGRowChangeEvent(((WWV_FLOW_CLICKTHRU_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_CLICKTHRU_LOGRow(WWV_FLOW_CLICKTHRU_LOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_CLICKTHRU_LOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_COLLECTIONSDataTable : global::System.Data.TypedTableBase<WWV_FLOW_COLLECTIONSRow> {
            
            private global::System.Data.DataColumn columnCOLLECTION_NAME;
            
            private global::System.Data.DataColumn columnSEQ_ID;
            
            private global::System.Data.DataColumn columnC001;
            
            private global::System.Data.DataColumn columnC002;
            
            private global::System.Data.DataColumn columnC003;
            
            private global::System.Data.DataColumn columnC004;
            
            private global::System.Data.DataColumn columnC005;
            
            private global::System.Data.DataColumn columnC006;
            
            private global::System.Data.DataColumn columnC007;
            
            private global::System.Data.DataColumn columnC008;
            
            private global::System.Data.DataColumn columnC009;
            
            private global::System.Data.DataColumn columnC010;
            
            private global::System.Data.DataColumn columnC011;
            
            private global::System.Data.DataColumn columnC012;
            
            private global::System.Data.DataColumn columnC013;
            
            private global::System.Data.DataColumn columnC014;
            
            private global::System.Data.DataColumn columnC015;
            
            private global::System.Data.DataColumn columnC016;
            
            private global::System.Data.DataColumn columnC017;
            
            private global::System.Data.DataColumn columnC018;
            
            private global::System.Data.DataColumn columnC019;
            
            private global::System.Data.DataColumn columnC020;
            
            private global::System.Data.DataColumn columnC021;
            
            private global::System.Data.DataColumn columnC022;
            
            private global::System.Data.DataColumn columnC023;
            
            private global::System.Data.DataColumn columnC024;
            
            private global::System.Data.DataColumn columnC025;
            
            private global::System.Data.DataColumn columnC026;
            
            private global::System.Data.DataColumn columnC027;
            
            private global::System.Data.DataColumn columnC028;
            
            private global::System.Data.DataColumn columnC029;
            
            private global::System.Data.DataColumn columnC030;
            
            private global::System.Data.DataColumn columnC031;
            
            private global::System.Data.DataColumn columnC032;
            
            private global::System.Data.DataColumn columnC033;
            
            private global::System.Data.DataColumn columnC034;
            
            private global::System.Data.DataColumn columnC035;
            
            private global::System.Data.DataColumn columnC036;
            
            private global::System.Data.DataColumn columnC037;
            
            private global::System.Data.DataColumn columnC038;
            
            private global::System.Data.DataColumn columnC039;
            
            private global::System.Data.DataColumn columnC040;
            
            private global::System.Data.DataColumn columnC041;
            
            private global::System.Data.DataColumn columnC042;
            
            private global::System.Data.DataColumn columnC043;
            
            private global::System.Data.DataColumn columnC044;
            
            private global::System.Data.DataColumn columnC045;
            
            private global::System.Data.DataColumn columnC046;
            
            private global::System.Data.DataColumn columnC047;
            
            private global::System.Data.DataColumn columnC048;
            
            private global::System.Data.DataColumn columnC049;
            
            private global::System.Data.DataColumn columnC050;
            
            private global::System.Data.DataColumn columnCLOB001;
            
            private global::System.Data.DataColumn columnMD5_ORIGINAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_COLLECTIONSDataTable() {
                this.TableName = "WWV_FLOW_COLLECTIONS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_COLLECTIONSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_COLLECTIONSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COLLECTION_NAMEColumn {
                get {
                    return this.columnCOLLECTION_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEQ_IDColumn {
                get {
                    return this.columnSEQ_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C001Column {
                get {
                    return this.columnC001;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C002Column {
                get {
                    return this.columnC002;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C003Column {
                get {
                    return this.columnC003;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C004Column {
                get {
                    return this.columnC004;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C005Column {
                get {
                    return this.columnC005;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C006Column {
                get {
                    return this.columnC006;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C007Column {
                get {
                    return this.columnC007;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C008Column {
                get {
                    return this.columnC008;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C009Column {
                get {
                    return this.columnC009;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C010Column {
                get {
                    return this.columnC010;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C011Column {
                get {
                    return this.columnC011;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C012Column {
                get {
                    return this.columnC012;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C013Column {
                get {
                    return this.columnC013;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C014Column {
                get {
                    return this.columnC014;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C015Column {
                get {
                    return this.columnC015;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C016Column {
                get {
                    return this.columnC016;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C017Column {
                get {
                    return this.columnC017;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C018Column {
                get {
                    return this.columnC018;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C019Column {
                get {
                    return this.columnC019;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C020Column {
                get {
                    return this.columnC020;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C021Column {
                get {
                    return this.columnC021;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C022Column {
                get {
                    return this.columnC022;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C023Column {
                get {
                    return this.columnC023;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C024Column {
                get {
                    return this.columnC024;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C025Column {
                get {
                    return this.columnC025;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C026Column {
                get {
                    return this.columnC026;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C027Column {
                get {
                    return this.columnC027;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C028Column {
                get {
                    return this.columnC028;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C029Column {
                get {
                    return this.columnC029;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C030Column {
                get {
                    return this.columnC030;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C031Column {
                get {
                    return this.columnC031;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C032Column {
                get {
                    return this.columnC032;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C033Column {
                get {
                    return this.columnC033;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C034Column {
                get {
                    return this.columnC034;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C035Column {
                get {
                    return this.columnC035;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C036Column {
                get {
                    return this.columnC036;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C037Column {
                get {
                    return this.columnC037;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C038Column {
                get {
                    return this.columnC038;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C039Column {
                get {
                    return this.columnC039;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C040Column {
                get {
                    return this.columnC040;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C041Column {
                get {
                    return this.columnC041;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C042Column {
                get {
                    return this.columnC042;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C043Column {
                get {
                    return this.columnC043;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C044Column {
                get {
                    return this.columnC044;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C045Column {
                get {
                    return this.columnC045;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C046Column {
                get {
                    return this.columnC046;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C047Column {
                get {
                    return this.columnC047;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C048Column {
                get {
                    return this.columnC048;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C049Column {
                get {
                    return this.columnC049;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C050Column {
                get {
                    return this.columnC050;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLOB001Column {
                get {
                    return this.columnCLOB001;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MD5_ORIGINALColumn {
                get {
                    return this.columnMD5_ORIGINAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_COLLECTIONSRow this[int index] {
                get {
                    return ((WWV_FLOW_COLLECTIONSRow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_COLLECTIONSRowChangeEventHandler WWV_FLOW_COLLECTIONSRowChanging;
            
            public event WWV_FLOW_COLLECTIONSRowChangeEventHandler WWV_FLOW_COLLECTIONSRowChanged;
            
            public event WWV_FLOW_COLLECTIONSRowChangeEventHandler WWV_FLOW_COLLECTIONSRowDeleting;
            
            public event WWV_FLOW_COLLECTIONSRowChangeEventHandler WWV_FLOW_COLLECTIONSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_COLLECTIONSRow(WWV_FLOW_COLLECTIONSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_COLLECTIONSRow AddWWV_FLOW_COLLECTIONSRow(
                        string COLLECTION_NAME, 
                        decimal SEQ_ID, 
                        string C001, 
                        string C002, 
                        string C003, 
                        string C004, 
                        string C005, 
                        string C006, 
                        string C007, 
                        string C008, 
                        string C009, 
                        string C010, 
                        string C011, 
                        string C012, 
                        string C013, 
                        string C014, 
                        string C015, 
                        string C016, 
                        string C017, 
                        string C018, 
                        string C019, 
                        string C020, 
                        string C021, 
                        string C022, 
                        string C023, 
                        string C024, 
                        string C025, 
                        string C026, 
                        string C027, 
                        string C028, 
                        string C029, 
                        string C030, 
                        string C031, 
                        string C032, 
                        string C033, 
                        string C034, 
                        string C035, 
                        string C036, 
                        string C037, 
                        string C038, 
                        string C039, 
                        string C040, 
                        string C041, 
                        string C042, 
                        string C043, 
                        string C044, 
                        string C045, 
                        string C046, 
                        string C047, 
                        string C048, 
                        string C049, 
                        string C050, 
                        string CLOB001, 
                        string MD5_ORIGINAL) {
                WWV_FLOW_COLLECTIONSRow rowWWV_FLOW_COLLECTIONSRow = ((WWV_FLOW_COLLECTIONSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COLLECTION_NAME,
                        SEQ_ID,
                        C001,
                        C002,
                        C003,
                        C004,
                        C005,
                        C006,
                        C007,
                        C008,
                        C009,
                        C010,
                        C011,
                        C012,
                        C013,
                        C014,
                        C015,
                        C016,
                        C017,
                        C018,
                        C019,
                        C020,
                        C021,
                        C022,
                        C023,
                        C024,
                        C025,
                        C026,
                        C027,
                        C028,
                        C029,
                        C030,
                        C031,
                        C032,
                        C033,
                        C034,
                        C035,
                        C036,
                        C037,
                        C038,
                        C039,
                        C040,
                        C041,
                        C042,
                        C043,
                        C044,
                        C045,
                        C046,
                        C047,
                        C048,
                        C049,
                        C050,
                        CLOB001,
                        MD5_ORIGINAL};
                rowWWV_FLOW_COLLECTIONSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_COLLECTIONSRow);
                return rowWWV_FLOW_COLLECTIONSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_COLLECTIONSDataTable cln = ((WWV_FLOW_COLLECTIONSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_COLLECTIONSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCOLLECTION_NAME = base.Columns["COLLECTION_NAME"];
                this.columnSEQ_ID = base.Columns["SEQ_ID"];
                this.columnC001 = base.Columns["C001"];
                this.columnC002 = base.Columns["C002"];
                this.columnC003 = base.Columns["C003"];
                this.columnC004 = base.Columns["C004"];
                this.columnC005 = base.Columns["C005"];
                this.columnC006 = base.Columns["C006"];
                this.columnC007 = base.Columns["C007"];
                this.columnC008 = base.Columns["C008"];
                this.columnC009 = base.Columns["C009"];
                this.columnC010 = base.Columns["C010"];
                this.columnC011 = base.Columns["C011"];
                this.columnC012 = base.Columns["C012"];
                this.columnC013 = base.Columns["C013"];
                this.columnC014 = base.Columns["C014"];
                this.columnC015 = base.Columns["C015"];
                this.columnC016 = base.Columns["C016"];
                this.columnC017 = base.Columns["C017"];
                this.columnC018 = base.Columns["C018"];
                this.columnC019 = base.Columns["C019"];
                this.columnC020 = base.Columns["C020"];
                this.columnC021 = base.Columns["C021"];
                this.columnC022 = base.Columns["C022"];
                this.columnC023 = base.Columns["C023"];
                this.columnC024 = base.Columns["C024"];
                this.columnC025 = base.Columns["C025"];
                this.columnC026 = base.Columns["C026"];
                this.columnC027 = base.Columns["C027"];
                this.columnC028 = base.Columns["C028"];
                this.columnC029 = base.Columns["C029"];
                this.columnC030 = base.Columns["C030"];
                this.columnC031 = base.Columns["C031"];
                this.columnC032 = base.Columns["C032"];
                this.columnC033 = base.Columns["C033"];
                this.columnC034 = base.Columns["C034"];
                this.columnC035 = base.Columns["C035"];
                this.columnC036 = base.Columns["C036"];
                this.columnC037 = base.Columns["C037"];
                this.columnC038 = base.Columns["C038"];
                this.columnC039 = base.Columns["C039"];
                this.columnC040 = base.Columns["C040"];
                this.columnC041 = base.Columns["C041"];
                this.columnC042 = base.Columns["C042"];
                this.columnC043 = base.Columns["C043"];
                this.columnC044 = base.Columns["C044"];
                this.columnC045 = base.Columns["C045"];
                this.columnC046 = base.Columns["C046"];
                this.columnC047 = base.Columns["C047"];
                this.columnC048 = base.Columns["C048"];
                this.columnC049 = base.Columns["C049"];
                this.columnC050 = base.Columns["C050"];
                this.columnCLOB001 = base.Columns["CLOB001"];
                this.columnMD5_ORIGINAL = base.Columns["MD5_ORIGINAL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCOLLECTION_NAME = new global::System.Data.DataColumn("COLLECTION_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLECTION_NAME);
                this.columnSEQ_ID = new global::System.Data.DataColumn("SEQ_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ_ID);
                this.columnC001 = new global::System.Data.DataColumn("C001", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC001);
                this.columnC002 = new global::System.Data.DataColumn("C002", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC002);
                this.columnC003 = new global::System.Data.DataColumn("C003", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC003);
                this.columnC004 = new global::System.Data.DataColumn("C004", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC004);
                this.columnC005 = new global::System.Data.DataColumn("C005", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC005);
                this.columnC006 = new global::System.Data.DataColumn("C006", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC006);
                this.columnC007 = new global::System.Data.DataColumn("C007", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC007);
                this.columnC008 = new global::System.Data.DataColumn("C008", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC008);
                this.columnC009 = new global::System.Data.DataColumn("C009", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC009);
                this.columnC010 = new global::System.Data.DataColumn("C010", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC010);
                this.columnC011 = new global::System.Data.DataColumn("C011", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC011);
                this.columnC012 = new global::System.Data.DataColumn("C012", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC012);
                this.columnC013 = new global::System.Data.DataColumn("C013", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC013);
                this.columnC014 = new global::System.Data.DataColumn("C014", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC014);
                this.columnC015 = new global::System.Data.DataColumn("C015", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC015);
                this.columnC016 = new global::System.Data.DataColumn("C016", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC016);
                this.columnC017 = new global::System.Data.DataColumn("C017", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC017);
                this.columnC018 = new global::System.Data.DataColumn("C018", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC018);
                this.columnC019 = new global::System.Data.DataColumn("C019", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC019);
                this.columnC020 = new global::System.Data.DataColumn("C020", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC020);
                this.columnC021 = new global::System.Data.DataColumn("C021", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC021);
                this.columnC022 = new global::System.Data.DataColumn("C022", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC022);
                this.columnC023 = new global::System.Data.DataColumn("C023", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC023);
                this.columnC024 = new global::System.Data.DataColumn("C024", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC024);
                this.columnC025 = new global::System.Data.DataColumn("C025", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC025);
                this.columnC026 = new global::System.Data.DataColumn("C026", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC026);
                this.columnC027 = new global::System.Data.DataColumn("C027", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC027);
                this.columnC028 = new global::System.Data.DataColumn("C028", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC028);
                this.columnC029 = new global::System.Data.DataColumn("C029", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC029);
                this.columnC030 = new global::System.Data.DataColumn("C030", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC030);
                this.columnC031 = new global::System.Data.DataColumn("C031", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC031);
                this.columnC032 = new global::System.Data.DataColumn("C032", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC032);
                this.columnC033 = new global::System.Data.DataColumn("C033", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC033);
                this.columnC034 = new global::System.Data.DataColumn("C034", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC034);
                this.columnC035 = new global::System.Data.DataColumn("C035", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC035);
                this.columnC036 = new global::System.Data.DataColumn("C036", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC036);
                this.columnC037 = new global::System.Data.DataColumn("C037", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC037);
                this.columnC038 = new global::System.Data.DataColumn("C038", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC038);
                this.columnC039 = new global::System.Data.DataColumn("C039", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC039);
                this.columnC040 = new global::System.Data.DataColumn("C040", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC040);
                this.columnC041 = new global::System.Data.DataColumn("C041", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC041);
                this.columnC042 = new global::System.Data.DataColumn("C042", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC042);
                this.columnC043 = new global::System.Data.DataColumn("C043", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC043);
                this.columnC044 = new global::System.Data.DataColumn("C044", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC044);
                this.columnC045 = new global::System.Data.DataColumn("C045", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC045);
                this.columnC046 = new global::System.Data.DataColumn("C046", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC046);
                this.columnC047 = new global::System.Data.DataColumn("C047", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC047);
                this.columnC048 = new global::System.Data.DataColumn("C048", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC048);
                this.columnC049 = new global::System.Data.DataColumn("C049", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC049);
                this.columnC050 = new global::System.Data.DataColumn("C050", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC050);
                this.columnCLOB001 = new global::System.Data.DataColumn("CLOB001", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLOB001);
                this.columnMD5_ORIGINAL = new global::System.Data.DataColumn("MD5_ORIGINAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMD5_ORIGINAL);
                this.columnCOLLECTION_NAME.AllowDBNull = false;
                this.columnCOLLECTION_NAME.MaxLength = 255;
                this.columnSEQ_ID.AllowDBNull = false;
                this.columnC001.MaxLength = 4000;
                this.columnC002.MaxLength = 4000;
                this.columnC003.MaxLength = 4000;
                this.columnC004.MaxLength = 4000;
                this.columnC005.MaxLength = 4000;
                this.columnC006.MaxLength = 4000;
                this.columnC007.MaxLength = 4000;
                this.columnC008.MaxLength = 4000;
                this.columnC009.MaxLength = 4000;
                this.columnC010.MaxLength = 4000;
                this.columnC011.MaxLength = 4000;
                this.columnC012.MaxLength = 4000;
                this.columnC013.MaxLength = 4000;
                this.columnC014.MaxLength = 4000;
                this.columnC015.MaxLength = 4000;
                this.columnC016.MaxLength = 4000;
                this.columnC017.MaxLength = 4000;
                this.columnC018.MaxLength = 4000;
                this.columnC019.MaxLength = 4000;
                this.columnC020.MaxLength = 4000;
                this.columnC021.MaxLength = 4000;
                this.columnC022.MaxLength = 4000;
                this.columnC023.MaxLength = 4000;
                this.columnC024.MaxLength = 4000;
                this.columnC025.MaxLength = 4000;
                this.columnC026.MaxLength = 4000;
                this.columnC027.MaxLength = 4000;
                this.columnC028.MaxLength = 4000;
                this.columnC029.MaxLength = 4000;
                this.columnC030.MaxLength = 4000;
                this.columnC031.MaxLength = 4000;
                this.columnC032.MaxLength = 4000;
                this.columnC033.MaxLength = 4000;
                this.columnC034.MaxLength = 4000;
                this.columnC035.MaxLength = 4000;
                this.columnC036.MaxLength = 4000;
                this.columnC037.MaxLength = 4000;
                this.columnC038.MaxLength = 4000;
                this.columnC039.MaxLength = 4000;
                this.columnC040.MaxLength = 4000;
                this.columnC041.MaxLength = 4000;
                this.columnC042.MaxLength = 4000;
                this.columnC043.MaxLength = 4000;
                this.columnC044.MaxLength = 4000;
                this.columnC045.MaxLength = 4000;
                this.columnC046.MaxLength = 4000;
                this.columnC047.MaxLength = 4000;
                this.columnC048.MaxLength = 4000;
                this.columnC049.MaxLength = 4000;
                this.columnC050.MaxLength = 4000;
                this.columnCLOB001.MaxLength = 2147483647;
                this.columnMD5_ORIGINAL.MaxLength = 4000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_COLLECTIONSRow NewWWV_FLOW_COLLECTIONSRow() {
                return ((WWV_FLOW_COLLECTIONSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_COLLECTIONSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_COLLECTIONSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_COLLECTIONSRowChanged != null)) {
                    this.WWV_FLOW_COLLECTIONSRowChanged(this, new WWV_FLOW_COLLECTIONSRowChangeEvent(((WWV_FLOW_COLLECTIONSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_COLLECTIONSRowChanging != null)) {
                    this.WWV_FLOW_COLLECTIONSRowChanging(this, new WWV_FLOW_COLLECTIONSRowChangeEvent(((WWV_FLOW_COLLECTIONSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_COLLECTIONSRowDeleted != null)) {
                    this.WWV_FLOW_COLLECTIONSRowDeleted(this, new WWV_FLOW_COLLECTIONSRowChangeEvent(((WWV_FLOW_COLLECTIONSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_COLLECTIONSRowDeleting != null)) {
                    this.WWV_FLOW_COLLECTIONSRowDeleting(this, new WWV_FLOW_COLLECTIONSRowChangeEvent(((WWV_FLOW_COLLECTIONSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_COLLECTIONSRow(WWV_FLOW_COLLECTIONSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_COLLECTIONSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_FILESDataTable : global::System.Data.TypedTableBase<WWV_FLOW_FILESRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnFLOW_ID;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnFILENAME;
            
            private global::System.Data.DataColumn columnTITLE;
            
            private global::System.Data.DataColumn columnMIME_TYPE;
            
            private global::System.Data.DataColumn columnDOC_SIZE;
            
            private global::System.Data.DataColumn columnDAD_CHARSET;
            
            private global::System.Data.DataColumn columnCREATED_BY;
            
            private global::System.Data.DataColumn columnCREATED_ON;
            
            private global::System.Data.DataColumn columnUPDATED_BY;
            
            private global::System.Data.DataColumn columnUPDATED_ON;
            
            private global::System.Data.DataColumn columnLAST_UPDATED;
            
            private global::System.Data.DataColumn columnCONTENT_TYPE;
            
            private global::System.Data.DataColumn columnBLOB_CONTENT;
            
            private global::System.Data.DataColumn columnLANGUAGE;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnFILE_TYPE;
            
            private global::System.Data.DataColumn columnFILE_CHARSET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_FILESDataTable() {
                this.TableName = "WWV_FLOW_FILES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_FILESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_FILESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLOW_IDColumn {
                get {
                    return this.columnFLOW_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FILENAMEColumn {
                get {
                    return this.columnFILENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TITLEColumn {
                get {
                    return this.columnTITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIME_TYPEColumn {
                get {
                    return this.columnMIME_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOC_SIZEColumn {
                get {
                    return this.columnDOC_SIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DAD_CHARSETColumn {
                get {
                    return this.columnDAD_CHARSET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATED_BYColumn {
                get {
                    return this.columnCREATED_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATED_ONColumn {
                get {
                    return this.columnCREATED_ON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATED_BYColumn {
                get {
                    return this.columnUPDATED_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATED_ONColumn {
                get {
                    return this.columnUPDATED_ON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_UPDATEDColumn {
                get {
                    return this.columnLAST_UPDATED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONTENT_TYPEColumn {
                get {
                    return this.columnCONTENT_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLOB_CONTENTColumn {
                get {
                    return this.columnBLOB_CONTENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LANGUAGEColumn {
                get {
                    return this.columnLANGUAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FILE_TYPEColumn {
                get {
                    return this.columnFILE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FILE_CHARSETColumn {
                get {
                    return this.columnFILE_CHARSET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_FILESRow this[int index] {
                get {
                    return ((WWV_FLOW_FILESRow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_FILESRowChangeEventHandler WWV_FLOW_FILESRowChanging;
            
            public event WWV_FLOW_FILESRowChangeEventHandler WWV_FLOW_FILESRowChanged;
            
            public event WWV_FLOW_FILESRowChangeEventHandler WWV_FLOW_FILESRowDeleting;
            
            public event WWV_FLOW_FILESRowChangeEventHandler WWV_FLOW_FILESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_FILESRow(WWV_FLOW_FILESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_FILESRow AddWWV_FLOW_FILESRow(
                        decimal ID, 
                        decimal FLOW_ID, 
                        string NAME, 
                        string FILENAME, 
                        string TITLE, 
                        string MIME_TYPE, 
                        decimal DOC_SIZE, 
                        string DAD_CHARSET, 
                        string CREATED_BY, 
                        System.DateTime CREATED_ON, 
                        string UPDATED_BY, 
                        System.DateTime UPDATED_ON, 
                        System.DateTime LAST_UPDATED, 
                        string CONTENT_TYPE, 
                        byte[] BLOB_CONTENT, 
                        string LANGUAGE, 
                        string DESCRIPTION, 
                        string FILE_TYPE, 
                        string FILE_CHARSET) {
                WWV_FLOW_FILESRow rowWWV_FLOW_FILESRow = ((WWV_FLOW_FILESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        FLOW_ID,
                        NAME,
                        FILENAME,
                        TITLE,
                        MIME_TYPE,
                        DOC_SIZE,
                        DAD_CHARSET,
                        CREATED_BY,
                        CREATED_ON,
                        UPDATED_BY,
                        UPDATED_ON,
                        LAST_UPDATED,
                        CONTENT_TYPE,
                        BLOB_CONTENT,
                        LANGUAGE,
                        DESCRIPTION,
                        FILE_TYPE,
                        FILE_CHARSET};
                rowWWV_FLOW_FILESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_FILESRow);
                return rowWWV_FLOW_FILESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_FILESDataTable cln = ((WWV_FLOW_FILESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_FILESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnFLOW_ID = base.Columns["FLOW_ID"];
                this.columnNAME = base.Columns["NAME"];
                this.columnFILENAME = base.Columns["FILENAME"];
                this.columnTITLE = base.Columns["TITLE"];
                this.columnMIME_TYPE = base.Columns["MIME_TYPE"];
                this.columnDOC_SIZE = base.Columns["DOC_SIZE"];
                this.columnDAD_CHARSET = base.Columns["DAD_CHARSET"];
                this.columnCREATED_BY = base.Columns["CREATED_BY"];
                this.columnCREATED_ON = base.Columns["CREATED_ON"];
                this.columnUPDATED_BY = base.Columns["UPDATED_BY"];
                this.columnUPDATED_ON = base.Columns["UPDATED_ON"];
                this.columnLAST_UPDATED = base.Columns["LAST_UPDATED"];
                this.columnCONTENT_TYPE = base.Columns["CONTENT_TYPE"];
                this.columnBLOB_CONTENT = base.Columns["BLOB_CONTENT"];
                this.columnLANGUAGE = base.Columns["LANGUAGE"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnFILE_TYPE = base.Columns["FILE_TYPE"];
                this.columnFILE_CHARSET = base.Columns["FILE_CHARSET"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnFLOW_ID = new global::System.Data.DataColumn("FLOW_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOW_ID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnFILENAME = new global::System.Data.DataColumn("FILENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFILENAME);
                this.columnTITLE = new global::System.Data.DataColumn("TITLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTITLE);
                this.columnMIME_TYPE = new global::System.Data.DataColumn("MIME_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIME_TYPE);
                this.columnDOC_SIZE = new global::System.Data.DataColumn("DOC_SIZE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_SIZE);
                this.columnDAD_CHARSET = new global::System.Data.DataColumn("DAD_CHARSET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAD_CHARSET);
                this.columnCREATED_BY = new global::System.Data.DataColumn("CREATED_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATED_BY);
                this.columnCREATED_ON = new global::System.Data.DataColumn("CREATED_ON", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATED_ON);
                this.columnUPDATED_BY = new global::System.Data.DataColumn("UPDATED_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATED_BY);
                this.columnUPDATED_ON = new global::System.Data.DataColumn("UPDATED_ON", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATED_ON);
                this.columnLAST_UPDATED = new global::System.Data.DataColumn("LAST_UPDATED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_UPDATED);
                this.columnCONTENT_TYPE = new global::System.Data.DataColumn("CONTENT_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTENT_TYPE);
                this.columnBLOB_CONTENT = new global::System.Data.DataColumn("BLOB_CONTENT", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOB_CONTENT);
                this.columnLANGUAGE = new global::System.Data.DataColumn("LANGUAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLANGUAGE);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnFILE_TYPE = new global::System.Data.DataColumn("FILE_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFILE_TYPE);
                this.columnFILE_CHARSET = new global::System.Data.DataColumn("FILE_CHARSET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFILE_CHARSET);
                this.columnID.AllowDBNull = false;
                this.columnFLOW_ID.AllowDBNull = false;
                this.columnNAME.AllowDBNull = false;
                this.columnNAME.MaxLength = 90;
                this.columnFILENAME.MaxLength = 400;
                this.columnTITLE.MaxLength = 255;
                this.columnMIME_TYPE.MaxLength = 48;
                this.columnDAD_CHARSET.MaxLength = 128;
                this.columnCREATED_BY.MaxLength = 255;
                this.columnUPDATED_BY.MaxLength = 255;
                this.columnCONTENT_TYPE.MaxLength = 128;
                this.columnLANGUAGE.MaxLength = 30;
                this.columnDESCRIPTION.MaxLength = 4000;
                this.columnFILE_TYPE.MaxLength = 255;
                this.columnFILE_CHARSET.MaxLength = 128;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_FILESRow NewWWV_FLOW_FILESRow() {
                return ((WWV_FLOW_FILESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_FILESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_FILESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_FILESRowChanged != null)) {
                    this.WWV_FLOW_FILESRowChanged(this, new WWV_FLOW_FILESRowChangeEvent(((WWV_FLOW_FILESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_FILESRowChanging != null)) {
                    this.WWV_FLOW_FILESRowChanging(this, new WWV_FLOW_FILESRowChangeEvent(((WWV_FLOW_FILESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_FILESRowDeleted != null)) {
                    this.WWV_FLOW_FILESRowDeleted(this, new WWV_FLOW_FILESRowChangeEvent(((WWV_FLOW_FILESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_FILESRowDeleting != null)) {
                    this.WWV_FLOW_FILESRowDeleting(this, new WWV_FLOW_FILESRowChangeEvent(((WWV_FLOW_FILESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_FILESRow(WWV_FLOW_FILESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_FILESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_GROUP_USERSDataTable : global::System.Data.TypedTableBase<WWV_FLOW_GROUP_USERSRow> {
            
            private global::System.Data.DataColumn columnGROUP_ID;
            
            private global::System.Data.DataColumn columnGROUP_NAME;
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_GROUP_USERSDataTable() {
                this.TableName = "WWV_FLOW_GROUP_USERS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_GROUP_USERSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_GROUP_USERSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GROUP_IDColumn {
                get {
                    return this.columnGROUP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GROUP_NAMEColumn {
                get {
                    return this.columnGROUP_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_GROUP_USERSRow this[int index] {
                get {
                    return ((WWV_FLOW_GROUP_USERSRow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_GROUP_USERSRowChangeEventHandler WWV_FLOW_GROUP_USERSRowChanging;
            
            public event WWV_FLOW_GROUP_USERSRowChangeEventHandler WWV_FLOW_GROUP_USERSRowChanged;
            
            public event WWV_FLOW_GROUP_USERSRowChangeEventHandler WWV_FLOW_GROUP_USERSRowDeleting;
            
            public event WWV_FLOW_GROUP_USERSRowChangeEventHandler WWV_FLOW_GROUP_USERSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_GROUP_USERSRow(WWV_FLOW_GROUP_USERSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_GROUP_USERSRow AddWWV_FLOW_GROUP_USERSRow(decimal GROUP_ID, string GROUP_NAME, decimal USER_ID) {
                WWV_FLOW_GROUP_USERSRow rowWWV_FLOW_GROUP_USERSRow = ((WWV_FLOW_GROUP_USERSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GROUP_ID,
                        GROUP_NAME,
                        USER_ID};
                rowWWV_FLOW_GROUP_USERSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_GROUP_USERSRow);
                return rowWWV_FLOW_GROUP_USERSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_GROUP_USERSDataTable cln = ((WWV_FLOW_GROUP_USERSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_GROUP_USERSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGROUP_ID = base.Columns["GROUP_ID"];
                this.columnGROUP_NAME = base.Columns["GROUP_NAME"];
                this.columnUSER_ID = base.Columns["USER_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGROUP_ID = new global::System.Data.DataColumn("GROUP_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUP_ID);
                this.columnGROUP_NAME = new global::System.Data.DataColumn("GROUP_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUP_NAME);
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.columnGROUP_ID.AllowDBNull = false;
                this.columnGROUP_NAME.AllowDBNull = false;
                this.columnGROUP_NAME.MaxLength = 255;
                this.columnUSER_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_GROUP_USERSRow NewWWV_FLOW_GROUP_USERSRow() {
                return ((WWV_FLOW_GROUP_USERSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_GROUP_USERSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_GROUP_USERSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_GROUP_USERSRowChanged != null)) {
                    this.WWV_FLOW_GROUP_USERSRowChanged(this, new WWV_FLOW_GROUP_USERSRowChangeEvent(((WWV_FLOW_GROUP_USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_GROUP_USERSRowChanging != null)) {
                    this.WWV_FLOW_GROUP_USERSRowChanging(this, new WWV_FLOW_GROUP_USERSRowChangeEvent(((WWV_FLOW_GROUP_USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_GROUP_USERSRowDeleted != null)) {
                    this.WWV_FLOW_GROUP_USERSRowDeleted(this, new WWV_FLOW_GROUP_USERSRowChangeEvent(((WWV_FLOW_GROUP_USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_GROUP_USERSRowDeleting != null)) {
                    this.WWV_FLOW_GROUP_USERSRowDeleting(this, new WWV_FLOW_GROUP_USERSRowChangeEvent(((WWV_FLOW_GROUP_USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_GROUP_USERSRow(WWV_FLOW_GROUP_USERSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_GROUP_USERSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_HOURS_12DataTable : global::System.Data.TypedTableBase<WWV_FLOW_HOURS_12Row> {
            
            private global::System.Data.DataColumn columnHOUR_VALUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_HOURS_12DataTable() {
                this.TableName = "WWV_FLOW_HOURS_12";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_HOURS_12DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_HOURS_12DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOUR_VALUEColumn {
                get {
                    return this.columnHOUR_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_HOURS_12Row this[int index] {
                get {
                    return ((WWV_FLOW_HOURS_12Row)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_HOURS_12RowChangeEventHandler WWV_FLOW_HOURS_12RowChanging;
            
            public event WWV_FLOW_HOURS_12RowChangeEventHandler WWV_FLOW_HOURS_12RowChanged;
            
            public event WWV_FLOW_HOURS_12RowChangeEventHandler WWV_FLOW_HOURS_12RowDeleting;
            
            public event WWV_FLOW_HOURS_12RowChangeEventHandler WWV_FLOW_HOURS_12RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_HOURS_12Row(WWV_FLOW_HOURS_12Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_HOURS_12Row AddWWV_FLOW_HOURS_12Row(decimal HOUR_VALUE) {
                WWV_FLOW_HOURS_12Row rowWWV_FLOW_HOURS_12Row = ((WWV_FLOW_HOURS_12Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HOUR_VALUE};
                rowWWV_FLOW_HOURS_12Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_HOURS_12Row);
                return rowWWV_FLOW_HOURS_12Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_HOURS_12DataTable cln = ((WWV_FLOW_HOURS_12DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_HOURS_12DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHOUR_VALUE = base.Columns["HOUR_VALUE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHOUR_VALUE = new global::System.Data.DataColumn("HOUR_VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOUR_VALUE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_HOURS_12Row NewWWV_FLOW_HOURS_12Row() {
                return ((WWV_FLOW_HOURS_12Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_HOURS_12Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_HOURS_12Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_HOURS_12RowChanged != null)) {
                    this.WWV_FLOW_HOURS_12RowChanged(this, new WWV_FLOW_HOURS_12RowChangeEvent(((WWV_FLOW_HOURS_12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_HOURS_12RowChanging != null)) {
                    this.WWV_FLOW_HOURS_12RowChanging(this, new WWV_FLOW_HOURS_12RowChangeEvent(((WWV_FLOW_HOURS_12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_HOURS_12RowDeleted != null)) {
                    this.WWV_FLOW_HOURS_12RowDeleted(this, new WWV_FLOW_HOURS_12RowChangeEvent(((WWV_FLOW_HOURS_12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_HOURS_12RowDeleting != null)) {
                    this.WWV_FLOW_HOURS_12RowDeleting(this, new WWV_FLOW_HOURS_12RowChangeEvent(((WWV_FLOW_HOURS_12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_HOURS_12Row(WWV_FLOW_HOURS_12Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_HOURS_12DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_HOURS_24DataTable : global::System.Data.TypedTableBase<WWV_FLOW_HOURS_24Row> {
            
            private global::System.Data.DataColumn columnHOUR_VALUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_HOURS_24DataTable() {
                this.TableName = "WWV_FLOW_HOURS_24";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_HOURS_24DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_HOURS_24DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOUR_VALUEColumn {
                get {
                    return this.columnHOUR_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_HOURS_24Row this[int index] {
                get {
                    return ((WWV_FLOW_HOURS_24Row)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_HOURS_24RowChangeEventHandler WWV_FLOW_HOURS_24RowChanging;
            
            public event WWV_FLOW_HOURS_24RowChangeEventHandler WWV_FLOW_HOURS_24RowChanged;
            
            public event WWV_FLOW_HOURS_24RowChangeEventHandler WWV_FLOW_HOURS_24RowDeleting;
            
            public event WWV_FLOW_HOURS_24RowChangeEventHandler WWV_FLOW_HOURS_24RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_HOURS_24Row(WWV_FLOW_HOURS_24Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_HOURS_24Row AddWWV_FLOW_HOURS_24Row(decimal HOUR_VALUE) {
                WWV_FLOW_HOURS_24Row rowWWV_FLOW_HOURS_24Row = ((WWV_FLOW_HOURS_24Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HOUR_VALUE};
                rowWWV_FLOW_HOURS_24Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_HOURS_24Row);
                return rowWWV_FLOW_HOURS_24Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_HOURS_24DataTable cln = ((WWV_FLOW_HOURS_24DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_HOURS_24DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHOUR_VALUE = base.Columns["HOUR_VALUE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHOUR_VALUE = new global::System.Data.DataColumn("HOUR_VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOUR_VALUE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_HOURS_24Row NewWWV_FLOW_HOURS_24Row() {
                return ((WWV_FLOW_HOURS_24Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_HOURS_24Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_HOURS_24Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_HOURS_24RowChanged != null)) {
                    this.WWV_FLOW_HOURS_24RowChanged(this, new WWV_FLOW_HOURS_24RowChangeEvent(((WWV_FLOW_HOURS_24Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_HOURS_24RowChanging != null)) {
                    this.WWV_FLOW_HOURS_24RowChanging(this, new WWV_FLOW_HOURS_24RowChangeEvent(((WWV_FLOW_HOURS_24Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_HOURS_24RowDeleted != null)) {
                    this.WWV_FLOW_HOURS_24RowDeleted(this, new WWV_FLOW_HOURS_24RowChangeEvent(((WWV_FLOW_HOURS_24Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_HOURS_24RowDeleting != null)) {
                    this.WWV_FLOW_HOURS_24RowDeleting(this, new WWV_FLOW_HOURS_24RowChangeEvent(((WWV_FLOW_HOURS_24Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_HOURS_24Row(WWV_FLOW_HOURS_24Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_HOURS_24DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_MINUTESDataTable : global::System.Data.TypedTableBase<WWV_FLOW_MINUTESRow> {
            
            private global::System.Data.DataColumn columnMINUTE_VALUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MINUTESDataTable() {
                this.TableName = "WWV_FLOW_MINUTES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_MINUTESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_MINUTESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MINUTE_VALUEColumn {
                get {
                    return this.columnMINUTE_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MINUTESRow this[int index] {
                get {
                    return ((WWV_FLOW_MINUTESRow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_MINUTESRowChangeEventHandler WWV_FLOW_MINUTESRowChanging;
            
            public event WWV_FLOW_MINUTESRowChangeEventHandler WWV_FLOW_MINUTESRowChanged;
            
            public event WWV_FLOW_MINUTESRowChangeEventHandler WWV_FLOW_MINUTESRowDeleting;
            
            public event WWV_FLOW_MINUTESRowChangeEventHandler WWV_FLOW_MINUTESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_MINUTESRow(WWV_FLOW_MINUTESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MINUTESRow AddWWV_FLOW_MINUTESRow(decimal MINUTE_VALUE) {
                WWV_FLOW_MINUTESRow rowWWV_FLOW_MINUTESRow = ((WWV_FLOW_MINUTESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MINUTE_VALUE};
                rowWWV_FLOW_MINUTESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_MINUTESRow);
                return rowWWV_FLOW_MINUTESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_MINUTESDataTable cln = ((WWV_FLOW_MINUTESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_MINUTESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMINUTE_VALUE = base.Columns["MINUTE_VALUE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMINUTE_VALUE = new global::System.Data.DataColumn("MINUTE_VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMINUTE_VALUE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MINUTESRow NewWWV_FLOW_MINUTESRow() {
                return ((WWV_FLOW_MINUTESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_MINUTESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_MINUTESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_MINUTESRowChanged != null)) {
                    this.WWV_FLOW_MINUTESRowChanged(this, new WWV_FLOW_MINUTESRowChangeEvent(((WWV_FLOW_MINUTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_MINUTESRowChanging != null)) {
                    this.WWV_FLOW_MINUTESRowChanging(this, new WWV_FLOW_MINUTESRowChangeEvent(((WWV_FLOW_MINUTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_MINUTESRowDeleted != null)) {
                    this.WWV_FLOW_MINUTESRowDeleted(this, new WWV_FLOW_MINUTESRowChangeEvent(((WWV_FLOW_MINUTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_MINUTESRowDeleting != null)) {
                    this.WWV_FLOW_MINUTESRowDeleting(this, new WWV_FLOW_MINUTESRowChangeEvent(((WWV_FLOW_MINUTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_MINUTESRow(WWV_FLOW_MINUTESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_MINUTESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_MINUTES_5DataTable : global::System.Data.TypedTableBase<WWV_FLOW_MINUTES_5Row> {
            
            private global::System.Data.DataColumn columnMINUTE_VALUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MINUTES_5DataTable() {
                this.TableName = "WWV_FLOW_MINUTES_5";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_MINUTES_5DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_MINUTES_5DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MINUTE_VALUEColumn {
                get {
                    return this.columnMINUTE_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MINUTES_5Row this[int index] {
                get {
                    return ((WWV_FLOW_MINUTES_5Row)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_MINUTES_5RowChangeEventHandler WWV_FLOW_MINUTES_5RowChanging;
            
            public event WWV_FLOW_MINUTES_5RowChangeEventHandler WWV_FLOW_MINUTES_5RowChanged;
            
            public event WWV_FLOW_MINUTES_5RowChangeEventHandler WWV_FLOW_MINUTES_5RowDeleting;
            
            public event WWV_FLOW_MINUTES_5RowChangeEventHandler WWV_FLOW_MINUTES_5RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_MINUTES_5Row(WWV_FLOW_MINUTES_5Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MINUTES_5Row AddWWV_FLOW_MINUTES_5Row(decimal MINUTE_VALUE) {
                WWV_FLOW_MINUTES_5Row rowWWV_FLOW_MINUTES_5Row = ((WWV_FLOW_MINUTES_5Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MINUTE_VALUE};
                rowWWV_FLOW_MINUTES_5Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_MINUTES_5Row);
                return rowWWV_FLOW_MINUTES_5Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_MINUTES_5DataTable cln = ((WWV_FLOW_MINUTES_5DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_MINUTES_5DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMINUTE_VALUE = base.Columns["MINUTE_VALUE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMINUTE_VALUE = new global::System.Data.DataColumn("MINUTE_VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMINUTE_VALUE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MINUTES_5Row NewWWV_FLOW_MINUTES_5Row() {
                return ((WWV_FLOW_MINUTES_5Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_MINUTES_5Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_MINUTES_5Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_MINUTES_5RowChanged != null)) {
                    this.WWV_FLOW_MINUTES_5RowChanged(this, new WWV_FLOW_MINUTES_5RowChangeEvent(((WWV_FLOW_MINUTES_5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_MINUTES_5RowChanging != null)) {
                    this.WWV_FLOW_MINUTES_5RowChanging(this, new WWV_FLOW_MINUTES_5RowChangeEvent(((WWV_FLOW_MINUTES_5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_MINUTES_5RowDeleted != null)) {
                    this.WWV_FLOW_MINUTES_5RowDeleted(this, new WWV_FLOW_MINUTES_5RowChangeEvent(((WWV_FLOW_MINUTES_5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_MINUTES_5RowDeleting != null)) {
                    this.WWV_FLOW_MINUTES_5RowDeleting(this, new WWV_FLOW_MINUTES_5RowChangeEvent(((WWV_FLOW_MINUTES_5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_MINUTES_5Row(WWV_FLOW_MINUTES_5Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_MINUTES_5DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_MONTHS_MONDataTable : global::System.Data.TypedTableBase<WWV_FLOW_MONTHS_MONRow> {
            
            private global::System.Data.DataColumn columnMONTH_DISPLAY;
            
            private global::System.Data.DataColumn columnMONTH_VALUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MONTHS_MONDataTable() {
                this.TableName = "WWV_FLOW_MONTHS_MON";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_MONTHS_MONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_MONTHS_MONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MONTH_DISPLAYColumn {
                get {
                    return this.columnMONTH_DISPLAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MONTH_VALUEColumn {
                get {
                    return this.columnMONTH_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MONTHS_MONRow this[int index] {
                get {
                    return ((WWV_FLOW_MONTHS_MONRow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_MONTHS_MONRowChangeEventHandler WWV_FLOW_MONTHS_MONRowChanging;
            
            public event WWV_FLOW_MONTHS_MONRowChangeEventHandler WWV_FLOW_MONTHS_MONRowChanged;
            
            public event WWV_FLOW_MONTHS_MONRowChangeEventHandler WWV_FLOW_MONTHS_MONRowDeleting;
            
            public event WWV_FLOW_MONTHS_MONRowChangeEventHandler WWV_FLOW_MONTHS_MONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_MONTHS_MONRow(WWV_FLOW_MONTHS_MONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MONTHS_MONRow AddWWV_FLOW_MONTHS_MONRow(string MONTH_DISPLAY, decimal MONTH_VALUE) {
                WWV_FLOW_MONTHS_MONRow rowWWV_FLOW_MONTHS_MONRow = ((WWV_FLOW_MONTHS_MONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MONTH_DISPLAY,
                        MONTH_VALUE};
                rowWWV_FLOW_MONTHS_MONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_MONTHS_MONRow);
                return rowWWV_FLOW_MONTHS_MONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_MONTHS_MONDataTable cln = ((WWV_FLOW_MONTHS_MONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_MONTHS_MONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMONTH_DISPLAY = base.Columns["MONTH_DISPLAY"];
                this.columnMONTH_VALUE = base.Columns["MONTH_VALUE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMONTH_DISPLAY = new global::System.Data.DataColumn("MONTH_DISPLAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMONTH_DISPLAY);
                this.columnMONTH_VALUE = new global::System.Data.DataColumn("MONTH_VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMONTH_VALUE);
                this.columnMONTH_DISPLAY.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MONTHS_MONRow NewWWV_FLOW_MONTHS_MONRow() {
                return ((WWV_FLOW_MONTHS_MONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_MONTHS_MONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_MONTHS_MONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_MONTHS_MONRowChanged != null)) {
                    this.WWV_FLOW_MONTHS_MONRowChanged(this, new WWV_FLOW_MONTHS_MONRowChangeEvent(((WWV_FLOW_MONTHS_MONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_MONTHS_MONRowChanging != null)) {
                    this.WWV_FLOW_MONTHS_MONRowChanging(this, new WWV_FLOW_MONTHS_MONRowChangeEvent(((WWV_FLOW_MONTHS_MONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_MONTHS_MONRowDeleted != null)) {
                    this.WWV_FLOW_MONTHS_MONRowDeleted(this, new WWV_FLOW_MONTHS_MONRowChangeEvent(((WWV_FLOW_MONTHS_MONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_MONTHS_MONRowDeleting != null)) {
                    this.WWV_FLOW_MONTHS_MONRowDeleting(this, new WWV_FLOW_MONTHS_MONRowChangeEvent(((WWV_FLOW_MONTHS_MONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_MONTHS_MONRow(WWV_FLOW_MONTHS_MONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_MONTHS_MONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_MONTHS_MONTHDataTable : global::System.Data.TypedTableBase<WWV_FLOW_MONTHS_MONTHRow> {
            
            private global::System.Data.DataColumn columnMONTH_DISPLAY;
            
            private global::System.Data.DataColumn columnMONTH_VALUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MONTHS_MONTHDataTable() {
                this.TableName = "WWV_FLOW_MONTHS_MONTH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_MONTHS_MONTHDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_MONTHS_MONTHDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MONTH_DISPLAYColumn {
                get {
                    return this.columnMONTH_DISPLAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MONTH_VALUEColumn {
                get {
                    return this.columnMONTH_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MONTHS_MONTHRow this[int index] {
                get {
                    return ((WWV_FLOW_MONTHS_MONTHRow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_MONTHS_MONTHRowChangeEventHandler WWV_FLOW_MONTHS_MONTHRowChanging;
            
            public event WWV_FLOW_MONTHS_MONTHRowChangeEventHandler WWV_FLOW_MONTHS_MONTHRowChanged;
            
            public event WWV_FLOW_MONTHS_MONTHRowChangeEventHandler WWV_FLOW_MONTHS_MONTHRowDeleting;
            
            public event WWV_FLOW_MONTHS_MONTHRowChangeEventHandler WWV_FLOW_MONTHS_MONTHRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_MONTHS_MONTHRow(WWV_FLOW_MONTHS_MONTHRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MONTHS_MONTHRow AddWWV_FLOW_MONTHS_MONTHRow(string MONTH_DISPLAY, decimal MONTH_VALUE) {
                WWV_FLOW_MONTHS_MONTHRow rowWWV_FLOW_MONTHS_MONTHRow = ((WWV_FLOW_MONTHS_MONTHRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MONTH_DISPLAY,
                        MONTH_VALUE};
                rowWWV_FLOW_MONTHS_MONTHRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_MONTHS_MONTHRow);
                return rowWWV_FLOW_MONTHS_MONTHRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_MONTHS_MONTHDataTable cln = ((WWV_FLOW_MONTHS_MONTHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_MONTHS_MONTHDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMONTH_DISPLAY = base.Columns["MONTH_DISPLAY"];
                this.columnMONTH_VALUE = base.Columns["MONTH_VALUE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMONTH_DISPLAY = new global::System.Data.DataColumn("MONTH_DISPLAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMONTH_DISPLAY);
                this.columnMONTH_VALUE = new global::System.Data.DataColumn("MONTH_VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMONTH_VALUE);
                this.columnMONTH_DISPLAY.MaxLength = 32;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MONTHS_MONTHRow NewWWV_FLOW_MONTHS_MONTHRow() {
                return ((WWV_FLOW_MONTHS_MONTHRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_MONTHS_MONTHRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_MONTHS_MONTHRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_MONTHS_MONTHRowChanged != null)) {
                    this.WWV_FLOW_MONTHS_MONTHRowChanged(this, new WWV_FLOW_MONTHS_MONTHRowChangeEvent(((WWV_FLOW_MONTHS_MONTHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_MONTHS_MONTHRowChanging != null)) {
                    this.WWV_FLOW_MONTHS_MONTHRowChanging(this, new WWV_FLOW_MONTHS_MONTHRowChangeEvent(((WWV_FLOW_MONTHS_MONTHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_MONTHS_MONTHRowDeleted != null)) {
                    this.WWV_FLOW_MONTHS_MONTHRowDeleted(this, new WWV_FLOW_MONTHS_MONTHRowChangeEvent(((WWV_FLOW_MONTHS_MONTHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_MONTHS_MONTHRowDeleting != null)) {
                    this.WWV_FLOW_MONTHS_MONTHRowDeleting(this, new WWV_FLOW_MONTHS_MONTHRowChangeEvent(((WWV_FLOW_MONTHS_MONTHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_MONTHS_MONTHRow(WWV_FLOW_MONTHS_MONTHRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_MONTHS_MONTHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_PLSQL_JOBSDataTable : global::System.Data.TypedTableBase<WWV_FLOW_PLSQL_JOBSRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnJOB;
            
            private global::System.Data.DataColumn columnFLOW_ID;
            
            private global::System.Data.DataColumn columnOWNER;
            
            private global::System.Data.DataColumn columnENDUSER;
            
            private global::System.Data.DataColumn columnCREATED;
            
            private global::System.Data.DataColumn columnMODIFIED;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnSYSTEM_STATUS;
            
            private global::System.Data.DataColumn columnSYSTEM_MODIFIED;
            
            private global::System.Data.DataColumn columnSECURITY_GROUP_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_PLSQL_JOBSDataTable() {
                this.TableName = "WWV_FLOW_PLSQL_JOBS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_PLSQL_JOBSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_PLSQL_JOBSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JOBColumn {
                get {
                    return this.columnJOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLOW_IDColumn {
                get {
                    return this.columnFLOW_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OWNERColumn {
                get {
                    return this.columnOWNER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENDUSERColumn {
                get {
                    return this.columnENDUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATEDColumn {
                get {
                    return this.columnCREATED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODIFIEDColumn {
                get {
                    return this.columnMODIFIED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SYSTEM_STATUSColumn {
                get {
                    return this.columnSYSTEM_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SYSTEM_MODIFIEDColumn {
                get {
                    return this.columnSYSTEM_MODIFIED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SECURITY_GROUP_IDColumn {
                get {
                    return this.columnSECURITY_GROUP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_PLSQL_JOBSRow this[int index] {
                get {
                    return ((WWV_FLOW_PLSQL_JOBSRow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_PLSQL_JOBSRowChangeEventHandler WWV_FLOW_PLSQL_JOBSRowChanging;
            
            public event WWV_FLOW_PLSQL_JOBSRowChangeEventHandler WWV_FLOW_PLSQL_JOBSRowChanged;
            
            public event WWV_FLOW_PLSQL_JOBSRowChangeEventHandler WWV_FLOW_PLSQL_JOBSRowDeleting;
            
            public event WWV_FLOW_PLSQL_JOBSRowChangeEventHandler WWV_FLOW_PLSQL_JOBSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_PLSQL_JOBSRow(WWV_FLOW_PLSQL_JOBSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_PLSQL_JOBSRow AddWWV_FLOW_PLSQL_JOBSRow(decimal ID, decimal JOB, decimal FLOW_ID, string OWNER, string ENDUSER, System.DateTime CREATED, System.DateTime MODIFIED, string STATUS, string SYSTEM_STATUS, System.DateTime SYSTEM_MODIFIED, decimal SECURITY_GROUP_ID) {
                WWV_FLOW_PLSQL_JOBSRow rowWWV_FLOW_PLSQL_JOBSRow = ((WWV_FLOW_PLSQL_JOBSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        JOB,
                        FLOW_ID,
                        OWNER,
                        ENDUSER,
                        CREATED,
                        MODIFIED,
                        STATUS,
                        SYSTEM_STATUS,
                        SYSTEM_MODIFIED,
                        SECURITY_GROUP_ID};
                rowWWV_FLOW_PLSQL_JOBSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_PLSQL_JOBSRow);
                return rowWWV_FLOW_PLSQL_JOBSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_PLSQL_JOBSDataTable cln = ((WWV_FLOW_PLSQL_JOBSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_PLSQL_JOBSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnJOB = base.Columns["JOB"];
                this.columnFLOW_ID = base.Columns["FLOW_ID"];
                this.columnOWNER = base.Columns["OWNER"];
                this.columnENDUSER = base.Columns["ENDUSER"];
                this.columnCREATED = base.Columns["CREATED"];
                this.columnMODIFIED = base.Columns["MODIFIED"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnSYSTEM_STATUS = base.Columns["SYSTEM_STATUS"];
                this.columnSYSTEM_MODIFIED = base.Columns["SYSTEM_MODIFIED"];
                this.columnSECURITY_GROUP_ID = base.Columns["SECURITY_GROUP_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnJOB = new global::System.Data.DataColumn("JOB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB);
                this.columnFLOW_ID = new global::System.Data.DataColumn("FLOW_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOW_ID);
                this.columnOWNER = new global::System.Data.DataColumn("OWNER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOWNER);
                this.columnENDUSER = new global::System.Data.DataColumn("ENDUSER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENDUSER);
                this.columnCREATED = new global::System.Data.DataColumn("CREATED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATED);
                this.columnMODIFIED = new global::System.Data.DataColumn("MODIFIED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnSYSTEM_STATUS = new global::System.Data.DataColumn("SYSTEM_STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYSTEM_STATUS);
                this.columnSYSTEM_MODIFIED = new global::System.Data.DataColumn("SYSTEM_MODIFIED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYSTEM_MODIFIED);
                this.columnSECURITY_GROUP_ID = new global::System.Data.DataColumn("SECURITY_GROUP_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECURITY_GROUP_ID);
                this.columnJOB.AllowDBNull = false;
                this.columnOWNER.MaxLength = 30;
                this.columnENDUSER.MaxLength = 255;
                this.columnSTATUS.MaxLength = 100;
                this.columnSYSTEM_STATUS.MaxLength = 4000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_PLSQL_JOBSRow NewWWV_FLOW_PLSQL_JOBSRow() {
                return ((WWV_FLOW_PLSQL_JOBSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_PLSQL_JOBSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_PLSQL_JOBSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_PLSQL_JOBSRowChanged != null)) {
                    this.WWV_FLOW_PLSQL_JOBSRowChanged(this, new WWV_FLOW_PLSQL_JOBSRowChangeEvent(((WWV_FLOW_PLSQL_JOBSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_PLSQL_JOBSRowChanging != null)) {
                    this.WWV_FLOW_PLSQL_JOBSRowChanging(this, new WWV_FLOW_PLSQL_JOBSRowChangeEvent(((WWV_FLOW_PLSQL_JOBSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_PLSQL_JOBSRowDeleted != null)) {
                    this.WWV_FLOW_PLSQL_JOBSRowDeleted(this, new WWV_FLOW_PLSQL_JOBSRowChangeEvent(((WWV_FLOW_PLSQL_JOBSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_PLSQL_JOBSRowDeleting != null)) {
                    this.WWV_FLOW_PLSQL_JOBSRowDeleting(this, new WWV_FLOW_PLSQL_JOBSRowChangeEvent(((WWV_FLOW_PLSQL_JOBSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_PLSQL_JOBSRow(WWV_FLOW_PLSQL_JOBSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_PLSQL_JOBSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_USER_ACTIVITY_LOGDataTable : global::System.Data.TypedTableBase<WWV_FLOW_USER_ACTIVITY_LOGRow> {
            
            private global::System.Data.DataColumn columnTIME_STAMP;
            
            private global::System.Data.DataColumn columnCOMPONENT_TYPE;
            
            private global::System.Data.DataColumn columnCOMPONENT_NAME;
            
            private global::System.Data.DataColumn columnCOMPONENT_ATTRIBUTE;
            
            private global::System.Data.DataColumn columnINFORMATION;
            
            private global::System.Data.DataColumn columnELAP;
            
            private global::System.Data.DataColumn columnNUM_ROWS;
            
            private global::System.Data.DataColumn columnUSERID;
            
            private global::System.Data.DataColumn columnIP_ADDRESS;
            
            private global::System.Data.DataColumn columnUSER_AGENT;
            
            private global::System.Data.DataColumn columnFLOW_ID;
            
            private global::System.Data.DataColumn columnSTEP_ID;
            
            private global::System.Data.DataColumn columnSESSION_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_ACTIVITY_LOGDataTable() {
                this.TableName = "WWV_FLOW_USER_ACTIVITY_LOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_USER_ACTIVITY_LOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_USER_ACTIVITY_LOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIME_STAMPColumn {
                get {
                    return this.columnTIME_STAMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPONENT_TYPEColumn {
                get {
                    return this.columnCOMPONENT_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPONENT_NAMEColumn {
                get {
                    return this.columnCOMPONENT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPONENT_ATTRIBUTEColumn {
                get {
                    return this.columnCOMPONENT_ATTRIBUTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INFORMATIONColumn {
                get {
                    return this.columnINFORMATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELAPColumn {
                get {
                    return this.columnELAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUM_ROWSColumn {
                get {
                    return this.columnNUM_ROWS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USERIDColumn {
                get {
                    return this.columnUSERID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IP_ADDRESSColumn {
                get {
                    return this.columnIP_ADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USER_AGENTColumn {
                get {
                    return this.columnUSER_AGENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLOW_IDColumn {
                get {
                    return this.columnFLOW_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STEP_IDColumn {
                get {
                    return this.columnSTEP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SESSION_IDColumn {
                get {
                    return this.columnSESSION_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_ACTIVITY_LOGRow this[int index] {
                get {
                    return ((WWV_FLOW_USER_ACTIVITY_LOGRow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_USER_ACTIVITY_LOGRowChangeEventHandler WWV_FLOW_USER_ACTIVITY_LOGRowChanging;
            
            public event WWV_FLOW_USER_ACTIVITY_LOGRowChangeEventHandler WWV_FLOW_USER_ACTIVITY_LOGRowChanged;
            
            public event WWV_FLOW_USER_ACTIVITY_LOGRowChangeEventHandler WWV_FLOW_USER_ACTIVITY_LOGRowDeleting;
            
            public event WWV_FLOW_USER_ACTIVITY_LOGRowChangeEventHandler WWV_FLOW_USER_ACTIVITY_LOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_USER_ACTIVITY_LOGRow(WWV_FLOW_USER_ACTIVITY_LOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_ACTIVITY_LOGRow AddWWV_FLOW_USER_ACTIVITY_LOGRow(System.DateTime TIME_STAMP, string COMPONENT_TYPE, string COMPONENT_NAME, string COMPONENT_ATTRIBUTE, string INFORMATION, decimal ELAP, decimal NUM_ROWS, string USERID, string IP_ADDRESS, string USER_AGENT, decimal FLOW_ID, decimal STEP_ID, decimal SESSION_ID) {
                WWV_FLOW_USER_ACTIVITY_LOGRow rowWWV_FLOW_USER_ACTIVITY_LOGRow = ((WWV_FLOW_USER_ACTIVITY_LOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TIME_STAMP,
                        COMPONENT_TYPE,
                        COMPONENT_NAME,
                        COMPONENT_ATTRIBUTE,
                        INFORMATION,
                        ELAP,
                        NUM_ROWS,
                        USERID,
                        IP_ADDRESS,
                        USER_AGENT,
                        FLOW_ID,
                        STEP_ID,
                        SESSION_ID};
                rowWWV_FLOW_USER_ACTIVITY_LOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_USER_ACTIVITY_LOGRow);
                return rowWWV_FLOW_USER_ACTIVITY_LOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_USER_ACTIVITY_LOGDataTable cln = ((WWV_FLOW_USER_ACTIVITY_LOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_USER_ACTIVITY_LOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTIME_STAMP = base.Columns["TIME_STAMP"];
                this.columnCOMPONENT_TYPE = base.Columns["COMPONENT_TYPE"];
                this.columnCOMPONENT_NAME = base.Columns["COMPONENT_NAME"];
                this.columnCOMPONENT_ATTRIBUTE = base.Columns["COMPONENT_ATTRIBUTE"];
                this.columnINFORMATION = base.Columns["INFORMATION"];
                this.columnELAP = base.Columns["ELAP"];
                this.columnNUM_ROWS = base.Columns["NUM_ROWS"];
                this.columnUSERID = base.Columns["USERID"];
                this.columnIP_ADDRESS = base.Columns["IP_ADDRESS"];
                this.columnUSER_AGENT = base.Columns["USER_AGENT"];
                this.columnFLOW_ID = base.Columns["FLOW_ID"];
                this.columnSTEP_ID = base.Columns["STEP_ID"];
                this.columnSESSION_ID = base.Columns["SESSION_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTIME_STAMP = new global::System.Data.DataColumn("TIME_STAMP", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME_STAMP);
                this.columnCOMPONENT_TYPE = new global::System.Data.DataColumn("COMPONENT_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPONENT_TYPE);
                this.columnCOMPONENT_NAME = new global::System.Data.DataColumn("COMPONENT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPONENT_NAME);
                this.columnCOMPONENT_ATTRIBUTE = new global::System.Data.DataColumn("COMPONENT_ATTRIBUTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPONENT_ATTRIBUTE);
                this.columnINFORMATION = new global::System.Data.DataColumn("INFORMATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINFORMATION);
                this.columnELAP = new global::System.Data.DataColumn("ELAP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELAP);
                this.columnNUM_ROWS = new global::System.Data.DataColumn("NUM_ROWS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_ROWS);
                this.columnUSERID = new global::System.Data.DataColumn("USERID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERID);
                this.columnIP_ADDRESS = new global::System.Data.DataColumn("IP_ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_ADDRESS);
                this.columnUSER_AGENT = new global::System.Data.DataColumn("USER_AGENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_AGENT);
                this.columnFLOW_ID = new global::System.Data.DataColumn("FLOW_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOW_ID);
                this.columnSTEP_ID = new global::System.Data.DataColumn("STEP_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTEP_ID);
                this.columnSESSION_ID = new global::System.Data.DataColumn("SESSION_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSESSION_ID);
                this.columnCOMPONENT_TYPE.MaxLength = 255;
                this.columnCOMPONENT_NAME.MaxLength = 255;
                this.columnCOMPONENT_ATTRIBUTE.MaxLength = 4000;
                this.columnINFORMATION.MaxLength = 4000;
                this.columnUSERID.MaxLength = 255;
                this.columnIP_ADDRESS.MaxLength = 4000;
                this.columnUSER_AGENT.MaxLength = 4000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_ACTIVITY_LOGRow NewWWV_FLOW_USER_ACTIVITY_LOGRow() {
                return ((WWV_FLOW_USER_ACTIVITY_LOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_USER_ACTIVITY_LOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_USER_ACTIVITY_LOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_USER_ACTIVITY_LOGRowChanged != null)) {
                    this.WWV_FLOW_USER_ACTIVITY_LOGRowChanged(this, new WWV_FLOW_USER_ACTIVITY_LOGRowChangeEvent(((WWV_FLOW_USER_ACTIVITY_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_USER_ACTIVITY_LOGRowChanging != null)) {
                    this.WWV_FLOW_USER_ACTIVITY_LOGRowChanging(this, new WWV_FLOW_USER_ACTIVITY_LOGRowChangeEvent(((WWV_FLOW_USER_ACTIVITY_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_USER_ACTIVITY_LOGRowDeleted != null)) {
                    this.WWV_FLOW_USER_ACTIVITY_LOGRowDeleted(this, new WWV_FLOW_USER_ACTIVITY_LOGRowChangeEvent(((WWV_FLOW_USER_ACTIVITY_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_USER_ACTIVITY_LOGRowDeleting != null)) {
                    this.WWV_FLOW_USER_ACTIVITY_LOGRowDeleting(this, new WWV_FLOW_USER_ACTIVITY_LOGRowChangeEvent(((WWV_FLOW_USER_ACTIVITY_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_USER_ACTIVITY_LOGRow(WWV_FLOW_USER_ACTIVITY_LOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_USER_ACTIVITY_LOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_USER_MAIL_LOGDataTable : global::System.Data.TypedTableBase<WWV_FLOW_USER_MAIL_LOGRow> {
            
            private global::System.Data.DataColumn columnMAIL_TO;
            
            private global::System.Data.DataColumn columnMAIL_FROM;
            
            private global::System.Data.DataColumn columnMAIL_SUBJ;
            
            private global::System.Data.DataColumn columnMAIL_CC;
            
            private global::System.Data.DataColumn columnMAIL_BCC;
            
            private global::System.Data.DataColumn columnLAST_UPDATED_ON;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_MAIL_LOGDataTable() {
                this.TableName = "WWV_FLOW_USER_MAIL_LOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_USER_MAIL_LOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_USER_MAIL_LOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAIL_TOColumn {
                get {
                    return this.columnMAIL_TO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAIL_FROMColumn {
                get {
                    return this.columnMAIL_FROM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAIL_SUBJColumn {
                get {
                    return this.columnMAIL_SUBJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAIL_CCColumn {
                get {
                    return this.columnMAIL_CC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAIL_BCCColumn {
                get {
                    return this.columnMAIL_BCC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_UPDATED_ONColumn {
                get {
                    return this.columnLAST_UPDATED_ON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_MAIL_LOGRow this[int index] {
                get {
                    return ((WWV_FLOW_USER_MAIL_LOGRow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_USER_MAIL_LOGRowChangeEventHandler WWV_FLOW_USER_MAIL_LOGRowChanging;
            
            public event WWV_FLOW_USER_MAIL_LOGRowChangeEventHandler WWV_FLOW_USER_MAIL_LOGRowChanged;
            
            public event WWV_FLOW_USER_MAIL_LOGRowChangeEventHandler WWV_FLOW_USER_MAIL_LOGRowDeleting;
            
            public event WWV_FLOW_USER_MAIL_LOGRowChangeEventHandler WWV_FLOW_USER_MAIL_LOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_USER_MAIL_LOGRow(WWV_FLOW_USER_MAIL_LOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_MAIL_LOGRow AddWWV_FLOW_USER_MAIL_LOGRow(string MAIL_TO, string MAIL_FROM, string MAIL_SUBJ, string MAIL_CC, string MAIL_BCC, System.DateTime LAST_UPDATED_ON) {
                WWV_FLOW_USER_MAIL_LOGRow rowWWV_FLOW_USER_MAIL_LOGRow = ((WWV_FLOW_USER_MAIL_LOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MAIL_TO,
                        MAIL_FROM,
                        MAIL_SUBJ,
                        MAIL_CC,
                        MAIL_BCC,
                        LAST_UPDATED_ON};
                rowWWV_FLOW_USER_MAIL_LOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_USER_MAIL_LOGRow);
                return rowWWV_FLOW_USER_MAIL_LOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_USER_MAIL_LOGDataTable cln = ((WWV_FLOW_USER_MAIL_LOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_USER_MAIL_LOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMAIL_TO = base.Columns["MAIL_TO"];
                this.columnMAIL_FROM = base.Columns["MAIL_FROM"];
                this.columnMAIL_SUBJ = base.Columns["MAIL_SUBJ"];
                this.columnMAIL_CC = base.Columns["MAIL_CC"];
                this.columnMAIL_BCC = base.Columns["MAIL_BCC"];
                this.columnLAST_UPDATED_ON = base.Columns["LAST_UPDATED_ON"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMAIL_TO = new global::System.Data.DataColumn("MAIL_TO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_TO);
                this.columnMAIL_FROM = new global::System.Data.DataColumn("MAIL_FROM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_FROM);
                this.columnMAIL_SUBJ = new global::System.Data.DataColumn("MAIL_SUBJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_SUBJ);
                this.columnMAIL_CC = new global::System.Data.DataColumn("MAIL_CC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_CC);
                this.columnMAIL_BCC = new global::System.Data.DataColumn("MAIL_BCC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_BCC);
                this.columnLAST_UPDATED_ON = new global::System.Data.DataColumn("LAST_UPDATED_ON", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_UPDATED_ON);
                this.columnMAIL_TO.MaxLength = 2000;
                this.columnMAIL_FROM.MaxLength = 2000;
                this.columnMAIL_SUBJ.MaxLength = 2000;
                this.columnMAIL_CC.MaxLength = 2000;
                this.columnMAIL_BCC.MaxLength = 2000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_MAIL_LOGRow NewWWV_FLOW_USER_MAIL_LOGRow() {
                return ((WWV_FLOW_USER_MAIL_LOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_USER_MAIL_LOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_USER_MAIL_LOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_USER_MAIL_LOGRowChanged != null)) {
                    this.WWV_FLOW_USER_MAIL_LOGRowChanged(this, new WWV_FLOW_USER_MAIL_LOGRowChangeEvent(((WWV_FLOW_USER_MAIL_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_USER_MAIL_LOGRowChanging != null)) {
                    this.WWV_FLOW_USER_MAIL_LOGRowChanging(this, new WWV_FLOW_USER_MAIL_LOGRowChangeEvent(((WWV_FLOW_USER_MAIL_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_USER_MAIL_LOGRowDeleted != null)) {
                    this.WWV_FLOW_USER_MAIL_LOGRowDeleted(this, new WWV_FLOW_USER_MAIL_LOGRowChangeEvent(((WWV_FLOW_USER_MAIL_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_USER_MAIL_LOGRowDeleting != null)) {
                    this.WWV_FLOW_USER_MAIL_LOGRowDeleting(this, new WWV_FLOW_USER_MAIL_LOGRowChangeEvent(((WWV_FLOW_USER_MAIL_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_USER_MAIL_LOGRow(WWV_FLOW_USER_MAIL_LOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_USER_MAIL_LOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_USER_MAIL_QUEUEDataTable : global::System.Data.TypedTableBase<WWV_FLOW_USER_MAIL_QUEUERow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMAIL_TO;
            
            private global::System.Data.DataColumn columnMAIL_FROM;
            
            private global::System.Data.DataColumn columnMAIL_SUBJ;
            
            private global::System.Data.DataColumn columnMAIL_CC;
            
            private global::System.Data.DataColumn columnMAIL_BCC;
            
            private global::System.Data.DataColumn columnMAIL_BODY;
            
            private global::System.Data.DataColumn columnMAIL_BODY_HTML;
            
            private global::System.Data.DataColumn columnLAST_UPDATED_BY;
            
            private global::System.Data.DataColumn columnLAST_UPDATED_ON;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_MAIL_QUEUEDataTable() {
                this.TableName = "WWV_FLOW_USER_MAIL_QUEUE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_USER_MAIL_QUEUEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_USER_MAIL_QUEUEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAIL_TOColumn {
                get {
                    return this.columnMAIL_TO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAIL_FROMColumn {
                get {
                    return this.columnMAIL_FROM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAIL_SUBJColumn {
                get {
                    return this.columnMAIL_SUBJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAIL_CCColumn {
                get {
                    return this.columnMAIL_CC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAIL_BCCColumn {
                get {
                    return this.columnMAIL_BCC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAIL_BODYColumn {
                get {
                    return this.columnMAIL_BODY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAIL_BODY_HTMLColumn {
                get {
                    return this.columnMAIL_BODY_HTML;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_UPDATED_BYColumn {
                get {
                    return this.columnLAST_UPDATED_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_UPDATED_ONColumn {
                get {
                    return this.columnLAST_UPDATED_ON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_MAIL_QUEUERow this[int index] {
                get {
                    return ((WWV_FLOW_USER_MAIL_QUEUERow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_USER_MAIL_QUEUERowChangeEventHandler WWV_FLOW_USER_MAIL_QUEUERowChanging;
            
            public event WWV_FLOW_USER_MAIL_QUEUERowChangeEventHandler WWV_FLOW_USER_MAIL_QUEUERowChanged;
            
            public event WWV_FLOW_USER_MAIL_QUEUERowChangeEventHandler WWV_FLOW_USER_MAIL_QUEUERowDeleting;
            
            public event WWV_FLOW_USER_MAIL_QUEUERowChangeEventHandler WWV_FLOW_USER_MAIL_QUEUERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_USER_MAIL_QUEUERow(WWV_FLOW_USER_MAIL_QUEUERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_MAIL_QUEUERow AddWWV_FLOW_USER_MAIL_QUEUERow(decimal ID, string MAIL_TO, string MAIL_FROM, string MAIL_SUBJ, string MAIL_CC, string MAIL_BCC, string MAIL_BODY, string MAIL_BODY_HTML, string LAST_UPDATED_BY, System.DateTime LAST_UPDATED_ON) {
                WWV_FLOW_USER_MAIL_QUEUERow rowWWV_FLOW_USER_MAIL_QUEUERow = ((WWV_FLOW_USER_MAIL_QUEUERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        MAIL_TO,
                        MAIL_FROM,
                        MAIL_SUBJ,
                        MAIL_CC,
                        MAIL_BCC,
                        MAIL_BODY,
                        MAIL_BODY_HTML,
                        LAST_UPDATED_BY,
                        LAST_UPDATED_ON};
                rowWWV_FLOW_USER_MAIL_QUEUERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_USER_MAIL_QUEUERow);
                return rowWWV_FLOW_USER_MAIL_QUEUERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_USER_MAIL_QUEUEDataTable cln = ((WWV_FLOW_USER_MAIL_QUEUEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_USER_MAIL_QUEUEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMAIL_TO = base.Columns["MAIL_TO"];
                this.columnMAIL_FROM = base.Columns["MAIL_FROM"];
                this.columnMAIL_SUBJ = base.Columns["MAIL_SUBJ"];
                this.columnMAIL_CC = base.Columns["MAIL_CC"];
                this.columnMAIL_BCC = base.Columns["MAIL_BCC"];
                this.columnMAIL_BODY = base.Columns["MAIL_BODY"];
                this.columnMAIL_BODY_HTML = base.Columns["MAIL_BODY_HTML"];
                this.columnLAST_UPDATED_BY = base.Columns["LAST_UPDATED_BY"];
                this.columnLAST_UPDATED_ON = base.Columns["LAST_UPDATED_ON"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMAIL_TO = new global::System.Data.DataColumn("MAIL_TO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_TO);
                this.columnMAIL_FROM = new global::System.Data.DataColumn("MAIL_FROM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_FROM);
                this.columnMAIL_SUBJ = new global::System.Data.DataColumn("MAIL_SUBJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_SUBJ);
                this.columnMAIL_CC = new global::System.Data.DataColumn("MAIL_CC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_CC);
                this.columnMAIL_BCC = new global::System.Data.DataColumn("MAIL_BCC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_BCC);
                this.columnMAIL_BODY = new global::System.Data.DataColumn("MAIL_BODY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_BODY);
                this.columnMAIL_BODY_HTML = new global::System.Data.DataColumn("MAIL_BODY_HTML", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_BODY_HTML);
                this.columnLAST_UPDATED_BY = new global::System.Data.DataColumn("LAST_UPDATED_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_UPDATED_BY);
                this.columnLAST_UPDATED_ON = new global::System.Data.DataColumn("LAST_UPDATED_ON", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_UPDATED_ON);
                this.columnID.AllowDBNull = false;
                this.columnMAIL_TO.MaxLength = 2000;
                this.columnMAIL_FROM.MaxLength = 2000;
                this.columnMAIL_SUBJ.MaxLength = 2000;
                this.columnMAIL_CC.MaxLength = 2000;
                this.columnMAIL_BCC.MaxLength = 2000;
                this.columnMAIL_BODY.MaxLength = 2147483647;
                this.columnMAIL_BODY_HTML.MaxLength = 2147483647;
                this.columnLAST_UPDATED_BY.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_MAIL_QUEUERow NewWWV_FLOW_USER_MAIL_QUEUERow() {
                return ((WWV_FLOW_USER_MAIL_QUEUERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_USER_MAIL_QUEUERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_USER_MAIL_QUEUERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_USER_MAIL_QUEUERowChanged != null)) {
                    this.WWV_FLOW_USER_MAIL_QUEUERowChanged(this, new WWV_FLOW_USER_MAIL_QUEUERowChangeEvent(((WWV_FLOW_USER_MAIL_QUEUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_USER_MAIL_QUEUERowChanging != null)) {
                    this.WWV_FLOW_USER_MAIL_QUEUERowChanging(this, new WWV_FLOW_USER_MAIL_QUEUERowChangeEvent(((WWV_FLOW_USER_MAIL_QUEUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_USER_MAIL_QUEUERowDeleted != null)) {
                    this.WWV_FLOW_USER_MAIL_QUEUERowDeleted(this, new WWV_FLOW_USER_MAIL_QUEUERowChangeEvent(((WWV_FLOW_USER_MAIL_QUEUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_USER_MAIL_QUEUERowDeleting != null)) {
                    this.WWV_FLOW_USER_MAIL_QUEUERowDeleting(this, new WWV_FLOW_USER_MAIL_QUEUERowChangeEvent(((WWV_FLOW_USER_MAIL_QUEUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_USER_MAIL_QUEUERow(WWV_FLOW_USER_MAIL_QUEUERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_USER_MAIL_QUEUEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_USERSDataTable : global::System.Data.TypedTableBase<WWV_FLOW_USERSRow> {
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            private global::System.Data.DataColumn columnUSER_NAME;
            
            private global::System.Data.DataColumn columnFIRST_NAME;
            
            private global::System.Data.DataColumn columnLAST_NAME;
            
            private global::System.Data.DataColumn columnKNOWN_AS;
            
            private global::System.Data.DataColumn columnLAST_UPDATE_DATE;
            
            private global::System.Data.DataColumn columnLAST_UPDATED_BY;
            
            private global::System.Data.DataColumn columnCREATION_DATE;
            
            private global::System.Data.DataColumn columnCREATED_BY;
            
            private global::System.Data.DataColumn columnSTART_DATE;
            
            private global::System.Data.DataColumn columnEND_DATE;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnPASSWORD_DATE;
            
            private global::System.Data.DataColumn columnPASSWORD_ACCESSES_LEFT;
            
            private global::System.Data.DataColumn columnPASSWORD_LIFESPAN_ACCESSES;
            
            private global::System.Data.DataColumn columnPASSWORD_LIFESPAN_DAYS;
            
            private global::System.Data.DataColumn columnEMPLOYEE_ID;
            
            private global::System.Data.DataColumn columnPERSON_TYPE;
            
            private global::System.Data.DataColumn columnEMAIL_ADDRESS;
            
            private global::System.Data.DataColumn columnPERSON_ID;
            
            private global::System.Data.DataColumn columnSECURITY_GROUP_ID;
            
            private global::System.Data.DataColumn columnWEB_PASSWORD;
            
            private global::System.Data.DataColumn columnWEB_PASSWORD_RAW;
            
            private global::System.Data.DataColumn columnDEFAULT_SCHEMA;
            
            private global::System.Data.DataColumn columnALLOW_ACCESS_TO_SCHEMAS;
            
            private global::System.Data.DataColumn columnATTRIBUTE_01;
            
            private global::System.Data.DataColumn columnATTRIBUTE_02;
            
            private global::System.Data.DataColumn columnATTRIBUTE_03;
            
            private global::System.Data.DataColumn columnATTRIBUTE_04;
            
            private global::System.Data.DataColumn columnATTRIBUTE_05;
            
            private global::System.Data.DataColumn columnATTRIBUTE_06;
            
            private global::System.Data.DataColumn columnATTRIBUTE_07;
            
            private global::System.Data.DataColumn columnATTRIBUTE_08;
            
            private global::System.Data.DataColumn columnATTRIBUTE_09;
            
            private global::System.Data.DataColumn columnATTRIBUTE_10;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USERSDataTable() {
                this.TableName = "WWV_FLOW_USERS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_USERSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_USERSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USER_NAMEColumn {
                get {
                    return this.columnUSER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIRST_NAMEColumn {
                get {
                    return this.columnFIRST_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_NAMEColumn {
                get {
                    return this.columnLAST_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KNOWN_ASColumn {
                get {
                    return this.columnKNOWN_AS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_UPDATE_DATEColumn {
                get {
                    return this.columnLAST_UPDATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_UPDATED_BYColumn {
                get {
                    return this.columnLAST_UPDATED_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATION_DATEColumn {
                get {
                    return this.columnCREATION_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATED_BYColumn {
                get {
                    return this.columnCREATED_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn START_DATEColumn {
                get {
                    return this.columnSTART_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn END_DATEColumn {
                get {
                    return this.columnEND_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PASSWORD_DATEColumn {
                get {
                    return this.columnPASSWORD_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PASSWORD_ACCESSES_LEFTColumn {
                get {
                    return this.columnPASSWORD_ACCESSES_LEFT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PASSWORD_LIFESPAN_ACCESSESColumn {
                get {
                    return this.columnPASSWORD_LIFESPAN_ACCESSES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PASSWORD_LIFESPAN_DAYSColumn {
                get {
                    return this.columnPASSWORD_LIFESPAN_DAYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMPLOYEE_IDColumn {
                get {
                    return this.columnEMPLOYEE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PERSON_TYPEColumn {
                get {
                    return this.columnPERSON_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAIL_ADDRESSColumn {
                get {
                    return this.columnEMAIL_ADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PERSON_IDColumn {
                get {
                    return this.columnPERSON_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SECURITY_GROUP_IDColumn {
                get {
                    return this.columnSECURITY_GROUP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WEB_PASSWORDColumn {
                get {
                    return this.columnWEB_PASSWORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WEB_PASSWORD_RAWColumn {
                get {
                    return this.columnWEB_PASSWORD_RAW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEFAULT_SCHEMAColumn {
                get {
                    return this.columnDEFAULT_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ALLOW_ACCESS_TO_SCHEMASColumn {
                get {
                    return this.columnALLOW_ACCESS_TO_SCHEMAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTRIBUTE_01Column {
                get {
                    return this.columnATTRIBUTE_01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTRIBUTE_02Column {
                get {
                    return this.columnATTRIBUTE_02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTRIBUTE_03Column {
                get {
                    return this.columnATTRIBUTE_03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTRIBUTE_04Column {
                get {
                    return this.columnATTRIBUTE_04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTRIBUTE_05Column {
                get {
                    return this.columnATTRIBUTE_05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTRIBUTE_06Column {
                get {
                    return this.columnATTRIBUTE_06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTRIBUTE_07Column {
                get {
                    return this.columnATTRIBUTE_07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTRIBUTE_08Column {
                get {
                    return this.columnATTRIBUTE_08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTRIBUTE_09Column {
                get {
                    return this.columnATTRIBUTE_09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTRIBUTE_10Column {
                get {
                    return this.columnATTRIBUTE_10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USERSRow this[int index] {
                get {
                    return ((WWV_FLOW_USERSRow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_USERSRowChangeEventHandler WWV_FLOW_USERSRowChanging;
            
            public event WWV_FLOW_USERSRowChangeEventHandler WWV_FLOW_USERSRowChanged;
            
            public event WWV_FLOW_USERSRowChangeEventHandler WWV_FLOW_USERSRowDeleting;
            
            public event WWV_FLOW_USERSRowChangeEventHandler WWV_FLOW_USERSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_USERSRow(WWV_FLOW_USERSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USERSRow AddWWV_FLOW_USERSRow(
                        decimal USER_ID, 
                        string USER_NAME, 
                        string FIRST_NAME, 
                        string LAST_NAME, 
                        string KNOWN_AS, 
                        System.DateTime LAST_UPDATE_DATE, 
                        string LAST_UPDATED_BY, 
                        System.DateTime CREATION_DATE, 
                        string CREATED_BY, 
                        System.DateTime START_DATE, 
                        System.DateTime END_DATE, 
                        string DESCRIPTION, 
                        System.DateTime PASSWORD_DATE, 
                        decimal PASSWORD_ACCESSES_LEFT, 
                        decimal PASSWORD_LIFESPAN_ACCESSES, 
                        decimal PASSWORD_LIFESPAN_DAYS, 
                        decimal EMPLOYEE_ID, 
                        string PERSON_TYPE, 
                        string EMAIL_ADDRESS, 
                        decimal PERSON_ID, 
                        decimal SECURITY_GROUP_ID, 
                        string WEB_PASSWORD, 
                        byte[] WEB_PASSWORD_RAW, 
                        string DEFAULT_SCHEMA, 
                        string ALLOW_ACCESS_TO_SCHEMAS, 
                        string ATTRIBUTE_01, 
                        string ATTRIBUTE_02, 
                        string ATTRIBUTE_03, 
                        string ATTRIBUTE_04, 
                        string ATTRIBUTE_05, 
                        string ATTRIBUTE_06, 
                        string ATTRIBUTE_07, 
                        string ATTRIBUTE_08, 
                        string ATTRIBUTE_09, 
                        string ATTRIBUTE_10) {
                WWV_FLOW_USERSRow rowWWV_FLOW_USERSRow = ((WWV_FLOW_USERSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        USER_ID,
                        USER_NAME,
                        FIRST_NAME,
                        LAST_NAME,
                        KNOWN_AS,
                        LAST_UPDATE_DATE,
                        LAST_UPDATED_BY,
                        CREATION_DATE,
                        CREATED_BY,
                        START_DATE,
                        END_DATE,
                        DESCRIPTION,
                        PASSWORD_DATE,
                        PASSWORD_ACCESSES_LEFT,
                        PASSWORD_LIFESPAN_ACCESSES,
                        PASSWORD_LIFESPAN_DAYS,
                        EMPLOYEE_ID,
                        PERSON_TYPE,
                        EMAIL_ADDRESS,
                        PERSON_ID,
                        SECURITY_GROUP_ID,
                        WEB_PASSWORD,
                        WEB_PASSWORD_RAW,
                        DEFAULT_SCHEMA,
                        ALLOW_ACCESS_TO_SCHEMAS,
                        ATTRIBUTE_01,
                        ATTRIBUTE_02,
                        ATTRIBUTE_03,
                        ATTRIBUTE_04,
                        ATTRIBUTE_05,
                        ATTRIBUTE_06,
                        ATTRIBUTE_07,
                        ATTRIBUTE_08,
                        ATTRIBUTE_09,
                        ATTRIBUTE_10};
                rowWWV_FLOW_USERSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_USERSRow);
                return rowWWV_FLOW_USERSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_USERSDataTable cln = ((WWV_FLOW_USERSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_USERSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUSER_ID = base.Columns["USER_ID"];
                this.columnUSER_NAME = base.Columns["USER_NAME"];
                this.columnFIRST_NAME = base.Columns["FIRST_NAME"];
                this.columnLAST_NAME = base.Columns["LAST_NAME"];
                this.columnKNOWN_AS = base.Columns["KNOWN_AS"];
                this.columnLAST_UPDATE_DATE = base.Columns["LAST_UPDATE_DATE"];
                this.columnLAST_UPDATED_BY = base.Columns["LAST_UPDATED_BY"];
                this.columnCREATION_DATE = base.Columns["CREATION_DATE"];
                this.columnCREATED_BY = base.Columns["CREATED_BY"];
                this.columnSTART_DATE = base.Columns["START_DATE"];
                this.columnEND_DATE = base.Columns["END_DATE"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnPASSWORD_DATE = base.Columns["PASSWORD_DATE"];
                this.columnPASSWORD_ACCESSES_LEFT = base.Columns["PASSWORD_ACCESSES_LEFT"];
                this.columnPASSWORD_LIFESPAN_ACCESSES = base.Columns["PASSWORD_LIFESPAN_ACCESSES"];
                this.columnPASSWORD_LIFESPAN_DAYS = base.Columns["PASSWORD_LIFESPAN_DAYS"];
                this.columnEMPLOYEE_ID = base.Columns["EMPLOYEE_ID"];
                this.columnPERSON_TYPE = base.Columns["PERSON_TYPE"];
                this.columnEMAIL_ADDRESS = base.Columns["EMAIL_ADDRESS"];
                this.columnPERSON_ID = base.Columns["PERSON_ID"];
                this.columnSECURITY_GROUP_ID = base.Columns["SECURITY_GROUP_ID"];
                this.columnWEB_PASSWORD = base.Columns["WEB_PASSWORD"];
                this.columnWEB_PASSWORD_RAW = base.Columns["WEB_PASSWORD_RAW"];
                this.columnDEFAULT_SCHEMA = base.Columns["DEFAULT_SCHEMA"];
                this.columnALLOW_ACCESS_TO_SCHEMAS = base.Columns["ALLOW_ACCESS_TO_SCHEMAS"];
                this.columnATTRIBUTE_01 = base.Columns["ATTRIBUTE_01"];
                this.columnATTRIBUTE_02 = base.Columns["ATTRIBUTE_02"];
                this.columnATTRIBUTE_03 = base.Columns["ATTRIBUTE_03"];
                this.columnATTRIBUTE_04 = base.Columns["ATTRIBUTE_04"];
                this.columnATTRIBUTE_05 = base.Columns["ATTRIBUTE_05"];
                this.columnATTRIBUTE_06 = base.Columns["ATTRIBUTE_06"];
                this.columnATTRIBUTE_07 = base.Columns["ATTRIBUTE_07"];
                this.columnATTRIBUTE_08 = base.Columns["ATTRIBUTE_08"];
                this.columnATTRIBUTE_09 = base.Columns["ATTRIBUTE_09"];
                this.columnATTRIBUTE_10 = base.Columns["ATTRIBUTE_10"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.columnUSER_NAME = new global::System.Data.DataColumn("USER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_NAME);
                this.columnFIRST_NAME = new global::System.Data.DataColumn("FIRST_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIRST_NAME);
                this.columnLAST_NAME = new global::System.Data.DataColumn("LAST_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_NAME);
                this.columnKNOWN_AS = new global::System.Data.DataColumn("KNOWN_AS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKNOWN_AS);
                this.columnLAST_UPDATE_DATE = new global::System.Data.DataColumn("LAST_UPDATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_UPDATE_DATE);
                this.columnLAST_UPDATED_BY = new global::System.Data.DataColumn("LAST_UPDATED_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_UPDATED_BY);
                this.columnCREATION_DATE = new global::System.Data.DataColumn("CREATION_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATION_DATE);
                this.columnCREATED_BY = new global::System.Data.DataColumn("CREATED_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATED_BY);
                this.columnSTART_DATE = new global::System.Data.DataColumn("START_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTART_DATE);
                this.columnEND_DATE = new global::System.Data.DataColumn("END_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEND_DATE);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnPASSWORD_DATE = new global::System.Data.DataColumn("PASSWORD_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASSWORD_DATE);
                this.columnPASSWORD_ACCESSES_LEFT = new global::System.Data.DataColumn("PASSWORD_ACCESSES_LEFT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASSWORD_ACCESSES_LEFT);
                this.columnPASSWORD_LIFESPAN_ACCESSES = new global::System.Data.DataColumn("PASSWORD_LIFESPAN_ACCESSES", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASSWORD_LIFESPAN_ACCESSES);
                this.columnPASSWORD_LIFESPAN_DAYS = new global::System.Data.DataColumn("PASSWORD_LIFESPAN_DAYS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASSWORD_LIFESPAN_DAYS);
                this.columnEMPLOYEE_ID = new global::System.Data.DataColumn("EMPLOYEE_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_ID);
                this.columnPERSON_TYPE = new global::System.Data.DataColumn("PERSON_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSON_TYPE);
                this.columnEMAIL_ADDRESS = new global::System.Data.DataColumn("EMAIL_ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL_ADDRESS);
                this.columnPERSON_ID = new global::System.Data.DataColumn("PERSON_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSON_ID);
                this.columnSECURITY_GROUP_ID = new global::System.Data.DataColumn("SECURITY_GROUP_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECURITY_GROUP_ID);
                this.columnWEB_PASSWORD = new global::System.Data.DataColumn("WEB_PASSWORD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEB_PASSWORD);
                this.columnWEB_PASSWORD_RAW = new global::System.Data.DataColumn("WEB_PASSWORD_RAW", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEB_PASSWORD_RAW);
                this.columnDEFAULT_SCHEMA = new global::System.Data.DataColumn("DEFAULT_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFAULT_SCHEMA);
                this.columnALLOW_ACCESS_TO_SCHEMAS = new global::System.Data.DataColumn("ALLOW_ACCESS_TO_SCHEMAS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALLOW_ACCESS_TO_SCHEMAS);
                this.columnATTRIBUTE_01 = new global::System.Data.DataColumn("ATTRIBUTE_01", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTRIBUTE_01);
                this.columnATTRIBUTE_02 = new global::System.Data.DataColumn("ATTRIBUTE_02", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTRIBUTE_02);
                this.columnATTRIBUTE_03 = new global::System.Data.DataColumn("ATTRIBUTE_03", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTRIBUTE_03);
                this.columnATTRIBUTE_04 = new global::System.Data.DataColumn("ATTRIBUTE_04", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTRIBUTE_04);
                this.columnATTRIBUTE_05 = new global::System.Data.DataColumn("ATTRIBUTE_05", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTRIBUTE_05);
                this.columnATTRIBUTE_06 = new global::System.Data.DataColumn("ATTRIBUTE_06", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTRIBUTE_06);
                this.columnATTRIBUTE_07 = new global::System.Data.DataColumn("ATTRIBUTE_07", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTRIBUTE_07);
                this.columnATTRIBUTE_08 = new global::System.Data.DataColumn("ATTRIBUTE_08", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTRIBUTE_08);
                this.columnATTRIBUTE_09 = new global::System.Data.DataColumn("ATTRIBUTE_09", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTRIBUTE_09);
                this.columnATTRIBUTE_10 = new global::System.Data.DataColumn("ATTRIBUTE_10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTRIBUTE_10);
                this.columnUSER_ID.AllowDBNull = false;
                this.columnUSER_NAME.AllowDBNull = false;
                this.columnUSER_NAME.MaxLength = 100;
                this.columnFIRST_NAME.MaxLength = 255;
                this.columnLAST_NAME.MaxLength = 255;
                this.columnKNOWN_AS.MaxLength = 255;
                this.columnLAST_UPDATE_DATE.AllowDBNull = false;
                this.columnLAST_UPDATED_BY.MaxLength = 255;
                this.columnCREATION_DATE.AllowDBNull = false;
                this.columnCREATED_BY.MaxLength = 255;
                this.columnDESCRIPTION.MaxLength = 240;
                this.columnPERSON_TYPE.MaxLength = 1;
                this.columnEMAIL_ADDRESS.MaxLength = 240;
                this.columnSECURITY_GROUP_ID.AllowDBNull = false;
                this.columnWEB_PASSWORD.MaxLength = 255;
                this.columnDEFAULT_SCHEMA.MaxLength = 30;
                this.columnALLOW_ACCESS_TO_SCHEMAS.MaxLength = 4000;
                this.columnATTRIBUTE_01.MaxLength = 4000;
                this.columnATTRIBUTE_02.MaxLength = 4000;
                this.columnATTRIBUTE_03.MaxLength = 4000;
                this.columnATTRIBUTE_04.MaxLength = 4000;
                this.columnATTRIBUTE_05.MaxLength = 4000;
                this.columnATTRIBUTE_06.MaxLength = 4000;
                this.columnATTRIBUTE_07.MaxLength = 4000;
                this.columnATTRIBUTE_08.MaxLength = 4000;
                this.columnATTRIBUTE_09.MaxLength = 4000;
                this.columnATTRIBUTE_10.MaxLength = 4000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USERSRow NewWWV_FLOW_USERSRow() {
                return ((WWV_FLOW_USERSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_USERSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_USERSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_USERSRowChanged != null)) {
                    this.WWV_FLOW_USERSRowChanged(this, new WWV_FLOW_USERSRowChangeEvent(((WWV_FLOW_USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_USERSRowChanging != null)) {
                    this.WWV_FLOW_USERSRowChanging(this, new WWV_FLOW_USERSRowChangeEvent(((WWV_FLOW_USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_USERSRowDeleted != null)) {
                    this.WWV_FLOW_USERSRowDeleted(this, new WWV_FLOW_USERSRowChangeEvent(((WWV_FLOW_USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_USERSRowDeleting != null)) {
                    this.WWV_FLOW_USERSRowDeleting(this, new WWV_FLOW_USERSRowChangeEvent(((WWV_FLOW_USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_USERSRow(WWV_FLOW_USERSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_USERSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WWV_FLOW_YEARSDataTable : global::System.Data.TypedTableBase<WWV_FLOW_YEARSRow> {
            
            private global::System.Data.DataColumn columnYEAR_VALUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_YEARSDataTable() {
                this.TableName = "WWV_FLOW_YEARS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_YEARSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WWV_FLOW_YEARSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YEAR_VALUEColumn {
                get {
                    return this.columnYEAR_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_YEARSRow this[int index] {
                get {
                    return ((WWV_FLOW_YEARSRow)(this.Rows[index]));
                }
            }
            
            public event WWV_FLOW_YEARSRowChangeEventHandler WWV_FLOW_YEARSRowChanging;
            
            public event WWV_FLOW_YEARSRowChangeEventHandler WWV_FLOW_YEARSRowChanged;
            
            public event WWV_FLOW_YEARSRowChangeEventHandler WWV_FLOW_YEARSRowDeleting;
            
            public event WWV_FLOW_YEARSRowChangeEventHandler WWV_FLOW_YEARSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWWV_FLOW_YEARSRow(WWV_FLOW_YEARSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_YEARSRow AddWWV_FLOW_YEARSRow(decimal YEAR_VALUE) {
                WWV_FLOW_YEARSRow rowWWV_FLOW_YEARSRow = ((WWV_FLOW_YEARSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        YEAR_VALUE};
                rowWWV_FLOW_YEARSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWWV_FLOW_YEARSRow);
                return rowWWV_FLOW_YEARSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WWV_FLOW_YEARSDataTable cln = ((WWV_FLOW_YEARSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WWV_FLOW_YEARSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnYEAR_VALUE = base.Columns["YEAR_VALUE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnYEAR_VALUE = new global::System.Data.DataColumn("YEAR_VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYEAR_VALUE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_YEARSRow NewWWV_FLOW_YEARSRow() {
                return ((WWV_FLOW_YEARSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WWV_FLOW_YEARSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WWV_FLOW_YEARSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WWV_FLOW_YEARSRowChanged != null)) {
                    this.WWV_FLOW_YEARSRowChanged(this, new WWV_FLOW_YEARSRowChangeEvent(((WWV_FLOW_YEARSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WWV_FLOW_YEARSRowChanging != null)) {
                    this.WWV_FLOW_YEARSRowChanging(this, new WWV_FLOW_YEARSRowChangeEvent(((WWV_FLOW_YEARSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WWV_FLOW_YEARSRowDeleted != null)) {
                    this.WWV_FLOW_YEARSRowDeleted(this, new WWV_FLOW_YEARSRowChangeEvent(((WWV_FLOW_YEARSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WWV_FLOW_YEARSRowDeleting != null)) {
                    this.WWV_FLOW_YEARSRowDeleting(this, new WWV_FLOW_YEARSRowChangeEvent(((WWV_FLOW_YEARSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWWV_FLOW_YEARSRow(WWV_FLOW_YEARSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WWV_FLOW_YEARSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PASSWORDDataTable : global::System.Data.TypedTableBase<PASSWORDRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnUSER_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PASSWORDDataTable() {
                this.TableName = "PASSWORD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PASSWORDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PASSWORDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USER_NAMEColumn {
                get {
                    return this.columnUSER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PASSWORDRow this[int index] {
                get {
                    return ((PASSWORDRow)(this.Rows[index]));
                }
            }
            
            public event PASSWORDRowChangeEventHandler PASSWORDRowChanging;
            
            public event PASSWORDRowChangeEventHandler PASSWORDRowChanged;
            
            public event PASSWORDRowChangeEventHandler PASSWORDRowDeleting;
            
            public event PASSWORDRowChangeEventHandler PASSWORDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPASSWORDRow(PASSWORDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PASSWORDRow AddPASSWORDRow(string ID, string USER_NAME) {
                PASSWORDRow rowPASSWORDRow = ((PASSWORDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        USER_NAME};
                rowPASSWORDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPASSWORDRow);
                return rowPASSWORDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PASSWORDRow FindByID(string ID) {
                return ((PASSWORDRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PASSWORDDataTable cln = ((PASSWORDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PASSWORDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnUSER_NAME = base.Columns["USER_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnUSER_NAME = new global::System.Data.DataColumn("USER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_NAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnID.MaxLength = 200;
                this.columnUSER_NAME.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PASSWORDRow NewPASSWORDRow() {
                return ((PASSWORDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PASSWORDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PASSWORDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PASSWORDRowChanged != null)) {
                    this.PASSWORDRowChanged(this, new PASSWORDRowChangeEvent(((PASSWORDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PASSWORDRowChanging != null)) {
                    this.PASSWORDRowChanging(this, new PASSWORDRowChangeEvent(((PASSWORDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PASSWORDRowDeleted != null)) {
                    this.PASSWORDRowDeleted(this, new PASSWORDRowChangeEvent(((PASSWORDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PASSWORDRowDeleting != null)) {
                    this.PASSWORDRowDeleting(this, new PASSWORDRowChangeEvent(((PASSWORDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePASSWORDRow(PASSWORDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PASSWORDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CHAMBERRow : global::System.Data.DataRow {
            
            private CHAMBERDataTable tableCHAMBER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHAMBERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHAMBER = ((CHAMBERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Номер_палаты {
                get {
                    return ((decimal)(this[this.tableCHAMBER.Номер_палатыColumn]));
                }
                set {
                    this[this.tableCHAMBER.Номер_палатыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ОТДЕЛЕНИЕ {
                get {
                    try {
                        return ((decimal)(this[this.tableCHAMBER.ОТДЕЛЕНИЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОТДЕЛЕНИЕ\' в таблице \'CHAMBER\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHAMBER.ОТДЕЛЕНИЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Количество_коек {
                get {
                    try {
                        return ((decimal)(this[this.tableCHAMBER.Количество_коекColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Количество коек\' в таблице \'CHAMBER\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHAMBER.Количество_коекColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Свободно_коек {
                get {
                    try {
                        return ((decimal)(this[this.tableCHAMBER.Свободно_коекColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Свободно коек\' в таблице \'CHAMBER\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHAMBER.Свободно_коекColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsОТДЕЛЕНИЕNull() {
                return this.IsNull(this.tableCHAMBER.ОТДЕЛЕНИЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetОТДЕЛЕНИЕNull() {
                this[this.tableCHAMBER.ОТДЕЛЕНИЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsКоличество_коекNull() {
                return this.IsNull(this.tableCHAMBER.Количество_коекColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetКоличество_коекNull() {
                this[this.tableCHAMBER.Количество_коекColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsСвободно_коекNull() {
                return this.IsNull(this.tableCHAMBER.Свободно_коекColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetСвободно_коекNull() {
                this[this.tableCHAMBER.Свободно_коекColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DOCTORRow : global::System.Data.DataRow {
            
            private DOCTORDataTable tableDOCTOR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DOCTORRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDOCTOR = ((DOCTORDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tableDOCTOR.IDColumn]));
                }
                set {
                    this[this.tableDOCTOR.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SURNAME {
                get {
                    try {
                        return ((string)(this[this.tableDOCTOR.SURNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SURNAME\' в таблице \'DOCTOR\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDOCTOR.SURNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableDOCTOR.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NAME\' в таблице \'DOCTOR\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDOCTOR.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OTCHESTVO {
                get {
                    try {
                        return ((string)(this[this.tableDOCTOR.OTCHESTVOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OTCHESTVO\' в таблице \'DOCTOR\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDOCTOR.OTCHESTVOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SPECIALTY_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableDOCTOR.SPECIALTY_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SPECIALTY_ID\' в таблице \'DOCTOR\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDOCTOR.SPECIALTY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UNIT_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableDOCTOR.UNIT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'UNIT_ID\' в таблице \'DOCTOR\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDOCTOR.UNIT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POST_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableDOCTOR.POST_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'POST_ID\' в таблице \'DOCTOR\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDOCTOR.POST_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITRow UNITRow {
                get {
                    return ((UNITRow)(this.GetParentRow(this.Table.ParentRelations["A"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["A"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POSTRow POSTRow {
                get {
                    return ((POSTRow)(this.GetParentRow(this.Table.ParentRelations["B"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["B"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIALITYRow SPECIALITYRow {
                get {
                    return ((SPECIALITYRow)(this.GetParentRow(this.Table.ParentRelations["DOCTOR_R01"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["DOCTOR_R01"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSURNAMENull() {
                return this.IsNull(this.tableDOCTOR.SURNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSURNAMENull() {
                this[this.tableDOCTOR.SURNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tableDOCTOR.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tableDOCTOR.NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOTCHESTVONull() {
                return this.IsNull(this.tableDOCTOR.OTCHESTVOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOTCHESTVONull() {
                this[this.tableDOCTOR.OTCHESTVOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPECIALTY_IDNull() {
                return this.IsNull(this.tableDOCTOR.SPECIALTY_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPECIALTY_IDNull() {
                this[this.tableDOCTOR.SPECIALTY_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNIT_IDNull() {
                return this.IsNull(this.tableDOCTOR.UNIT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNIT_IDNull() {
                this[this.tableDOCTOR.UNIT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOST_IDNull() {
                return this.IsNull(this.tableDOCTOR.POST_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOST_IDNull() {
                this[this.tableDOCTOR.POST_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRIEMRow[] GetPRIEMRows() {
                if ((this.Table.ChildRelations["PRIEM_R011"] == null)) {
                    return new PRIEMRow[0];
                }
                else {
                    return ((PRIEMRow[])(base.GetChildRows(this.Table.ChildRelations["PRIEM_R011"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITRow[] GetUNITRows() {
                if ((this.Table.ChildRelations["UNIT_R012"] == null)) {
                    return new UNITRow[0];
                }
                else {
                    return ((UNITRow[])(base.GetChildRows(this.Table.ChildRelations["UNIT_R012"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MEDICAL_HISTIRYRow : global::System.Data.DataRow {
            
            private MEDICAL_HISTIRYDataTable tableMEDICAL_HISTIRY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MEDICAL_HISTIRYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMEDICAL_HISTIRY = ((MEDICAL_HISTIRYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRIEM_ID {
                get {
                    return ((decimal)(this[this.tableMEDICAL_HISTIRY.PRIEM_IDColumn]));
                }
                set {
                    this[this.tableMEDICAL_HISTIRY.PRIEM_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATE_VIPISKI {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMEDICAL_HISTIRY.DATE_VIPISKIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DATE_VIPISKI\' в таблице \'MEDICAL_HISTIRY\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEDICAL_HISTIRY.DATE_VIPISKIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LECH_DOCTOR_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableMEDICAL_HISTIRY.LECH_DOCTOR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LECH_DOCTOR_ID\' в таблице \'MEDICAL_HISTIRY\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEDICAL_HISTIRY.LECH_DOCTOR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPLAINS {
                get {
                    try {
                        return ((string)(this[this.tableMEDICAL_HISTIRY.COMPLAINSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'COMPLAINS\' в таблице \'MEDICAL_HISTIRY\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEDICAL_HISTIRY.COMPLAINSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OSMOTR {
                get {
                    try {
                        return ((string)(this[this.tableMEDICAL_HISTIRY.OSMOTRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OSMOTR\' в таблице \'MEDICAL_HISTIRY\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEDICAL_HISTIRY.OSMOTRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIAGNISIS {
                get {
                    try {
                        return ((string)(this[this.tableMEDICAL_HISTIRY.DIAGNISISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DIAGNISIS\' в таблице \'MEDICAL_HISTIRY\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEDICAL_HISTIRY.DIAGNISISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEDICATION {
                get {
                    try {
                        return ((string)(this[this.tableMEDICAL_HISTIRY.MEDICATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MEDICATION\' в таблице \'MEDICAL_HISTIRY\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEDICAL_HISTIRY.MEDICATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRIEMRow PRIEMRow {
                get {
                    return ((PRIEMRow)(this.GetParentRow(this.Table.ParentRelations["ASS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ASS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATE_VIPISKINull() {
                return this.IsNull(this.tableMEDICAL_HISTIRY.DATE_VIPISKIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATE_VIPISKINull() {
                this[this.tableMEDICAL_HISTIRY.DATE_VIPISKIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLECH_DOCTOR_IDNull() {
                return this.IsNull(this.tableMEDICAL_HISTIRY.LECH_DOCTOR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLECH_DOCTOR_IDNull() {
                this[this.tableMEDICAL_HISTIRY.LECH_DOCTOR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPLAINSNull() {
                return this.IsNull(this.tableMEDICAL_HISTIRY.COMPLAINSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPLAINSNull() {
                this[this.tableMEDICAL_HISTIRY.COMPLAINSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSMOTRNull() {
                return this.IsNull(this.tableMEDICAL_HISTIRY.OSMOTRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSMOTRNull() {
                this[this.tableMEDICAL_HISTIRY.OSMOTRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIAGNISISNull() {
                return this.IsNull(this.tableMEDICAL_HISTIRY.DIAGNISISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIAGNISISNull() {
                this[this.tableMEDICAL_HISTIRY.DIAGNISISColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEDICATIONNull() {
                return this.IsNull(this.tableMEDICAL_HISTIRY.MEDICATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEDICATIONNull() {
                this[this.tableMEDICAL_HISTIRY.MEDICATIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PACIENTRow : global::System.Data.DataRow {
            
            private PACIENTDataTable tablePACIENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PACIENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePACIENT = ((PACIENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ФАМИЛИЯ {
                get {
                    try {
                        return ((string)(this[this.tablePACIENT.ФАМИЛИЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ФАМИЛИЯ\' в таблице \'PACIENT\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tablePACIENT.ФАМИЛИЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ИМЯ {
                get {
                    try {
                        return ((string)(this[this.tablePACIENT.ИМЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ИМЯ\' в таблице \'PACIENT\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tablePACIENT.ИМЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ОТЧЕСТВО {
                get {
                    try {
                        return ((string)(this[this.tablePACIENT.ОТЧЕСТВОColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОТЧЕСТВО\' в таблице \'PACIENT\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tablePACIENT.ОТЧЕСТВОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Номер_карты {
                get {
                    return ((decimal)(this[this.tablePACIENT.Номер_картыColumn]));
                }
                set {
                    this[this.tablePACIENT.Номер_картыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Номер_полиса {
                get {
                    try {
                        return ((decimal)(this[this.tablePACIENT.Номер_полисаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Номер полиса\' в таблице \'PACIENT\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tablePACIENT.Номер_полисаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsФАМИЛИЯNull() {
                return this.IsNull(this.tablePACIENT.ФАМИЛИЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetФАМИЛИЯNull() {
                this[this.tablePACIENT.ФАМИЛИЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsИМЯNull() {
                return this.IsNull(this.tablePACIENT.ИМЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetИМЯNull() {
                this[this.tablePACIENT.ИМЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsОТЧЕСТВОNull() {
                return this.IsNull(this.tablePACIENT.ОТЧЕСТВОColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetОТЧЕСТВОNull() {
                this[this.tablePACIENT.ОТЧЕСТВОColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsНомер_полисаNull() {
                return this.IsNull(this.tablePACIENT.Номер_полисаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetНомер_полисаNull() {
                this[this.tablePACIENT.Номер_полисаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRIEMRow[] GetPRIEMRows() {
                if ((this.Table.ChildRelations["pcient_PRIEM"] == null)) {
                    return new PRIEMRow[0];
                }
                else {
                    return ((PRIEMRow[])(base.GetChildRows(this.Table.ChildRelations["pcient_PRIEM"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class POSTRow : global::System.Data.DataRow {
            
            private POSTDataTable tablePOST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POSTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePOST = ((POSTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tablePOST.IDColumn]));
                }
                set {
                    this[this.tablePOST.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tablePOST.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NAME\' в таблице \'POST\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOST.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tablePOST.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tablePOST.NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOCTORRow[] GetDOCTORRows() {
                if ((this.Table.ChildRelations["B"] == null)) {
                    return new DOCTORRow[0];
                }
                else {
                    return ((DOCTORRow[])(base.GetChildRows(this.Table.ChildRelations["B"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PRIEMRow : global::System.Data.DataRow {
            
            private PRIEMDataTable tablePRIEM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PRIEMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePRIEM = ((PRIEMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tablePRIEM.IDColumn]));
                }
                set {
                    this[this.tablePRIEM.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePRIEM.DATAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DATA\' в таблице \'PRIEM\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRIEM.DATAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PACIENT_ID {
                get {
                    try {
                        return ((decimal)(this[this.tablePRIEM.PACIENT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PACIENT_ID\' в таблице \'PRIEM\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRIEM.PACIENT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DOCTOR_ID {
                get {
                    try {
                        return ((decimal)(this[this.tablePRIEM.DOCTOR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DOCTOR_ID\' в таблице \'PRIEM\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRIEM.DOCTOR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOCTORRow DOCTORRow {
                get {
                    return ((DOCTORRow)(this.GetParentRow(this.Table.ParentRelations["PRIEM_R011"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PRIEM_R011"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACIENTRow PACIENTRow {
                get {
                    return ((PACIENTRow)(this.GetParentRow(this.Table.ParentRelations["pcient_PRIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["pcient_PRIEM"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATANull() {
                return this.IsNull(this.tablePRIEM.DATAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATANull() {
                this[this.tablePRIEM.DATAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACIENT_IDNull() {
                return this.IsNull(this.tablePRIEM.PACIENT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACIENT_IDNull() {
                this[this.tablePRIEM.PACIENT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOCTOR_IDNull() {
                return this.IsNull(this.tablePRIEM.DOCTOR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOCTOR_IDNull() {
                this[this.tablePRIEM.DOCTOR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEDICAL_HISTIRYRow[] GetMEDICAL_HISTIRYRows() {
                if ((this.Table.ChildRelations["ASS"] == null)) {
                    return new MEDICAL_HISTIRYRow[0];
                }
                else {
                    return ((MEDICAL_HISTIRYRow[])(base.GetChildRows(this.Table.ChildRelations["ASS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SPECIALITYRow : global::System.Data.DataRow {
            
            private SPECIALITYDataTable tableSPECIALITY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SPECIALITYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSPECIALITY = ((SPECIALITYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tableSPECIALITY.IDColumn]));
                }
                set {
                    this[this.tableSPECIALITY.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableSPECIALITY.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NAME\' в таблице \'SPECIALITY\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSPECIALITY.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tableSPECIALITY.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tableSPECIALITY.NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOCTORRow[] GetDOCTORRows() {
                if ((this.Table.ChildRelations["DOCTOR_R01"] == null)) {
                    return new DOCTORRow[0];
                }
                else {
                    return ((DOCTORRow[])(base.GetChildRows(this.Table.ChildRelations["DOCTOR_R01"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UNITRow : global::System.Data.DataRow {
            
            private UNITDataTable tableUNIT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UNITRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUNIT = ((UNITDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tableUNIT.IDColumn]));
                }
                set {
                    this[this.tableUNIT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableUNIT.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NAME\' в таблице \'UNIT\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableUNIT.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MANAGER_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableUNIT.MANAGER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MANAGER_ID\' в таблице \'UNIT\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableUNIT.MANAGER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOCTORRow DOCTORRow {
                get {
                    return ((DOCTORRow)(this.GetParentRow(this.Table.ParentRelations["UNIT_R012"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["UNIT_R012"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tableUNIT.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tableUNIT.NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMANAGER_IDNull() {
                return this.IsNull(this.tableUNIT.MANAGER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMANAGER_IDNull() {
                this[this.tableUNIT.MANAGER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOCTORRow[] GetDOCTORRows() {
                if ((this.Table.ChildRelations["A"] == null)) {
                    return new DOCTORRow[0];
                }
                else {
                    return ((DOCTORRow[])(base.GetChildRows(this.Table.ChildRelations["A"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_DUAL100Row : global::System.Data.DataRow {
            
            private WWV_FLOW_DUAL100DataTable tableWWV_FLOW_DUAL100;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_DUAL100Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_DUAL100 = ((WWV_FLOW_DUAL100DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal I {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_DUAL100.IColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'I\' в таблице \'WWV_FLOW_DUAL100\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_DUAL100.IColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINull() {
                return this.IsNull(this.tableWWV_FLOW_DUAL100.IColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINull() {
                this[this.tableWWV_FLOW_DUAL100.IColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_FIELD_TEMPLATESRow : global::System.Data.DataRow {
            
            private WWV_FLOW_FIELD_TEMPLATESDataTable tableWWV_FLOW_FIELD_TEMPLATES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_FIELD_TEMPLATESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_FIELD_TEMPLATES = ((WWV_FLOW_FIELD_TEMPLATESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_FIELD_TEMPLATES.IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_FIELD_TEMPLATES.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FLOW_ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_FIELD_TEMPLATES.FLOW_IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_FIELD_TEMPLATES.FLOW_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SECURITY_GROUP_ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_FIELD_TEMPLATES.SECURITY_GROUP_IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_FIELD_TEMPLATES.SECURITY_GROUP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal THEME_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_FIELD_TEMPLATES.THEME_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'THEME_ID\' в таблице \'WWV_FLOW_FIELD_TEMPLATES\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FIELD_TEMPLATES.THEME_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal THEME_CLASS_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_FIELD_TEMPLATES.THEME_CLASS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'THEME_CLASS_ID\' в таблице \'WWV_FLOW_FIELD_TEMPLATES\' равно " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FIELD_TEMPLATES.THEME_CLASS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEMPLATE_NAME {
                get {
                    return ((string)(this[this.tableWWV_FLOW_FIELD_TEMPLATES.TEMPLATE_NAMEColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_FIELD_TEMPLATES.TEMPLATE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEMPLATE_BODY1 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FIELD_TEMPLATES.TEMPLATE_BODY1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'TEMPLATE_BODY1\' в таблице \'WWV_FLOW_FIELD_TEMPLATES\' равно " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FIELD_TEMPLATES.TEMPLATE_BODY1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEMPLATE_BODY2 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FIELD_TEMPLATES.TEMPLATE_BODY2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'TEMPLATE_BODY2\' в таблице \'WWV_FLOW_FIELD_TEMPLATES\' равно " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FIELD_TEMPLATES.TEMPLATE_BODY2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REFERENCE_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_FIELD_TEMPLATES.REFERENCE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'REFERENCE_ID\' в таблице \'WWV_FLOW_FIELD_TEMPLATES\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FIELD_TEMPLATES.REFERENCE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ON_ERROR_BEFORE_LABEL {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FIELD_TEMPLATES.ON_ERROR_BEFORE_LABELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ON_ERROR_BEFORE_LABEL\' в таблице \'WWV_FLOW_FIELD_TEMPLATES\'" +
                                " равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FIELD_TEMPLATES.ON_ERROR_BEFORE_LABELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ON_ERROR_AFTER_LABEL {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FIELD_TEMPLATES.ON_ERROR_AFTER_LABELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ON_ERROR_AFTER_LABEL\' в таблице \'WWV_FLOW_FIELD_TEMPLATES\' " +
                                "равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FIELD_TEMPLATES.ON_ERROR_AFTER_LABELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LAST_UPDATED_ON {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_FIELD_TEMPLATES.LAST_UPDATED_ONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LAST_UPDATED_ON\' в таблице \'WWV_FLOW_FIELD_TEMPLATES\' равно" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FIELD_TEMPLATES.LAST_UPDATED_ONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAST_UPDATED_BY {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FIELD_TEMPLATES.LAST_UPDATED_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LAST_UPDATED_BY\' в таблице \'WWV_FLOW_FIELD_TEMPLATES\' равно" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FIELD_TEMPLATES.LAST_UPDATED_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANSLATE_THIS_TEMPLATE {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FIELD_TEMPLATES.TRANSLATE_THIS_TEMPLATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'TRANSLATE_THIS_TEMPLATE\' в таблице \'WWV_FLOW_FIELD_TEMPLATE" +
                                "S\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FIELD_TEMPLATES.TRANSLATE_THIS_TEMPLATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEMPLATE_COMMENT {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FIELD_TEMPLATES.TEMPLATE_COMMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'TEMPLATE_COMMENT\' в таблице \'WWV_FLOW_FIELD_TEMPLATES\' равн" +
                                "о DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FIELD_TEMPLATES.TEMPLATE_COMMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHEME_IDNull() {
                return this.IsNull(this.tableWWV_FLOW_FIELD_TEMPLATES.THEME_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHEME_IDNull() {
                this[this.tableWWV_FLOW_FIELD_TEMPLATES.THEME_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHEME_CLASS_IDNull() {
                return this.IsNull(this.tableWWV_FLOW_FIELD_TEMPLATES.THEME_CLASS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHEME_CLASS_IDNull() {
                this[this.tableWWV_FLOW_FIELD_TEMPLATES.THEME_CLASS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEMPLATE_BODY1Null() {
                return this.IsNull(this.tableWWV_FLOW_FIELD_TEMPLATES.TEMPLATE_BODY1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEMPLATE_BODY1Null() {
                this[this.tableWWV_FLOW_FIELD_TEMPLATES.TEMPLATE_BODY1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEMPLATE_BODY2Null() {
                return this.IsNull(this.tableWWV_FLOW_FIELD_TEMPLATES.TEMPLATE_BODY2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEMPLATE_BODY2Null() {
                this[this.tableWWV_FLOW_FIELD_TEMPLATES.TEMPLATE_BODY2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREFERENCE_IDNull() {
                return this.IsNull(this.tableWWV_FLOW_FIELD_TEMPLATES.REFERENCE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREFERENCE_IDNull() {
                this[this.tableWWV_FLOW_FIELD_TEMPLATES.REFERENCE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsON_ERROR_BEFORE_LABELNull() {
                return this.IsNull(this.tableWWV_FLOW_FIELD_TEMPLATES.ON_ERROR_BEFORE_LABELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetON_ERROR_BEFORE_LABELNull() {
                this[this.tableWWV_FLOW_FIELD_TEMPLATES.ON_ERROR_BEFORE_LABELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsON_ERROR_AFTER_LABELNull() {
                return this.IsNull(this.tableWWV_FLOW_FIELD_TEMPLATES.ON_ERROR_AFTER_LABELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetON_ERROR_AFTER_LABELNull() {
                this[this.tableWWV_FLOW_FIELD_TEMPLATES.ON_ERROR_AFTER_LABELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_UPDATED_ONNull() {
                return this.IsNull(this.tableWWV_FLOW_FIELD_TEMPLATES.LAST_UPDATED_ONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_UPDATED_ONNull() {
                this[this.tableWWV_FLOW_FIELD_TEMPLATES.LAST_UPDATED_ONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_UPDATED_BYNull() {
                return this.IsNull(this.tableWWV_FLOW_FIELD_TEMPLATES.LAST_UPDATED_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_UPDATED_BYNull() {
                this[this.tableWWV_FLOW_FIELD_TEMPLATES.LAST_UPDATED_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSLATE_THIS_TEMPLATENull() {
                return this.IsNull(this.tableWWV_FLOW_FIELD_TEMPLATES.TRANSLATE_THIS_TEMPLATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSLATE_THIS_TEMPLATENull() {
                this[this.tableWWV_FLOW_FIELD_TEMPLATES.TRANSLATE_THIS_TEMPLATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEMPLATE_COMMENTNull() {
                return this.IsNull(this.tableWWV_FLOW_FIELD_TEMPLATES.TEMPLATE_COMMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEMPLATE_COMMENTNull() {
                this[this.tableWWV_FLOW_FIELD_TEMPLATES.TEMPLATE_COMMENTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_LIST_OF_VALUES_DATARow : global::System.Data.DataRow {
            
            private WWV_FLOW_LIST_OF_VALUES_DATADataTable tableWWV_FLOW_LIST_OF_VALUES_DATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_LIST_OF_VALUES_DATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_LIST_OF_VALUES_DATA = ((WWV_FLOW_LIST_OF_VALUES_DATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LOV_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LOV_ID\' в таблице \'WWV_FLOW_LIST_OF_VALUES_DATA\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FLOW_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.FLOW_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FLOW_ID\' в таблице \'WWV_FLOW_LIST_OF_VALUES_DATA\' равно DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.FLOW_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LOV_DISP_SEQUENCE {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_SEQUENCEColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_SEQUENCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOV_DISP_VALUE {
                get {
                    return ((string)(this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_VALUEColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOV_RETURN_VALUE {
                get {
                    return ((string)(this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_RETURN_VALUEColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_RETURN_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOV_TEMPLATE {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_TEMPLATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LOV_TEMPLATE\' в таблице \'WWV_FLOW_LIST_OF_VALUES_DATA\' равн" +
                                "о DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_TEMPLATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOV_DISP_COND_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_COND_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LOV_DISP_COND_TYPE\' в таблице \'WWV_FLOW_LIST_OF_VALUES_DATA" +
                                "\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_COND_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOV_DISP_COND {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_CONDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LOV_DISP_COND\' в таблице \'WWV_FLOW_LIST_OF_VALUES_DATA\' рав" +
                                "но DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_CONDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOV_DISP_COND2 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_COND2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LOV_DISP_COND2\' в таблице \'WWV_FLOW_LIST_OF_VALUES_DATA\' ра" +
                                "вно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_COND2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REQUIRED_PATCH {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.REQUIRED_PATCHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'REQUIRED_PATCH\' в таблице \'WWV_FLOW_LIST_OF_VALUES_DATA\' ра" +
                                "вно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.REQUIRED_PATCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SECURITY_GROUP_ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.SECURITY_GROUP_IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.SECURITY_GROUP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAST_UPDATED_BY {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LAST_UPDATED_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LAST_UPDATED_BY\' в таблице \'WWV_FLOW_LIST_OF_VALUES_DATA\' р" +
                                "авно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LAST_UPDATED_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LAST_UPDATED_ON {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LAST_UPDATED_ONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LAST_UPDATED_ON\' в таблице \'WWV_FLOW_LIST_OF_VALUES_DATA\' р" +
                                "авно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LAST_UPDATED_ONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOV_DATA_COMMENT {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DATA_COMMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LOV_DATA_COMMENT\' в таблице \'WWV_FLOW_LIST_OF_VALUES_DATA\' " +
                                "равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DATA_COMMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _WWV_FLOW_LISTS_OF_VALUES_Row _WWV_FLOW_LISTS_OF_VALUES_Row {
                get {
                    return ((_WWV_FLOW_LISTS_OF_VALUES_Row)(this.GetParentRow(this.Table.ParentRelations["WWV_FLOW_LOV_DATA_FK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["WWV_FLOW_LOV_DATA_FK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOV_IDNull() {
                return this.IsNull(this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOV_IDNull() {
                this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLOW_IDNull() {
                return this.IsNull(this.tableWWV_FLOW_LIST_OF_VALUES_DATA.FLOW_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLOW_IDNull() {
                this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.FLOW_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOV_TEMPLATENull() {
                return this.IsNull(this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_TEMPLATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOV_TEMPLATENull() {
                this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_TEMPLATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOV_DISP_COND_TYPENull() {
                return this.IsNull(this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_COND_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOV_DISP_COND_TYPENull() {
                this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_COND_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOV_DISP_CONDNull() {
                return this.IsNull(this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_CONDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOV_DISP_CONDNull() {
                this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_CONDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOV_DISP_COND2Null() {
                return this.IsNull(this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_COND2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOV_DISP_COND2Null() {
                this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DISP_COND2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREQUIRED_PATCHNull() {
                return this.IsNull(this.tableWWV_FLOW_LIST_OF_VALUES_DATA.REQUIRED_PATCHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREQUIRED_PATCHNull() {
                this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.REQUIRED_PATCHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_UPDATED_BYNull() {
                return this.IsNull(this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LAST_UPDATED_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_UPDATED_BYNull() {
                this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LAST_UPDATED_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_UPDATED_ONNull() {
                return this.IsNull(this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LAST_UPDATED_ONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_UPDATED_ONNull() {
                this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LAST_UPDATED_ONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOV_DATA_COMMENTNull() {
                return this.IsNull(this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DATA_COMMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOV_DATA_COMMENTNull() {
                this[this.tableWWV_FLOW_LIST_OF_VALUES_DATA.LOV_DATA_COMMENTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _WWV_FLOW_LISTS_OF_VALUES_Row : global::System.Data.DataRow {
            
            private _WWV_FLOW_LISTS_OF_VALUES_DataTable _tableWWV_FLOW_LISTS_OF_VALUES_;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _WWV_FLOW_LISTS_OF_VALUES_Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this._tableWWV_FLOW_LISTS_OF_VALUES_ = ((_WWV_FLOW_LISTS_OF_VALUES_DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this._tableWWV_FLOW_LISTS_OF_VALUES_.IDColumn]));
                }
                set {
                    this[this._tableWWV_FLOW_LISTS_OF_VALUES_.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FLOW_ID {
                get {
                    return ((decimal)(this[this._tableWWV_FLOW_LISTS_OF_VALUES_.FLOW_IDColumn]));
                }
                set {
                    this[this._tableWWV_FLOW_LISTS_OF_VALUES_.FLOW_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOV_NAME {
                get {
                    return ((string)(this[this._tableWWV_FLOW_LISTS_OF_VALUES_.LOV_NAMEColumn]));
                }
                set {
                    this[this._tableWWV_FLOW_LISTS_OF_VALUES_.LOV_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOV_QUERY {
                get {
                    return ((string)(this[this._tableWWV_FLOW_LISTS_OF_VALUES_.LOV_QUERYColumn]));
                }
                set {
                    this[this._tableWWV_FLOW_LISTS_OF_VALUES_.LOV_QUERYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SECURITY_GROUP_ID {
                get {
                    return ((decimal)(this[this._tableWWV_FLOW_LISTS_OF_VALUES_.SECURITY_GROUP_IDColumn]));
                }
                set {
                    this[this._tableWWV_FLOW_LISTS_OF_VALUES_.SECURITY_GROUP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REFERENCE_ID {
                get {
                    try {
                        return ((decimal)(this[this._tableWWV_FLOW_LISTS_OF_VALUES_.REFERENCE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'REFERENCE_ID\' в таблице \'WWV_FLOW_LISTS_OF_VALUES$\' равно D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this._tableWWV_FLOW_LISTS_OF_VALUES_.REFERENCE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAST_UPDATED_BY {
                get {
                    try {
                        return ((string)(this[this._tableWWV_FLOW_LISTS_OF_VALUES_.LAST_UPDATED_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LAST_UPDATED_BY\' в таблице \'WWV_FLOW_LISTS_OF_VALUES$\' равн" +
                                "о DBNull.", e);
                    }
                }
                set {
                    this[this._tableWWV_FLOW_LISTS_OF_VALUES_.LAST_UPDATED_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LAST_UPDATED_ON {
                get {
                    try {
                        return ((global::System.DateTime)(this[this._tableWWV_FLOW_LISTS_OF_VALUES_.LAST_UPDATED_ONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LAST_UPDATED_ON\' в таблице \'WWV_FLOW_LISTS_OF_VALUES$\' равн" +
                                "о DBNull.", e);
                    }
                }
                set {
                    this[this._tableWWV_FLOW_LISTS_OF_VALUES_.LAST_UPDATED_ONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOV_COMMENT {
                get {
                    try {
                        return ((string)(this[this._tableWWV_FLOW_LISTS_OF_VALUES_.LOV_COMMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LOV_COMMENT\' в таблице \'WWV_FLOW_LISTS_OF_VALUES$\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this._tableWWV_FLOW_LISTS_OF_VALUES_.LOV_COMMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREFERENCE_IDNull() {
                return this.IsNull(this._tableWWV_FLOW_LISTS_OF_VALUES_.REFERENCE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREFERENCE_IDNull() {
                this[this._tableWWV_FLOW_LISTS_OF_VALUES_.REFERENCE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_UPDATED_BYNull() {
                return this.IsNull(this._tableWWV_FLOW_LISTS_OF_VALUES_.LAST_UPDATED_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_UPDATED_BYNull() {
                this[this._tableWWV_FLOW_LISTS_OF_VALUES_.LAST_UPDATED_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_UPDATED_ONNull() {
                return this.IsNull(this._tableWWV_FLOW_LISTS_OF_VALUES_.LAST_UPDATED_ONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_UPDATED_ONNull() {
                this[this._tableWWV_FLOW_LISTS_OF_VALUES_.LAST_UPDATED_ONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOV_COMMENTNull() {
                return this.IsNull(this._tableWWV_FLOW_LISTS_OF_VALUES_.LOV_COMMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOV_COMMENTNull() {
                this[this._tableWWV_FLOW_LISTS_OF_VALUES_.LOV_COMMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_LIST_OF_VALUES_DATARow[] GetWWV_FLOW_LIST_OF_VALUES_DATARows() {
                if ((this.Table.ChildRelations["WWV_FLOW_LOV_DATA_FK"] == null)) {
                    return new WWV_FLOW_LIST_OF_VALUES_DATARow[0];
                }
                else {
                    return ((WWV_FLOW_LIST_OF_VALUES_DATARow[])(base.GetChildRows(this.Table.ChildRelations["WWV_FLOW_LOV_DATA_FK"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_LOV_TEMPRow : global::System.Data.DataRow {
            
            private WWV_FLOW_LOV_TEMPDataTable tableWWV_FLOW_LOV_TEMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_LOV_TEMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_LOV_TEMP = ((WWV_FLOW_LOV_TEMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal INSERT_ORDER {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_LOV_TEMP.INSERT_ORDERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'INSERT_ORDER\' в таблице \'WWV_FLOW_LOV_TEMP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_LOV_TEMP.INSERT_ORDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DISP {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_LOV_TEMP.DISPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DISP\' в таблице \'WWV_FLOW_LOV_TEMP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_LOV_TEMP.DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VAL {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_LOV_TEMP.VALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'VAL\' в таблице \'WWV_FLOW_LOV_TEMP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_LOV_TEMP.VALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSERT_ORDERNull() {
                return this.IsNull(this.tableWWV_FLOW_LOV_TEMP.INSERT_ORDERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSERT_ORDERNull() {
                this[this.tableWWV_FLOW_LOV_TEMP.INSERT_ORDERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISPNull() {
                return this.IsNull(this.tableWWV_FLOW_LOV_TEMP.DISPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISPNull() {
                this[this.tableWWV_FLOW_LOV_TEMP.DISPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVALNull() {
                return this.IsNull(this.tableWWV_FLOW_LOV_TEMP.VALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVALNull() {
                this[this.tableWWV_FLOW_LOV_TEMP.VALColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_PATCHESRow : global::System.Data.DataRow {
            
            private WWV_FLOW_PATCHESDataTable tableWWV_FLOW_PATCHES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_PATCHESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_PATCHES = ((WWV_FLOW_PATCHESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_PATCHES.IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_PATCHES.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FLOW_ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_PATCHES.FLOW_IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_PATCHES.FLOW_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PATCH_NAME {
                get {
                    return ((string)(this[this.tableWWV_FLOW_PATCHES.PATCH_NAMEColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_PATCHES.PATCH_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PATCH_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_PATCHES.PATCH_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PATCH_STATUS\' в таблице \'WWV_FLOW_PATCHES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PATCHES.PATCH_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SECURITY_GROUP_ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_PATCHES.SECURITY_GROUP_IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_PATCHES.SECURITY_GROUP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEFAULT_ON_EXPORT {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_PATCHES.DEFAULT_ON_EXPORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DEFAULT_ON_EXPORT\' в таблице \'WWV_FLOW_PATCHES\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PATCHES.DEFAULT_ON_EXPORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTRIBUTE1 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_PATCHES.ATTRIBUTE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ATTRIBUTE1\' в таблице \'WWV_FLOW_PATCHES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PATCHES.ATTRIBUTE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTRIBUTE2 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_PATCHES.ATTRIBUTE2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ATTRIBUTE2\' в таблице \'WWV_FLOW_PATCHES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PATCHES.ATTRIBUTE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTRIBUTE3 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_PATCHES.ATTRIBUTE3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ATTRIBUTE3\' в таблице \'WWV_FLOW_PATCHES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PATCHES.ATTRIBUTE3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTRIBUTE4 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_PATCHES.ATTRIBUTE4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ATTRIBUTE4\' в таблице \'WWV_FLOW_PATCHES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PATCHES.ATTRIBUTE4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAST_UPDATED_BY {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_PATCHES.LAST_UPDATED_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LAST_UPDATED_BY\' в таблице \'WWV_FLOW_PATCHES\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PATCHES.LAST_UPDATED_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LAST_UPDATED_ON {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_PATCHES.LAST_UPDATED_ONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LAST_UPDATED_ON\' в таблице \'WWV_FLOW_PATCHES\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PATCHES.LAST_UPDATED_ONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PATCH_COMMENT {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_PATCHES.PATCH_COMMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PATCH_COMMENT\' в таблице \'WWV_FLOW_PATCHES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PATCHES.PATCH_COMMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPATCH_STATUSNull() {
                return this.IsNull(this.tableWWV_FLOW_PATCHES.PATCH_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPATCH_STATUSNull() {
                this[this.tableWWV_FLOW_PATCHES.PATCH_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEFAULT_ON_EXPORTNull() {
                return this.IsNull(this.tableWWV_FLOW_PATCHES.DEFAULT_ON_EXPORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEFAULT_ON_EXPORTNull() {
                this[this.tableWWV_FLOW_PATCHES.DEFAULT_ON_EXPORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTRIBUTE1Null() {
                return this.IsNull(this.tableWWV_FLOW_PATCHES.ATTRIBUTE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTRIBUTE1Null() {
                this[this.tableWWV_FLOW_PATCHES.ATTRIBUTE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTRIBUTE2Null() {
                return this.IsNull(this.tableWWV_FLOW_PATCHES.ATTRIBUTE2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTRIBUTE2Null() {
                this[this.tableWWV_FLOW_PATCHES.ATTRIBUTE2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTRIBUTE3Null() {
                return this.IsNull(this.tableWWV_FLOW_PATCHES.ATTRIBUTE3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTRIBUTE3Null() {
                this[this.tableWWV_FLOW_PATCHES.ATTRIBUTE3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTRIBUTE4Null() {
                return this.IsNull(this.tableWWV_FLOW_PATCHES.ATTRIBUTE4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTRIBUTE4Null() {
                this[this.tableWWV_FLOW_PATCHES.ATTRIBUTE4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_UPDATED_BYNull() {
                return this.IsNull(this.tableWWV_FLOW_PATCHES.LAST_UPDATED_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_UPDATED_BYNull() {
                this[this.tableWWV_FLOW_PATCHES.LAST_UPDATED_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_UPDATED_ONNull() {
                return this.IsNull(this.tableWWV_FLOW_PATCHES.LAST_UPDATED_ONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_UPDATED_ONNull() {
                this[this.tableWWV_FLOW_PATCHES.LAST_UPDATED_ONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPATCH_COMMENTNull() {
                return this.IsNull(this.tableWWV_FLOW_PATCHES.PATCH_COMMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPATCH_COMMENTNull() {
                this[this.tableWWV_FLOW_PATCHES.PATCH_COMMENTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_TEMP_TABLERow : global::System.Data.DataRow {
            
            private WWV_FLOW_TEMP_TABLEDataTable tableWWV_FLOW_TEMP_TABLE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_TEMP_TABLERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_TEMP_TABLE = ((WWV_FLOW_TEMP_TABLEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal R {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_TEMP_TABLE.RColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'R\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.RColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C001 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C001Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C001\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C001Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C002 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C002Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C002\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C002Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C003 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C003Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C003\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C003Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C004 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C004Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C004\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C004Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C005 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C005Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C005\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C005Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C006 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C006Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C006\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C006Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C007 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C007Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C007\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C007Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C008 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C008Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C008\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C008Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C009 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C009Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C009\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C009Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C010 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C010Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C010\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C010Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C011 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C011Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C011\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C011Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C012 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C012Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C012\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C012Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C013 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C013Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C013\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C013Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C014 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C014Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C014\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C014Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C015 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C015Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C015\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C015Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C016 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C016Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C016\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C016Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C017 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C017Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C017\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C017Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C018 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C018Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C018\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C018Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C019 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C019Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C019\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C019Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C020 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C020Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C020\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C020Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C021 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C021Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C021\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C021Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C022 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C022Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C022\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C022Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C023 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C023Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C023\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C023Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C024 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C024Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C024\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C024Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C025 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C025Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C025\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C025Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C026 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C026Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C026\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C026Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C027 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C027Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C027\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C027Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C028 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C028Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C028\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C028Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C029 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C029Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C029\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C029Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C030 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C030Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C030\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C030Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C031 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C031Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C031\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C031Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C032 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C032Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C032\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C032Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C033 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C033Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C033\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C033Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C034 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C034Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C034\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C034Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C035 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C035Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C035\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C035Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C036 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C036Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C036\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C036Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C037 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C037Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C037\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C037Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C038 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C038Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C038\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C038Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C039 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C039Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C039\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C039Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C040 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C040Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C040\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C040Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C041 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C041Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C041\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C041Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C042 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C042Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C042\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C042Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C043 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C043Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C043\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C043Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C044 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C044Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C044\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C044Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C045 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C045Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C045\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C045Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C046 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C046Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C046\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C046Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C047 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C047Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C047\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C047Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C048 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C048Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C048\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C048Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C049 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C049Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C049\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C049Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C050 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C050Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C050\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C050Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C051 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C051Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C051\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C051Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C052 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C052Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C052\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C052Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C053 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C053Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C053\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C053Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C054 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C054Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C054\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C054Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C055 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C055Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C055\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C055Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C056 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C056Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C056\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C056Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C057 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C057Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C057\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C057Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C058 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C058Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C058\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C058Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C059 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C059Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C059\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C059Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C060 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C060Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C060\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C060Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C061 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C061Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C061\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C061Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C062 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C062Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C062\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C062Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C063 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C063Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C063\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C063Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C064 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C064Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C064\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C064Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C065 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_TEMP_TABLE.C065Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C065\' в таблице \'WWV_FLOW_TEMP_TABLE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_TEMP_TABLE.C065Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRNull() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.RColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRNull() {
                this[this.tableWWV_FLOW_TEMP_TABLE.RColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC001Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C001Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC001Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C001Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC002Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C002Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC002Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C002Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC003Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C003Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC003Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C003Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC004Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C004Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC004Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C004Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC005Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C005Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC005Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C005Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC006Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C006Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC006Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C006Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC007Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C007Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC007Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C007Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC008Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C008Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC008Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C008Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC009Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C009Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC009Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C009Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC010Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C010Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC010Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C010Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC011Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C011Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC011Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C011Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC012Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C012Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC012Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C012Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC013Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C013Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC013Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C013Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC014Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C014Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC014Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C014Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC015Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C015Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC015Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C015Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC016Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C016Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC016Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C016Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC017Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C017Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC017Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C017Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC018Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C018Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC018Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C018Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC019Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C019Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC019Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C019Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC020Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C020Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC020Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C020Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC021Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C021Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC021Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C021Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC022Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C022Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC022Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C022Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC023Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C023Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC023Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C023Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC024Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C024Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC024Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C024Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC025Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C025Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC025Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C025Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC026Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C026Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC026Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C026Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC027Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C027Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC027Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C027Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC028Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C028Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC028Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C028Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC029Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C029Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC029Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C029Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC030Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C030Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC030Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C030Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC031Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C031Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC031Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C031Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC032Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C032Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC032Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C032Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC033Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C033Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC033Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C033Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC034Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C034Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC034Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C034Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC035Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C035Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC035Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C035Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC036Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C036Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC036Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C036Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC037Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C037Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC037Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C037Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC038Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C038Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC038Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C038Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC039Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C039Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC039Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C039Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC040Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C040Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC040Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C040Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC041Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C041Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC041Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C041Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC042Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C042Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC042Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C042Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC043Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C043Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC043Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C043Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC044Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C044Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC044Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C044Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC045Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C045Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC045Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C045Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC046Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C046Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC046Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C046Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC047Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C047Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC047Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C047Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC048Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C048Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC048Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C048Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC049Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C049Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC049Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C049Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC050Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C050Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC050Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C050Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC051Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C051Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC051Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C051Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC052Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C052Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC052Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C052Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC053Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C053Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC053Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C053Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC054Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C054Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC054Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C054Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC055Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C055Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC055Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C055Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC056Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C056Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC056Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C056Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC057Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C057Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC057Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C057Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC058Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C058Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC058Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C058Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC059Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C059Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC059Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C059Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC060Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C060Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC060Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C060Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC061Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C061Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC061Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C061Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC062Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C062Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC062Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C062Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC063Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C063Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC063Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C063Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC064Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C064Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC064Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C064Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC065Null() {
                return this.IsNull(this.tableWWV_FLOW_TEMP_TABLE.C065Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC065Null() {
                this[this.tableWWV_FLOW_TEMP_TABLE.C065Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_CLICKTHRU_LOGRow : global::System.Data.DataRow {
            
            private WWV_FLOW_CLICKTHRU_LOGDataTable tableWWV_FLOW_CLICKTHRU_LOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_CLICKTHRU_LOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_CLICKTHRU_LOG = ((WWV_FLOW_CLICKTHRU_LOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CLICKDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_CLICKTHRU_LOG.CLICKDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CLICKDATE\' в таблице \'WWV_FLOW_CLICKTHRU_LOG\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_CLICKTHRU_LOG.CLICKDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CATEGORY {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_CLICKTHRU_LOG.CATEGORYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CATEGORY\' в таблице \'WWV_FLOW_CLICKTHRU_LOG\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_CLICKTHRU_LOG.CATEGORYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_CLICKTHRU_LOG.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID\' в таблице \'WWV_FLOW_CLICKTHRU_LOG\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_CLICKTHRU_LOG.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLOW_USER {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_CLICKTHRU_LOG.FLOW_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FLOW_USER\' в таблице \'WWV_FLOW_CLICKTHRU_LOG\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_CLICKTHRU_LOG.FLOW_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IP {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_CLICKTHRU_LOG.IPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'IP\' в таблице \'WWV_FLOW_CLICKTHRU_LOG\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_CLICKTHRU_LOG.IPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLICKDATENull() {
                return this.IsNull(this.tableWWV_FLOW_CLICKTHRU_LOG.CLICKDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLICKDATENull() {
                this[this.tableWWV_FLOW_CLICKTHRU_LOG.CLICKDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCATEGORYNull() {
                return this.IsNull(this.tableWWV_FLOW_CLICKTHRU_LOG.CATEGORYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCATEGORYNull() {
                this[this.tableWWV_FLOW_CLICKTHRU_LOG.CATEGORYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableWWV_FLOW_CLICKTHRU_LOG.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableWWV_FLOW_CLICKTHRU_LOG.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLOW_USERNull() {
                return this.IsNull(this.tableWWV_FLOW_CLICKTHRU_LOG.FLOW_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLOW_USERNull() {
                this[this.tableWWV_FLOW_CLICKTHRU_LOG.FLOW_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIPNull() {
                return this.IsNull(this.tableWWV_FLOW_CLICKTHRU_LOG.IPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIPNull() {
                this[this.tableWWV_FLOW_CLICKTHRU_LOG.IPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_COLLECTIONSRow : global::System.Data.DataRow {
            
            private WWV_FLOW_COLLECTIONSDataTable tableWWV_FLOW_COLLECTIONS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_COLLECTIONSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_COLLECTIONS = ((WWV_FLOW_COLLECTIONSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COLLECTION_NAME {
                get {
                    return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.COLLECTION_NAMEColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.COLLECTION_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SEQ_ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_COLLECTIONS.SEQ_IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.SEQ_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C001 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C001Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C001\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C001Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C002 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C002Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C002\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C002Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C003 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C003Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C003\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C003Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C004 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C004Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C004\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C004Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C005 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C005Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C005\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C005Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C006 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C006Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C006\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C006Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C007 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C007Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C007\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C007Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C008 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C008Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C008\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C008Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C009 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C009Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C009\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C009Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C010 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C010Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C010\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C010Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C011 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C011Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C011\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C011Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C012 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C012Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C012\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C012Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C013 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C013Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C013\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C013Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C014 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C014Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C014\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C014Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C015 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C015Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C015\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C015Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C016 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C016Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C016\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C016Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C017 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C017Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C017\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C017Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C018 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C018Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C018\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C018Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C019 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C019Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C019\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C019Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C020 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C020Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C020\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C020Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C021 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C021Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C021\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C021Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C022 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C022Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C022\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C022Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C023 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C023Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C023\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C023Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C024 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C024Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C024\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C024Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C025 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C025Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C025\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C025Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C026 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C026Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C026\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C026Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C027 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C027Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C027\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C027Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C028 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C028Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C028\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C028Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C029 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C029Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C029\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C029Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C030 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C030Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C030\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C030Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C031 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C031Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C031\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C031Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C032 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C032Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C032\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C032Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C033 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C033Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C033\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C033Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C034 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C034Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C034\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C034Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C035 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C035Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C035\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C035Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C036 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C036Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C036\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C036Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C037 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C037Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C037\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C037Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C038 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C038Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C038\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C038Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C039 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C039Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C039\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C039Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C040 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C040Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C040\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C040Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C041 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C041Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C041\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C041Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C042 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C042Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C042\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C042Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C043 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C043Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C043\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C043Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C044 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C044Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C044\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C044Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C045 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C045Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C045\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C045Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C046 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C046Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C046\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C046Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C047 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C047Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C047\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C047Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C048 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C048Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C048\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C048Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C049 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C049Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C049\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C049Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C050 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.C050Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'C050\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.C050Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CLOB001 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.CLOB001Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CLOB001\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.CLOB001Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MD5_ORIGINAL {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_COLLECTIONS.MD5_ORIGINALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MD5_ORIGINAL\' в таблице \'WWV_FLOW_COLLECTIONS\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_COLLECTIONS.MD5_ORIGINALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC001Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C001Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC001Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C001Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC002Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C002Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC002Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C002Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC003Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C003Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC003Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C003Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC004Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C004Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC004Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C004Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC005Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C005Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC005Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C005Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC006Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C006Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC006Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C006Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC007Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C007Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC007Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C007Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC008Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C008Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC008Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C008Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC009Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C009Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC009Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C009Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC010Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C010Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC010Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C010Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC011Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C011Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC011Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C011Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC012Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C012Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC012Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C012Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC013Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C013Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC013Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C013Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC014Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C014Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC014Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C014Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC015Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C015Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC015Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C015Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC016Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C016Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC016Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C016Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC017Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C017Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC017Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C017Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC018Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C018Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC018Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C018Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC019Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C019Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC019Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C019Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC020Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C020Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC020Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C020Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC021Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C021Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC021Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C021Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC022Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C022Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC022Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C022Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC023Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C023Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC023Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C023Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC024Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C024Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC024Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C024Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC025Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C025Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC025Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C025Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC026Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C026Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC026Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C026Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC027Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C027Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC027Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C027Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC028Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C028Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC028Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C028Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC029Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C029Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC029Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C029Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC030Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C030Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC030Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C030Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC031Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C031Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC031Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C031Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC032Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C032Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC032Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C032Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC033Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C033Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC033Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C033Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC034Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C034Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC034Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C034Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC035Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C035Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC035Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C035Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC036Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C036Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC036Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C036Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC037Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C037Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC037Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C037Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC038Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C038Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC038Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C038Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC039Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C039Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC039Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C039Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC040Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C040Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC040Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C040Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC041Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C041Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC041Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C041Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC042Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C042Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC042Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C042Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC043Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C043Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC043Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C043Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC044Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C044Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC044Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C044Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC045Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C045Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC045Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C045Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC046Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C046Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC046Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C046Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC047Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C047Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC047Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C047Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC048Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C048Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC048Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C048Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC049Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C049Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC049Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C049Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC050Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.C050Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC050Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.C050Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLOB001Null() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.CLOB001Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLOB001Null() {
                this[this.tableWWV_FLOW_COLLECTIONS.CLOB001Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMD5_ORIGINALNull() {
                return this.IsNull(this.tableWWV_FLOW_COLLECTIONS.MD5_ORIGINALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMD5_ORIGINALNull() {
                this[this.tableWWV_FLOW_COLLECTIONS.MD5_ORIGINALColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_FILESRow : global::System.Data.DataRow {
            
            private WWV_FLOW_FILESDataTable tableWWV_FLOW_FILES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_FILESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_FILES = ((WWV_FLOW_FILESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_FILES.IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_FILES.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FLOW_ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_FILES.FLOW_IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_FILES.FLOW_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    return ((string)(this[this.tableWWV_FLOW_FILES.NAMEColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_FILES.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FILENAME {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FILES.FILENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FILENAME\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.FILENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TITLE {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FILES.TITLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'TITLE\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MIME_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FILES.MIME_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MIME_TYPE\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.MIME_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DOC_SIZE {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_FILES.DOC_SIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DOC_SIZE\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.DOC_SIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DAD_CHARSET {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FILES.DAD_CHARSETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DAD_CHARSET\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.DAD_CHARSETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATED_BY {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FILES.CREATED_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CREATED_BY\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.CREATED_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATED_ON {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_FILES.CREATED_ONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CREATED_ON\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.CREATED_ONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDATED_BY {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FILES.UPDATED_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'UPDATED_BY\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.UPDATED_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATED_ON {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_FILES.UPDATED_ONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'UPDATED_ON\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.UPDATED_ONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LAST_UPDATED {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_FILES.LAST_UPDATEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LAST_UPDATED\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.LAST_UPDATEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONTENT_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FILES.CONTENT_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CONTENT_TYPE\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.CONTENT_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] BLOB_CONTENT {
                get {
                    try {
                        return ((byte[])(this[this.tableWWV_FLOW_FILES.BLOB_CONTENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'BLOB_CONTENT\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.BLOB_CONTENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LANGUAGE {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FILES.LANGUAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LANGUAGE\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.LANGUAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FILES.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DESCRIPTION\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FILE_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FILES.FILE_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FILE_TYPE\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.FILE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FILE_CHARSET {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_FILES.FILE_CHARSETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FILE_CHARSET\' в таблице \'WWV_FLOW_FILES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_FILES.FILE_CHARSETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFILENAMENull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.FILENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFILENAMENull() {
                this[this.tableWWV_FLOW_FILES.FILENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTITLENull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.TITLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTITLENull() {
                this[this.tableWWV_FLOW_FILES.TITLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIME_TYPENull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.MIME_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIME_TYPENull() {
                this[this.tableWWV_FLOW_FILES.MIME_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOC_SIZENull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.DOC_SIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOC_SIZENull() {
                this[this.tableWWV_FLOW_FILES.DOC_SIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDAD_CHARSETNull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.DAD_CHARSETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDAD_CHARSETNull() {
                this[this.tableWWV_FLOW_FILES.DAD_CHARSETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATED_BYNull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.CREATED_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATED_BYNull() {
                this[this.tableWWV_FLOW_FILES.CREATED_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATED_ONNull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.CREATED_ONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATED_ONNull() {
                this[this.tableWWV_FLOW_FILES.CREATED_ONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATED_BYNull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.UPDATED_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATED_BYNull() {
                this[this.tableWWV_FLOW_FILES.UPDATED_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATED_ONNull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.UPDATED_ONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATED_ONNull() {
                this[this.tableWWV_FLOW_FILES.UPDATED_ONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_UPDATEDNull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.LAST_UPDATEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_UPDATEDNull() {
                this[this.tableWWV_FLOW_FILES.LAST_UPDATEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONTENT_TYPENull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.CONTENT_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONTENT_TYPENull() {
                this[this.tableWWV_FLOW_FILES.CONTENT_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLOB_CONTENTNull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.BLOB_CONTENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLOB_CONTENTNull() {
                this[this.tableWWV_FLOW_FILES.BLOB_CONTENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLANGUAGENull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.LANGUAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLANGUAGENull() {
                this[this.tableWWV_FLOW_FILES.LANGUAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTIONNull() {
                this[this.tableWWV_FLOW_FILES.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFILE_TYPENull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.FILE_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFILE_TYPENull() {
                this[this.tableWWV_FLOW_FILES.FILE_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFILE_CHARSETNull() {
                return this.IsNull(this.tableWWV_FLOW_FILES.FILE_CHARSETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFILE_CHARSETNull() {
                this[this.tableWWV_FLOW_FILES.FILE_CHARSETColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_GROUP_USERSRow : global::System.Data.DataRow {
            
            private WWV_FLOW_GROUP_USERSDataTable tableWWV_FLOW_GROUP_USERS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_GROUP_USERSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_GROUP_USERS = ((WWV_FLOW_GROUP_USERSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GROUP_ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_GROUP_USERS.GROUP_IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_GROUP_USERS.GROUP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GROUP_NAME {
                get {
                    return ((string)(this[this.tableWWV_FLOW_GROUP_USERS.GROUP_NAMEColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_GROUP_USERS.GROUP_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USER_ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_GROUP_USERS.USER_IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_GROUP_USERS.USER_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_HOURS_12Row : global::System.Data.DataRow {
            
            private WWV_FLOW_HOURS_12DataTable tableWWV_FLOW_HOURS_12;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_HOURS_12Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_HOURS_12 = ((WWV_FLOW_HOURS_12DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HOUR_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_HOURS_12.HOUR_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'HOUR_VALUE\' в таблице \'WWV_FLOW_HOURS_12\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_HOURS_12.HOUR_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHOUR_VALUENull() {
                return this.IsNull(this.tableWWV_FLOW_HOURS_12.HOUR_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHOUR_VALUENull() {
                this[this.tableWWV_FLOW_HOURS_12.HOUR_VALUEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_HOURS_24Row : global::System.Data.DataRow {
            
            private WWV_FLOW_HOURS_24DataTable tableWWV_FLOW_HOURS_24;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_HOURS_24Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_HOURS_24 = ((WWV_FLOW_HOURS_24DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HOUR_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_HOURS_24.HOUR_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'HOUR_VALUE\' в таблице \'WWV_FLOW_HOURS_24\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_HOURS_24.HOUR_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHOUR_VALUENull() {
                return this.IsNull(this.tableWWV_FLOW_HOURS_24.HOUR_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHOUR_VALUENull() {
                this[this.tableWWV_FLOW_HOURS_24.HOUR_VALUEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_MINUTESRow : global::System.Data.DataRow {
            
            private WWV_FLOW_MINUTESDataTable tableWWV_FLOW_MINUTES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_MINUTESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_MINUTES = ((WWV_FLOW_MINUTESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MINUTE_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_MINUTES.MINUTE_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MINUTE_VALUE\' в таблице \'WWV_FLOW_MINUTES\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_MINUTES.MINUTE_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMINUTE_VALUENull() {
                return this.IsNull(this.tableWWV_FLOW_MINUTES.MINUTE_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMINUTE_VALUENull() {
                this[this.tableWWV_FLOW_MINUTES.MINUTE_VALUEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_MINUTES_5Row : global::System.Data.DataRow {
            
            private WWV_FLOW_MINUTES_5DataTable tableWWV_FLOW_MINUTES_5;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_MINUTES_5Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_MINUTES_5 = ((WWV_FLOW_MINUTES_5DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MINUTE_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_MINUTES_5.MINUTE_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MINUTE_VALUE\' в таблице \'WWV_FLOW_MINUTES_5\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_MINUTES_5.MINUTE_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMINUTE_VALUENull() {
                return this.IsNull(this.tableWWV_FLOW_MINUTES_5.MINUTE_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMINUTE_VALUENull() {
                this[this.tableWWV_FLOW_MINUTES_5.MINUTE_VALUEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_MONTHS_MONRow : global::System.Data.DataRow {
            
            private WWV_FLOW_MONTHS_MONDataTable tableWWV_FLOW_MONTHS_MON;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_MONTHS_MONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_MONTHS_MON = ((WWV_FLOW_MONTHS_MONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MONTH_DISPLAY {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_MONTHS_MON.MONTH_DISPLAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MONTH_DISPLAY\' в таблице \'WWV_FLOW_MONTHS_MON\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_MONTHS_MON.MONTH_DISPLAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MONTH_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_MONTHS_MON.MONTH_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MONTH_VALUE\' в таблице \'WWV_FLOW_MONTHS_MON\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_MONTHS_MON.MONTH_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMONTH_DISPLAYNull() {
                return this.IsNull(this.tableWWV_FLOW_MONTHS_MON.MONTH_DISPLAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMONTH_DISPLAYNull() {
                this[this.tableWWV_FLOW_MONTHS_MON.MONTH_DISPLAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMONTH_VALUENull() {
                return this.IsNull(this.tableWWV_FLOW_MONTHS_MON.MONTH_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMONTH_VALUENull() {
                this[this.tableWWV_FLOW_MONTHS_MON.MONTH_VALUEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_MONTHS_MONTHRow : global::System.Data.DataRow {
            
            private WWV_FLOW_MONTHS_MONTHDataTable tableWWV_FLOW_MONTHS_MONTH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_MONTHS_MONTHRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_MONTHS_MONTH = ((WWV_FLOW_MONTHS_MONTHDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MONTH_DISPLAY {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_MONTHS_MONTH.MONTH_DISPLAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MONTH_DISPLAY\' в таблице \'WWV_FLOW_MONTHS_MONTH\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_MONTHS_MONTH.MONTH_DISPLAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MONTH_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_MONTHS_MONTH.MONTH_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MONTH_VALUE\' в таблице \'WWV_FLOW_MONTHS_MONTH\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_MONTHS_MONTH.MONTH_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMONTH_DISPLAYNull() {
                return this.IsNull(this.tableWWV_FLOW_MONTHS_MONTH.MONTH_DISPLAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMONTH_DISPLAYNull() {
                this[this.tableWWV_FLOW_MONTHS_MONTH.MONTH_DISPLAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMONTH_VALUENull() {
                return this.IsNull(this.tableWWV_FLOW_MONTHS_MONTH.MONTH_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMONTH_VALUENull() {
                this[this.tableWWV_FLOW_MONTHS_MONTH.MONTH_VALUEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_PLSQL_JOBSRow : global::System.Data.DataRow {
            
            private WWV_FLOW_PLSQL_JOBSDataTable tableWWV_FLOW_PLSQL_JOBS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_PLSQL_JOBSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_PLSQL_JOBS = ((WWV_FLOW_PLSQL_JOBSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_PLSQL_JOBS.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID\' в таблице \'WWV_FLOW_PLSQL_JOBS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PLSQL_JOBS.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JOB {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_PLSQL_JOBS.JOBColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_PLSQL_JOBS.JOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FLOW_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_PLSQL_JOBS.FLOW_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FLOW_ID\' в таблице \'WWV_FLOW_PLSQL_JOBS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PLSQL_JOBS.FLOW_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OWNER {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_PLSQL_JOBS.OWNERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OWNER\' в таблице \'WWV_FLOW_PLSQL_JOBS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PLSQL_JOBS.OWNERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENDUSER {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_PLSQL_JOBS.ENDUSERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ENDUSER\' в таблице \'WWV_FLOW_PLSQL_JOBS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PLSQL_JOBS.ENDUSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATED {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_PLSQL_JOBS.CREATEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CREATED\' в таблице \'WWV_FLOW_PLSQL_JOBS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PLSQL_JOBS.CREATEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_PLSQL_JOBS.MODIFIEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MODIFIED\' в таблице \'WWV_FLOW_PLSQL_JOBS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PLSQL_JOBS.MODIFIEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_PLSQL_JOBS.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'STATUS\' в таблице \'WWV_FLOW_PLSQL_JOBS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PLSQL_JOBS.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SYSTEM_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_PLSQL_JOBS.SYSTEM_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SYSTEM_STATUS\' в таблице \'WWV_FLOW_PLSQL_JOBS\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PLSQL_JOBS.SYSTEM_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SYSTEM_MODIFIED {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_PLSQL_JOBS.SYSTEM_MODIFIEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SYSTEM_MODIFIED\' в таблице \'WWV_FLOW_PLSQL_JOBS\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PLSQL_JOBS.SYSTEM_MODIFIEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SECURITY_GROUP_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_PLSQL_JOBS.SECURITY_GROUP_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SECURITY_GROUP_ID\' в таблице \'WWV_FLOW_PLSQL_JOBS\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_PLSQL_JOBS.SECURITY_GROUP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableWWV_FLOW_PLSQL_JOBS.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableWWV_FLOW_PLSQL_JOBS.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLOW_IDNull() {
                return this.IsNull(this.tableWWV_FLOW_PLSQL_JOBS.FLOW_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLOW_IDNull() {
                this[this.tableWWV_FLOW_PLSQL_JOBS.FLOW_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOWNERNull() {
                return this.IsNull(this.tableWWV_FLOW_PLSQL_JOBS.OWNERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOWNERNull() {
                this[this.tableWWV_FLOW_PLSQL_JOBS.OWNERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENDUSERNull() {
                return this.IsNull(this.tableWWV_FLOW_PLSQL_JOBS.ENDUSERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENDUSERNull() {
                this[this.tableWWV_FLOW_PLSQL_JOBS.ENDUSERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATEDNull() {
                return this.IsNull(this.tableWWV_FLOW_PLSQL_JOBS.CREATEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATEDNull() {
                this[this.tableWWV_FLOW_PLSQL_JOBS.CREATEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIEDNull() {
                return this.IsNull(this.tableWWV_FLOW_PLSQL_JOBS.MODIFIEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIEDNull() {
                this[this.tableWWV_FLOW_PLSQL_JOBS.MODIFIEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableWWV_FLOW_PLSQL_JOBS.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableWWV_FLOW_PLSQL_JOBS.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSYSTEM_STATUSNull() {
                return this.IsNull(this.tableWWV_FLOW_PLSQL_JOBS.SYSTEM_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSYSTEM_STATUSNull() {
                this[this.tableWWV_FLOW_PLSQL_JOBS.SYSTEM_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSYSTEM_MODIFIEDNull() {
                return this.IsNull(this.tableWWV_FLOW_PLSQL_JOBS.SYSTEM_MODIFIEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSYSTEM_MODIFIEDNull() {
                this[this.tableWWV_FLOW_PLSQL_JOBS.SYSTEM_MODIFIEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSECURITY_GROUP_IDNull() {
                return this.IsNull(this.tableWWV_FLOW_PLSQL_JOBS.SECURITY_GROUP_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSECURITY_GROUP_IDNull() {
                this[this.tableWWV_FLOW_PLSQL_JOBS.SECURITY_GROUP_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_USER_ACTIVITY_LOGRow : global::System.Data.DataRow {
            
            private WWV_FLOW_USER_ACTIVITY_LOGDataTable tableWWV_FLOW_USER_ACTIVITY_LOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_USER_ACTIVITY_LOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_USER_ACTIVITY_LOG = ((WWV_FLOW_USER_ACTIVITY_LOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME_STAMP {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.TIME_STAMPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'TIME_STAMP\' в таблице \'WWV_FLOW_USER_ACTIVITY_LOG\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.TIME_STAMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPONENT_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.COMPONENT_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'COMPONENT_TYPE\' в таблице \'WWV_FLOW_USER_ACTIVITY_LOG\' равн" +
                                "о DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.COMPONENT_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPONENT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.COMPONENT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'COMPONENT_NAME\' в таблице \'WWV_FLOW_USER_ACTIVITY_LOG\' равн" +
                                "о DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.COMPONENT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPONENT_ATTRIBUTE {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.COMPONENT_ATTRIBUTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'COMPONENT_ATTRIBUTE\' в таблице \'WWV_FLOW_USER_ACTIVITY_LOG\'" +
                                " равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.COMPONENT_ATTRIBUTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INFORMATION {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.INFORMATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'INFORMATION\' в таблице \'WWV_FLOW_USER_ACTIVITY_LOG\' равно D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.INFORMATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ELAP {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.ELAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ELAP\' в таблице \'WWV_FLOW_USER_ACTIVITY_LOG\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.ELAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NUM_ROWS {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.NUM_ROWSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NUM_ROWS\' в таблице \'WWV_FLOW_USER_ACTIVITY_LOG\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.NUM_ROWSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USERID {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.USERIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'USERID\' в таблице \'WWV_FLOW_USER_ACTIVITY_LOG\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.USERIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IP_ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.IP_ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'IP_ADDRESS\' в таблице \'WWV_FLOW_USER_ACTIVITY_LOG\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.IP_ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER_AGENT {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.USER_AGENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'USER_AGENT\' в таблице \'WWV_FLOW_USER_ACTIVITY_LOG\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.USER_AGENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FLOW_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.FLOW_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FLOW_ID\' в таблице \'WWV_FLOW_USER_ACTIVITY_LOG\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.FLOW_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal STEP_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.STEP_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'STEP_ID\' в таблице \'WWV_FLOW_USER_ACTIVITY_LOG\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.STEP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SESSION_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.SESSION_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SESSION_ID\' в таблице \'WWV_FLOW_USER_ACTIVITY_LOG\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.SESSION_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIME_STAMPNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_ACTIVITY_LOG.TIME_STAMPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIME_STAMPNull() {
                this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.TIME_STAMPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPONENT_TYPENull() {
                return this.IsNull(this.tableWWV_FLOW_USER_ACTIVITY_LOG.COMPONENT_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPONENT_TYPENull() {
                this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.COMPONENT_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPONENT_NAMENull() {
                return this.IsNull(this.tableWWV_FLOW_USER_ACTIVITY_LOG.COMPONENT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPONENT_NAMENull() {
                this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.COMPONENT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPONENT_ATTRIBUTENull() {
                return this.IsNull(this.tableWWV_FLOW_USER_ACTIVITY_LOG.COMPONENT_ATTRIBUTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPONENT_ATTRIBUTENull() {
                this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.COMPONENT_ATTRIBUTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINFORMATIONNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_ACTIVITY_LOG.INFORMATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINFORMATIONNull() {
                this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.INFORMATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELAPNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_ACTIVITY_LOG.ELAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELAPNull() {
                this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.ELAPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNUM_ROWSNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_ACTIVITY_LOG.NUM_ROWSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNUM_ROWSNull() {
                this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.NUM_ROWSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSERIDNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_ACTIVITY_LOG.USERIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSERIDNull() {
                this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.USERIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIP_ADDRESSNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_ACTIVITY_LOG.IP_ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIP_ADDRESSNull() {
                this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.IP_ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSER_AGENTNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_ACTIVITY_LOG.USER_AGENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSER_AGENTNull() {
                this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.USER_AGENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLOW_IDNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_ACTIVITY_LOG.FLOW_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLOW_IDNull() {
                this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.FLOW_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTEP_IDNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_ACTIVITY_LOG.STEP_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTEP_IDNull() {
                this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.STEP_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSESSION_IDNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_ACTIVITY_LOG.SESSION_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSESSION_IDNull() {
                this[this.tableWWV_FLOW_USER_ACTIVITY_LOG.SESSION_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_USER_MAIL_LOGRow : global::System.Data.DataRow {
            
            private WWV_FLOW_USER_MAIL_LOGDataTable tableWWV_FLOW_USER_MAIL_LOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_USER_MAIL_LOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_USER_MAIL_LOG = ((WWV_FLOW_USER_MAIL_LOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_TO {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_TOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MAIL_TO\' в таблице \'WWV_FLOW_USER_MAIL_LOG\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_TOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_FROM {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_FROMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MAIL_FROM\' в таблице \'WWV_FLOW_USER_MAIL_LOG\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_FROMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_SUBJ {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_SUBJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MAIL_SUBJ\' в таблице \'WWV_FLOW_USER_MAIL_LOG\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_SUBJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_CC {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_CCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MAIL_CC\' в таблице \'WWV_FLOW_USER_MAIL_LOG\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_CCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_BCC {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_BCCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MAIL_BCC\' в таблице \'WWV_FLOW_USER_MAIL_LOG\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_BCCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LAST_UPDATED_ON {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_USER_MAIL_LOG.LAST_UPDATED_ONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LAST_UPDATED_ON\' в таблице \'WWV_FLOW_USER_MAIL_LOG\' равно D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_LOG.LAST_UPDATED_ONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_TONull() {
                return this.IsNull(this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_TOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_TONull() {
                this[this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_TOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_FROMNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_FROMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_FROMNull() {
                this[this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_FROMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_SUBJNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_SUBJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_SUBJNull() {
                this[this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_SUBJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_CCNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_CCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_CCNull() {
                this[this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_CCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_BCCNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_BCCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_BCCNull() {
                this[this.tableWWV_FLOW_USER_MAIL_LOG.MAIL_BCCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_UPDATED_ONNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_MAIL_LOG.LAST_UPDATED_ONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_UPDATED_ONNull() {
                this[this.tableWWV_FLOW_USER_MAIL_LOG.LAST_UPDATED_ONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_USER_MAIL_QUEUERow : global::System.Data.DataRow {
            
            private WWV_FLOW_USER_MAIL_QUEUEDataTable tableWWV_FLOW_USER_MAIL_QUEUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_USER_MAIL_QUEUERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_USER_MAIL_QUEUE = ((WWV_FLOW_USER_MAIL_QUEUEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_USER_MAIL_QUEUE.IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_QUEUE.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_TO {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_TOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MAIL_TO\' в таблице \'WWV_FLOW_USER_MAIL_QUEUE\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_TOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_FROM {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_FROMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MAIL_FROM\' в таблице \'WWV_FLOW_USER_MAIL_QUEUE\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_FROMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_SUBJ {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_SUBJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MAIL_SUBJ\' в таблице \'WWV_FLOW_USER_MAIL_QUEUE\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_SUBJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_CC {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_CCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MAIL_CC\' в таблице \'WWV_FLOW_USER_MAIL_QUEUE\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_CCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_BCC {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_BCCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MAIL_BCC\' в таблице \'WWV_FLOW_USER_MAIL_QUEUE\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_BCCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_BODY {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_BODYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MAIL_BODY\' в таблице \'WWV_FLOW_USER_MAIL_QUEUE\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_BODYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_BODY_HTML {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_BODY_HTMLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MAIL_BODY_HTML\' в таблице \'WWV_FLOW_USER_MAIL_QUEUE\' равно " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_BODY_HTMLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAST_UPDATED_BY {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USER_MAIL_QUEUE.LAST_UPDATED_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LAST_UPDATED_BY\' в таблице \'WWV_FLOW_USER_MAIL_QUEUE\' равно" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_QUEUE.LAST_UPDATED_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LAST_UPDATED_ON {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_USER_MAIL_QUEUE.LAST_UPDATED_ONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LAST_UPDATED_ON\' в таблице \'WWV_FLOW_USER_MAIL_QUEUE\' равно" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USER_MAIL_QUEUE.LAST_UPDATED_ONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_TONull() {
                return this.IsNull(this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_TOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_TONull() {
                this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_TOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_FROMNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_FROMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_FROMNull() {
                this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_FROMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_SUBJNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_SUBJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_SUBJNull() {
                this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_SUBJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_CCNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_CCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_CCNull() {
                this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_CCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_BCCNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_BCCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_BCCNull() {
                this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_BCCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_BODYNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_BODYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_BODYNull() {
                this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_BODYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_BODY_HTMLNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_BODY_HTMLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_BODY_HTMLNull() {
                this[this.tableWWV_FLOW_USER_MAIL_QUEUE.MAIL_BODY_HTMLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_UPDATED_BYNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_MAIL_QUEUE.LAST_UPDATED_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_UPDATED_BYNull() {
                this[this.tableWWV_FLOW_USER_MAIL_QUEUE.LAST_UPDATED_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_UPDATED_ONNull() {
                return this.IsNull(this.tableWWV_FLOW_USER_MAIL_QUEUE.LAST_UPDATED_ONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_UPDATED_ONNull() {
                this[this.tableWWV_FLOW_USER_MAIL_QUEUE.LAST_UPDATED_ONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_USERSRow : global::System.Data.DataRow {
            
            private WWV_FLOW_USERSDataTable tableWWV_FLOW_USERS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_USERSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_USERS = ((WWV_FLOW_USERSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USER_ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_USERS.USER_IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_USERS.USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER_NAME {
                get {
                    return ((string)(this[this.tableWWV_FLOW_USERS.USER_NAMEColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_USERS.USER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FIRST_NAME {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.FIRST_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FIRST_NAME\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.FIRST_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAST_NAME {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.LAST_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LAST_NAME\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.LAST_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KNOWN_AS {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.KNOWN_ASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'KNOWN_AS\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.KNOWN_ASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LAST_UPDATE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableWWV_FLOW_USERS.LAST_UPDATE_DATEColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_USERS.LAST_UPDATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAST_UPDATED_BY {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.LAST_UPDATED_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LAST_UPDATED_BY\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.LAST_UPDATED_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATION_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableWWV_FLOW_USERS.CREATION_DATEColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_USERS.CREATION_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATED_BY {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.CREATED_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CREATED_BY\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.CREATED_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime START_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_USERS.START_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'START_DATE\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.START_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime END_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_USERS.END_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'END_DATE\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.END_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DESCRIPTION\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PASSWORD_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWWV_FLOW_USERS.PASSWORD_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PASSWORD_DATE\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.PASSWORD_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PASSWORD_ACCESSES_LEFT {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_USERS.PASSWORD_ACCESSES_LEFTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PASSWORD_ACCESSES_LEFT\' в таблице \'WWV_FLOW_USERS\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.PASSWORD_ACCESSES_LEFTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PASSWORD_LIFESPAN_ACCESSES {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_USERS.PASSWORD_LIFESPAN_ACCESSESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PASSWORD_LIFESPAN_ACCESSES\' в таблице \'WWV_FLOW_USERS\' равн" +
                                "о DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.PASSWORD_LIFESPAN_ACCESSESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PASSWORD_LIFESPAN_DAYS {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_USERS.PASSWORD_LIFESPAN_DAYSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PASSWORD_LIFESPAN_DAYS\' в таблице \'WWV_FLOW_USERS\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.PASSWORD_LIFESPAN_DAYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EMPLOYEE_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_USERS.EMPLOYEE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'EMPLOYEE_ID\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.EMPLOYEE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PERSON_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.PERSON_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PERSON_TYPE\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.PERSON_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL_ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.EMAIL_ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'EMAIL_ADDRESS\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.EMAIL_ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PERSON_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_USERS.PERSON_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PERSON_ID\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.PERSON_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SECURITY_GROUP_ID {
                get {
                    return ((decimal)(this[this.tableWWV_FLOW_USERS.SECURITY_GROUP_IDColumn]));
                }
                set {
                    this[this.tableWWV_FLOW_USERS.SECURITY_GROUP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WEB_PASSWORD {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.WEB_PASSWORDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'WEB_PASSWORD\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.WEB_PASSWORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] WEB_PASSWORD_RAW {
                get {
                    try {
                        return ((byte[])(this[this.tableWWV_FLOW_USERS.WEB_PASSWORD_RAWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'WEB_PASSWORD_RAW\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.WEB_PASSWORD_RAWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEFAULT_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.DEFAULT_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DEFAULT_SCHEMA\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.DEFAULT_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ALLOW_ACCESS_TO_SCHEMAS {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.ALLOW_ACCESS_TO_SCHEMASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ALLOW_ACCESS_TO_SCHEMAS\' в таблице \'WWV_FLOW_USERS\' равно D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.ALLOW_ACCESS_TO_SCHEMASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTRIBUTE_01 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.ATTRIBUTE_01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ATTRIBUTE_01\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.ATTRIBUTE_01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTRIBUTE_02 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.ATTRIBUTE_02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ATTRIBUTE_02\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.ATTRIBUTE_02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTRIBUTE_03 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.ATTRIBUTE_03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ATTRIBUTE_03\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.ATTRIBUTE_03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTRIBUTE_04 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.ATTRIBUTE_04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ATTRIBUTE_04\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.ATTRIBUTE_04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTRIBUTE_05 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.ATTRIBUTE_05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ATTRIBUTE_05\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.ATTRIBUTE_05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTRIBUTE_06 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.ATTRIBUTE_06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ATTRIBUTE_06\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.ATTRIBUTE_06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTRIBUTE_07 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.ATTRIBUTE_07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ATTRIBUTE_07\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.ATTRIBUTE_07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTRIBUTE_08 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.ATTRIBUTE_08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ATTRIBUTE_08\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.ATTRIBUTE_08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTRIBUTE_09 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.ATTRIBUTE_09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ATTRIBUTE_09\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.ATTRIBUTE_09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTRIBUTE_10 {
                get {
                    try {
                        return ((string)(this[this.tableWWV_FLOW_USERS.ATTRIBUTE_10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ATTRIBUTE_10\' в таблице \'WWV_FLOW_USERS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_USERS.ATTRIBUTE_10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIRST_NAMENull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.FIRST_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIRST_NAMENull() {
                this[this.tableWWV_FLOW_USERS.FIRST_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_NAMENull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.LAST_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_NAMENull() {
                this[this.tableWWV_FLOW_USERS.LAST_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKNOWN_ASNull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.KNOWN_ASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKNOWN_ASNull() {
                this[this.tableWWV_FLOW_USERS.KNOWN_ASColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_UPDATED_BYNull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.LAST_UPDATED_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_UPDATED_BYNull() {
                this[this.tableWWV_FLOW_USERS.LAST_UPDATED_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATED_BYNull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.CREATED_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATED_BYNull() {
                this[this.tableWWV_FLOW_USERS.CREATED_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTART_DATENull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.START_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTART_DATENull() {
                this[this.tableWWV_FLOW_USERS.START_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEND_DATENull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.END_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEND_DATENull() {
                this[this.tableWWV_FLOW_USERS.END_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTIONNull() {
                this[this.tableWWV_FLOW_USERS.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPASSWORD_DATENull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.PASSWORD_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPASSWORD_DATENull() {
                this[this.tableWWV_FLOW_USERS.PASSWORD_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPASSWORD_ACCESSES_LEFTNull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.PASSWORD_ACCESSES_LEFTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPASSWORD_ACCESSES_LEFTNull() {
                this[this.tableWWV_FLOW_USERS.PASSWORD_ACCESSES_LEFTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPASSWORD_LIFESPAN_ACCESSESNull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.PASSWORD_LIFESPAN_ACCESSESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPASSWORD_LIFESPAN_ACCESSESNull() {
                this[this.tableWWV_FLOW_USERS.PASSWORD_LIFESPAN_ACCESSESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPASSWORD_LIFESPAN_DAYSNull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.PASSWORD_LIFESPAN_DAYSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPASSWORD_LIFESPAN_DAYSNull() {
                this[this.tableWWV_FLOW_USERS.PASSWORD_LIFESPAN_DAYSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_IDNull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.EMPLOYEE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_IDNull() {
                this[this.tableWWV_FLOW_USERS.EMPLOYEE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPERSON_TYPENull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.PERSON_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPERSON_TYPENull() {
                this[this.tableWWV_FLOW_USERS.PERSON_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAIL_ADDRESSNull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.EMAIL_ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAIL_ADDRESSNull() {
                this[this.tableWWV_FLOW_USERS.EMAIL_ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPERSON_IDNull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.PERSON_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPERSON_IDNull() {
                this[this.tableWWV_FLOW_USERS.PERSON_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWEB_PASSWORDNull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.WEB_PASSWORDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWEB_PASSWORDNull() {
                this[this.tableWWV_FLOW_USERS.WEB_PASSWORDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWEB_PASSWORD_RAWNull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.WEB_PASSWORD_RAWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWEB_PASSWORD_RAWNull() {
                this[this.tableWWV_FLOW_USERS.WEB_PASSWORD_RAWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEFAULT_SCHEMANull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.DEFAULT_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEFAULT_SCHEMANull() {
                this[this.tableWWV_FLOW_USERS.DEFAULT_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsALLOW_ACCESS_TO_SCHEMASNull() {
                return this.IsNull(this.tableWWV_FLOW_USERS.ALLOW_ACCESS_TO_SCHEMASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetALLOW_ACCESS_TO_SCHEMASNull() {
                this[this.tableWWV_FLOW_USERS.ALLOW_ACCESS_TO_SCHEMASColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTRIBUTE_01Null() {
                return this.IsNull(this.tableWWV_FLOW_USERS.ATTRIBUTE_01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTRIBUTE_01Null() {
                this[this.tableWWV_FLOW_USERS.ATTRIBUTE_01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTRIBUTE_02Null() {
                return this.IsNull(this.tableWWV_FLOW_USERS.ATTRIBUTE_02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTRIBUTE_02Null() {
                this[this.tableWWV_FLOW_USERS.ATTRIBUTE_02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTRIBUTE_03Null() {
                return this.IsNull(this.tableWWV_FLOW_USERS.ATTRIBUTE_03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTRIBUTE_03Null() {
                this[this.tableWWV_FLOW_USERS.ATTRIBUTE_03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTRIBUTE_04Null() {
                return this.IsNull(this.tableWWV_FLOW_USERS.ATTRIBUTE_04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTRIBUTE_04Null() {
                this[this.tableWWV_FLOW_USERS.ATTRIBUTE_04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTRIBUTE_05Null() {
                return this.IsNull(this.tableWWV_FLOW_USERS.ATTRIBUTE_05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTRIBUTE_05Null() {
                this[this.tableWWV_FLOW_USERS.ATTRIBUTE_05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTRIBUTE_06Null() {
                return this.IsNull(this.tableWWV_FLOW_USERS.ATTRIBUTE_06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTRIBUTE_06Null() {
                this[this.tableWWV_FLOW_USERS.ATTRIBUTE_06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTRIBUTE_07Null() {
                return this.IsNull(this.tableWWV_FLOW_USERS.ATTRIBUTE_07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTRIBUTE_07Null() {
                this[this.tableWWV_FLOW_USERS.ATTRIBUTE_07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTRIBUTE_08Null() {
                return this.IsNull(this.tableWWV_FLOW_USERS.ATTRIBUTE_08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTRIBUTE_08Null() {
                this[this.tableWWV_FLOW_USERS.ATTRIBUTE_08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTRIBUTE_09Null() {
                return this.IsNull(this.tableWWV_FLOW_USERS.ATTRIBUTE_09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTRIBUTE_09Null() {
                this[this.tableWWV_FLOW_USERS.ATTRIBUTE_09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTRIBUTE_10Null() {
                return this.IsNull(this.tableWWV_FLOW_USERS.ATTRIBUTE_10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTRIBUTE_10Null() {
                this[this.tableWWV_FLOW_USERS.ATTRIBUTE_10Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WWV_FLOW_YEARSRow : global::System.Data.DataRow {
            
            private WWV_FLOW_YEARSDataTable tableWWV_FLOW_YEARS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WWV_FLOW_YEARSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWWV_FLOW_YEARS = ((WWV_FLOW_YEARSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal YEAR_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableWWV_FLOW_YEARS.YEAR_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'YEAR_VALUE\' в таблице \'WWV_FLOW_YEARS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableWWV_FLOW_YEARS.YEAR_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYEAR_VALUENull() {
                return this.IsNull(this.tableWWV_FLOW_YEARS.YEAR_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYEAR_VALUENull() {
                this[this.tableWWV_FLOW_YEARS.YEAR_VALUEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PASSWORDRow : global::System.Data.DataRow {
            
            private PASSWORDDataTable tablePASSWORD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PASSWORDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePASSWORD = ((PASSWORDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID {
                get {
                    return ((string)(this[this.tablePASSWORD.IDColumn]));
                }
                set {
                    this[this.tablePASSWORD.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER_NAME {
                get {
                    try {
                        return ((string)(this[this.tablePASSWORD.USER_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'USER_NAME\' в таблице \'PASSWORD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tablePASSWORD.USER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSER_NAMENull() {
                return this.IsNull(this.tablePASSWORD.USER_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSER_NAMENull() {
                this[this.tablePASSWORD.USER_NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CHAMBERRowChangeEvent : global::System.EventArgs {
            
            private CHAMBERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHAMBERRowChangeEvent(CHAMBERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHAMBERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DOCTORRowChangeEvent : global::System.EventArgs {
            
            private DOCTORRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOCTORRowChangeEvent(DOCTORRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOCTORRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MEDICAL_HISTIRYRowChangeEvent : global::System.EventArgs {
            
            private MEDICAL_HISTIRYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEDICAL_HISTIRYRowChangeEvent(MEDICAL_HISTIRYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEDICAL_HISTIRYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PACIENTRowChangeEvent : global::System.EventArgs {
            
            private PACIENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACIENTRowChangeEvent(PACIENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACIENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class POSTRowChangeEvent : global::System.EventArgs {
            
            private POSTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POSTRowChangeEvent(POSTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POSTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PRIEMRowChangeEvent : global::System.EventArgs {
            
            private PRIEMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRIEMRowChangeEvent(PRIEMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRIEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SPECIALITYRowChangeEvent : global::System.EventArgs {
            
            private SPECIALITYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIALITYRowChangeEvent(SPECIALITYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIALITYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UNITRowChangeEvent : global::System.EventArgs {
            
            private UNITRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITRowChangeEvent(UNITRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_DUAL100RowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_DUAL100Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_DUAL100RowChangeEvent(WWV_FLOW_DUAL100Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_DUAL100Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_FIELD_TEMPLATESRowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_FIELD_TEMPLATESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_FIELD_TEMPLATESRowChangeEvent(WWV_FLOW_FIELD_TEMPLATESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_FIELD_TEMPLATESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_LIST_OF_VALUES_DATARowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_LIST_OF_VALUES_DATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_LIST_OF_VALUES_DATARowChangeEvent(WWV_FLOW_LIST_OF_VALUES_DATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_LIST_OF_VALUES_DATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _WWV_FLOW_LISTS_OF_VALUES_RowChangeEvent : global::System.EventArgs {
            
            private _WWV_FLOW_LISTS_OF_VALUES_Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _WWV_FLOW_LISTS_OF_VALUES_RowChangeEvent(_WWV_FLOW_LISTS_OF_VALUES_Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _WWV_FLOW_LISTS_OF_VALUES_Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_LOV_TEMPRowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_LOV_TEMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_LOV_TEMPRowChangeEvent(WWV_FLOW_LOV_TEMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_LOV_TEMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_PATCHESRowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_PATCHESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_PATCHESRowChangeEvent(WWV_FLOW_PATCHESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_PATCHESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_TEMP_TABLERowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_TEMP_TABLERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_TEMP_TABLERowChangeEvent(WWV_FLOW_TEMP_TABLERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_TEMP_TABLERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_CLICKTHRU_LOGRowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_CLICKTHRU_LOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_CLICKTHRU_LOGRowChangeEvent(WWV_FLOW_CLICKTHRU_LOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_CLICKTHRU_LOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_COLLECTIONSRowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_COLLECTIONSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_COLLECTIONSRowChangeEvent(WWV_FLOW_COLLECTIONSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_COLLECTIONSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_FILESRowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_FILESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_FILESRowChangeEvent(WWV_FLOW_FILESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_FILESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_GROUP_USERSRowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_GROUP_USERSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_GROUP_USERSRowChangeEvent(WWV_FLOW_GROUP_USERSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_GROUP_USERSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_HOURS_12RowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_HOURS_12Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_HOURS_12RowChangeEvent(WWV_FLOW_HOURS_12Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_HOURS_12Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_HOURS_24RowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_HOURS_24Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_HOURS_24RowChangeEvent(WWV_FLOW_HOURS_24Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_HOURS_24Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_MINUTESRowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_MINUTESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MINUTESRowChangeEvent(WWV_FLOW_MINUTESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MINUTESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_MINUTES_5RowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_MINUTES_5Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MINUTES_5RowChangeEvent(WWV_FLOW_MINUTES_5Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MINUTES_5Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_MONTHS_MONRowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_MONTHS_MONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MONTHS_MONRowChangeEvent(WWV_FLOW_MONTHS_MONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MONTHS_MONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_MONTHS_MONTHRowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_MONTHS_MONTHRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MONTHS_MONTHRowChangeEvent(WWV_FLOW_MONTHS_MONTHRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_MONTHS_MONTHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_PLSQL_JOBSRowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_PLSQL_JOBSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_PLSQL_JOBSRowChangeEvent(WWV_FLOW_PLSQL_JOBSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_PLSQL_JOBSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_USER_ACTIVITY_LOGRowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_USER_ACTIVITY_LOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_ACTIVITY_LOGRowChangeEvent(WWV_FLOW_USER_ACTIVITY_LOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_ACTIVITY_LOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_USER_MAIL_LOGRowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_USER_MAIL_LOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_MAIL_LOGRowChangeEvent(WWV_FLOW_USER_MAIL_LOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_MAIL_LOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_USER_MAIL_QUEUERowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_USER_MAIL_QUEUERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_MAIL_QUEUERowChangeEvent(WWV_FLOW_USER_MAIL_QUEUERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USER_MAIL_QUEUERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_USERSRowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_USERSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USERSRowChangeEvent(WWV_FLOW_USERSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_USERSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WWV_FLOW_YEARSRowChangeEvent : global::System.EventArgs {
            
            private WWV_FLOW_YEARSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_YEARSRowChangeEvent(WWV_FLOW_YEARSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WWV_FLOW_YEARSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PASSWORDRowChangeEvent : global::System.EventArgs {
            
            private PASSWORDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PASSWORDRowChangeEvent(PASSWORDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PASSWORDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AISbibiDoctor1.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CHAMBERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CHAMBERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CHAMBER";
            tableMapping.ColumnMappings.Add("Номер палаты", "Номер палаты");
            tableMapping.ColumnMappings.Add("ОТДЕЛЕНИЕ", "ОТДЕЛЕНИЕ");
            tableMapping.ColumnMappings.Add("Количество коек", "Количество коек");
            tableMapping.ColumnMappings.Add("Свободно коек", "Свободно коек");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""CHAMBER"" WHERE ((""ID"" = :Original_Номер_палаты) AND ((:IsNull_ОТДЕЛЕНИЕ = 1 AND ""UNIT_ID"" IS NULL) OR (""UNIT_ID"" = :Original_ОТДЕЛЕНИЕ)) AND ((:IsNull_Количество_коек = 1 AND ""QUANTITY"" IS NULL) OR (""QUANTITY"" = :Original_Количество_коек)) AND ((:IsNull_Свободно_коек = 1 AND ""FREE_PLACES"" IS NULL) OR (""FREE_PLACES"" = :Original_Свободно_коек)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_Номер_палаты", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Номер палаты", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ОТДЕЛЕНИЕ", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ОТДЕЛЕНИЕ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ОТДЕЛЕНИЕ", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ОТДЕЛЕНИЕ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_Количество_коек", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "Количество коек", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_Количество_коек", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Количество коек", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_Свободно_коек", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "Свободно коек", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_Свободно_коек", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Свободно коек", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"CHAMBER\" (\"ID\", \"UNIT_ID\", \"QUANTITY\", \"FREE_PLACES\") VALUES (:Номер" +
                "_палаты, :ОТДЕЛЕНИЕ, :Количество_коек, :Свободно_коек)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Номер_палаты", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Номер палаты", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ОТДЕЛЕНИЕ", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ОТДЕЛЕНИЕ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Количество_коек", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Количество коек", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Свободно_коек", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Свободно коек", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""CHAMBER"" SET ""ID"" = :Номер_палаты, ""UNIT_ID"" = :ОТДЕЛЕНИЕ, ""QUANTITY"" = :Количество_коек, ""FREE_PLACES"" = :Свободно_коек WHERE ((""ID"" = :Original_Номер_палаты) AND ((:IsNull_ОТДЕЛЕНИЕ = 1 AND ""UNIT_ID"" IS NULL) OR (""UNIT_ID"" = :Original_ОТДЕЛЕНИЕ)) AND ((:IsNull_Количество_коек = 1 AND ""QUANTITY"" IS NULL) OR (""QUANTITY"" = :Original_Количество_коек)) AND ((:IsNull_Свободно_коек = 1 AND ""FREE_PLACES"" IS NULL) OR (""FREE_PLACES"" = :Original_Свободно_коек)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Номер_палаты", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Номер палаты", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ОТДЕЛЕНИЕ", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ОТДЕЛЕНИЕ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Количество_коек", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Количество коек", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Свободно_коек", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Свободно коек", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_Номер_палаты", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Номер палаты", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ОТДЕЛЕНИЕ", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ОТДЕЛЕНИЕ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ОТДЕЛЕНИЕ", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ОТДЕЛЕНИЕ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_Количество_коек", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "Количество коек", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_Количество_коек", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Количество коек", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_Свободно_коек", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "Свободно коек", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_Свободно_коек", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Свободно коек", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID AS \"Номер палаты\", UNIT_ID AS Отделение, QUANTITY AS \"Количество" +
                " коек\", FREE_PLACES AS \"Свободно коек\"\r\nFROM            CHAMBER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.CHAMBERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.CHAMBERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.CHAMBERDataTable dataTable = new DataSet1.CHAMBERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.CHAMBERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "CHAMBER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_Номер_палаты, decimal Original_ОТДЕЛЕНИЕ, decimal Original_Количество_коек, decimal Original_Свободно_коек) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_Номер_палаты));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_ОТДЕЛЕНИЕ));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_Количество_коек));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Свободно_коек));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal Номер_палаты, decimal ОТДЕЛЕНИЕ, decimal Количество_коек, decimal Свободно_коек) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(Номер_палаты));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(ОТДЕЛЕНИЕ));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Количество_коек));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Свободно_коек));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Номер_палаты, decimal ОТДЕЛЕНИЕ, decimal Количество_коек, decimal Свободно_коек, decimal Original_Номер_палаты, decimal Original_ОТДЕЛЕНИЕ, decimal Original_Количество_коек, decimal Original_Свободно_коек) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(Номер_палаты));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(ОТДЕЛЕНИЕ));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Количество_коек));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Свободно_коек));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_Номер_палаты));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_ОТДЕЛЕНИЕ));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_Количество_коек));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_Свободно_коек));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ОТДЕЛЕНИЕ, decimal Количество_коек, decimal Свободно_коек, decimal Original_Номер_палаты, decimal Original_ОТДЕЛЕНИЕ, decimal Original_Количество_коек, decimal Original_Свободно_коек) {
            return this.Update(Original_Номер_палаты, ОТДЕЛЕНИЕ, Количество_коек, Свободно_коек, Original_Номер_палаты, Original_ОТДЕЛЕНИЕ, Original_Количество_коек, Original_Свободно_коек);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DOCTORTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DOCTORTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DOCTOR";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("SURNAME", "SURNAME");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            tableMapping.ColumnMappings.Add("OTCHESTVO", "OTCHESTVO");
            tableMapping.ColumnMappings.Add("SPECIALTY_ID", "SPECIALTY_ID");
            tableMapping.ColumnMappings.Add("UNIT_ID", "UNIT_ID");
            tableMapping.ColumnMappings.Add("POST_ID", "POST_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""BIBI"".""DOCTOR"" WHERE ((""ID"" = :Original_ID) AND ((:IsNull_SURNAME = 1 AND ""SURNAME"" IS NULL) OR (""SURNAME"" = :Original_SURNAME)) AND ((:IsNull_NAME = 1 AND ""NAME"" IS NULL) OR (""NAME"" = :Original_NAME)) AND ((:IsNull_OTCHESTVO = 1 AND ""OTCHESTVO"" IS NULL) OR (""OTCHESTVO"" = :Original_OTCHESTVO)) AND ((:IsNull_SPECIALTY_ID = 1 AND ""SPECIALTY_ID"" IS NULL) OR (""SPECIALTY_ID"" = :Original_SPECIALTY_ID)) AND ((:IsNull_UNIT_ID = 1 AND ""UNIT_ID"" IS NULL) OR (""UNIT_ID"" = :Original_UNIT_ID)) AND ((:IsNull_POST_ID = 1 AND ""POST_ID"" IS NULL) OR (""POST_ID"" = :Original_POST_ID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SURNAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SURNAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SURNAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SURNAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_OTCHESTVO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "OTCHESTVO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_OTCHESTVO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "OTCHESTVO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SPECIALTY_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SPECIALTY_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SPECIALTY_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SPECIALTY_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_UNIT_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "UNIT_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UNIT_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "UNIT_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_POST_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "POST_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POST_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POST_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"BIBI\".\"DOCTOR\" (\"ID\", \"SURNAME\", \"NAME\", \"OTCHESTVO\", \"SPECIALTY_ID\"" +
                ", \"UNIT_ID\", \"POST_ID\") VALUES (:ID, :SURNAME, :NAME, :OTCHESTVO, :SPECIALTY_ID," +
                " :UNIT_ID, :POST_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SURNAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SURNAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("OTCHESTVO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "OTCHESTVO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SPECIALTY_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SPECIALTY_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UNIT_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "UNIT_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POST_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POST_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""BIBI"".""DOCTOR"" SET ""ID"" = :ID, ""SURNAME"" = :SURNAME, ""NAME"" = :NAME, ""OTCHESTVO"" = :OTCHESTVO, ""SPECIALTY_ID"" = :SPECIALTY_ID, ""UNIT_ID"" = :UNIT_ID, ""POST_ID"" = :POST_ID WHERE ((""ID"" = :Original_ID) AND ((:IsNull_SURNAME = 1 AND ""SURNAME"" IS NULL) OR (""SURNAME"" = :Original_SURNAME)) AND ((:IsNull_NAME = 1 AND ""NAME"" IS NULL) OR (""NAME"" = :Original_NAME)) AND ((:IsNull_OTCHESTVO = 1 AND ""OTCHESTVO"" IS NULL) OR (""OTCHESTVO"" = :Original_OTCHESTVO)) AND ((:IsNull_SPECIALTY_ID = 1 AND ""SPECIALTY_ID"" IS NULL) OR (""SPECIALTY_ID"" = :Original_SPECIALTY_ID)) AND ((:IsNull_UNIT_ID = 1 AND ""UNIT_ID"" IS NULL) OR (""UNIT_ID"" = :Original_UNIT_ID)) AND ((:IsNull_POST_ID = 1 AND ""POST_ID"" IS NULL) OR (""POST_ID"" = :Original_POST_ID)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SURNAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SURNAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("OTCHESTVO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "OTCHESTVO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SPECIALTY_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SPECIALTY_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UNIT_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "UNIT_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POST_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POST_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SURNAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SURNAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SURNAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SURNAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_OTCHESTVO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "OTCHESTVO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_OTCHESTVO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "OTCHESTVO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SPECIALTY_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SPECIALTY_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SPECIALTY_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SPECIALTY_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_UNIT_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "UNIT_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UNIT_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "UNIT_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_POST_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "POST_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POST_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POST_ID", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, SURNAME, NAME, OTCHESTVO, SPECIALTY_ID, UNIT_ID, POST_ID FROM BIBI.DOC" +
                "TOR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.DOCTORDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.DOCTORDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.DOCTORDataTable dataTable = new DataSet1.DOCTORDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.DOCTORDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "DOCTOR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, string Original_SURNAME, string Original_NAME, string Original_OTCHESTVO, global::System.Nullable<decimal> Original_SPECIALTY_ID, global::System.Nullable<decimal> Original_UNIT_ID, global::System.Nullable<decimal> Original_POST_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            if ((Original_SURNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SURNAME));
            }
            if ((Original_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_NAME));
            }
            if ((Original_OTCHESTVO == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_OTCHESTVO));
            }
            if ((Original_SPECIALTY_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_SPECIALTY_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_UNIT_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_UNIT_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_POST_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_POST_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID, string SURNAME, string NAME, string OTCHESTVO, global::System.Nullable<decimal> SPECIALTY_ID, global::System.Nullable<decimal> UNIT_ID, global::System.Nullable<decimal> POST_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID));
            if ((SURNAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SURNAME));
            }
            if ((NAME == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(NAME));
            }
            if ((OTCHESTVO == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(OTCHESTVO));
            }
            if ((SPECIALTY_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(SPECIALTY_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((UNIT_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(UNIT_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((POST_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(POST_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ID, string SURNAME, string NAME, string OTCHESTVO, global::System.Nullable<decimal> SPECIALTY_ID, global::System.Nullable<decimal> UNIT_ID, global::System.Nullable<decimal> POST_ID, decimal Original_ID, string Original_SURNAME, string Original_NAME, string Original_OTCHESTVO, global::System.Nullable<decimal> Original_SPECIALTY_ID, global::System.Nullable<decimal> Original_UNIT_ID, global::System.Nullable<decimal> Original_POST_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID));
            if ((SURNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SURNAME));
            }
            if ((NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(NAME));
            }
            if ((OTCHESTVO == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(OTCHESTVO));
            }
            if ((SPECIALTY_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(SPECIALTY_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((UNIT_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(UNIT_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((POST_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(POST_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_ID));
            if ((Original_SURNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_SURNAME));
            }
            if ((Original_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_NAME));
            }
            if ((Original_OTCHESTVO == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_OTCHESTVO));
            }
            if ((Original_SPECIALTY_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_SPECIALTY_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_UNIT_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_UNIT_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_POST_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_POST_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SURNAME, string NAME, string OTCHESTVO, global::System.Nullable<decimal> SPECIALTY_ID, global::System.Nullable<decimal> UNIT_ID, global::System.Nullable<decimal> POST_ID, decimal Original_ID, string Original_SURNAME, string Original_NAME, string Original_OTCHESTVO, global::System.Nullable<decimal> Original_SPECIALTY_ID, global::System.Nullable<decimal> Original_UNIT_ID, global::System.Nullable<decimal> Original_POST_ID) {
            return this.Update(Original_ID, SURNAME, NAME, OTCHESTVO, SPECIALTY_ID, UNIT_ID, POST_ID, Original_ID, Original_SURNAME, Original_NAME, Original_OTCHESTVO, Original_SPECIALTY_ID, Original_UNIT_ID, Original_POST_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MEDICAL_HISTIRYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MEDICAL_HISTIRYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MEDICAL_HISTIRY";
            tableMapping.ColumnMappings.Add("PRIEM_ID", "PRIEM_ID");
            tableMapping.ColumnMappings.Add("DATE_VIPISKI", "DATE_VIPISKI");
            tableMapping.ColumnMappings.Add("LECH_DOCTOR_ID", "LECH_DOCTOR_ID");
            tableMapping.ColumnMappings.Add("COMPLAINS", "COMPLAINS");
            tableMapping.ColumnMappings.Add("OSMOTR", "OSMOTR");
            tableMapping.ColumnMappings.Add("DIAGNISIS", "DIAGNISIS");
            tableMapping.ColumnMappings.Add("MEDICATION", "MEDICATION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""BIBI"".""MEDICAL_HISTIRY"" WHERE ((""PRIEM_ID"" = :Original_PRIEM_ID) AND ((:IsNull_DATE_VIPISKI = 1 AND ""DATE_VIPISKI"" IS NULL) OR (""DATE_VIPISKI"" = :Original_DATE_VIPISKI)) AND ((:IsNull_LECH_DOCTOR_ID = 1 AND ""LECH_DOCTOR_ID"" IS NULL) OR (""LECH_DOCTOR_ID"" = :Original_LECH_DOCTOR_ID)) AND ((:IsNull_COMPLAINS = 1 AND ""COMPLAINS"" IS NULL) OR (""COMPLAINS"" = :Original_COMPLAINS)) AND ((:IsNull_OSMOTR = 1 AND ""OSMOTR"" IS NULL) OR (""OSMOTR"" = :Original_OSMOTR)) AND ((:IsNull_DIAGNISIS = 1 AND ""DIAGNISIS"" IS NULL) OR (""DIAGNISIS"" = :Original_DIAGNISIS)) AND ((:IsNull_MEDICATION = 1 AND ""MEDICATION"" IS NULL) OR (""MEDICATION"" = :Original_MEDICATION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PRIEM_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PRIEM_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DATE_VIPISKI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DATE_VIPISKI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DATE_VIPISKI", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATE_VIPISKI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LECH_DOCTOR_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LECH_DOCTOR_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LECH_DOCTOR_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LECH_DOCTOR_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_COMPLAINS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "COMPLAINS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COMPLAINS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPLAINS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_OSMOTR", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "OSMOTR", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_OSMOTR", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "OSMOTR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DIAGNISIS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DIAGNISIS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DIAGNISIS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DIAGNISIS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MEDICATION", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MEDICATION", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MEDICATION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MEDICATION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"BIBI\".\"MEDICAL_HISTIRY\" (\"PRIEM_ID\", \"DATE_VIPISKI\", \"LECH_DOCTOR_ID" +
                "\", \"COMPLAINS\", \"OSMOTR\", \"DIAGNISIS\", \"MEDICATION\") VALUES (:PRIEM_ID, :DATE_VI" +
                "PISKI, :LECH_DOCTOR_ID, :COMPLAINS, :OSMOTR, :DIAGNISIS, :MEDICATION)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PRIEM_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PRIEM_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATE_VIPISKI", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATE_VIPISKI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LECH_DOCTOR_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LECH_DOCTOR_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPLAINS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPLAINS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("OSMOTR", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "OSMOTR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DIAGNISIS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DIAGNISIS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MEDICATION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MEDICATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""BIBI"".""MEDICAL_HISTIRY"" SET ""PRIEM_ID"" = :PRIEM_ID, ""DATE_VIPISKI"" = :DATE_VIPISKI, ""LECH_DOCTOR_ID"" = :LECH_DOCTOR_ID, ""COMPLAINS"" = :COMPLAINS, ""OSMOTR"" = :OSMOTR, ""DIAGNISIS"" = :DIAGNISIS, ""MEDICATION"" = :MEDICATION WHERE ((""PRIEM_ID"" = :Original_PRIEM_ID) AND ((:IsNull_DATE_VIPISKI = 1 AND ""DATE_VIPISKI"" IS NULL) OR (""DATE_VIPISKI"" = :Original_DATE_VIPISKI)) AND ((:IsNull_LECH_DOCTOR_ID = 1 AND ""LECH_DOCTOR_ID"" IS NULL) OR (""LECH_DOCTOR_ID"" = :Original_LECH_DOCTOR_ID)) AND ((:IsNull_COMPLAINS = 1 AND ""COMPLAINS"" IS NULL) OR (""COMPLAINS"" = :Original_COMPLAINS)) AND ((:IsNull_OSMOTR = 1 AND ""OSMOTR"" IS NULL) OR (""OSMOTR"" = :Original_OSMOTR)) AND ((:IsNull_DIAGNISIS = 1 AND ""DIAGNISIS"" IS NULL) OR (""DIAGNISIS"" = :Original_DIAGNISIS)) AND ((:IsNull_MEDICATION = 1 AND ""MEDICATION"" IS NULL) OR (""MEDICATION"" = :Original_MEDICATION)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PRIEM_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PRIEM_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATE_VIPISKI", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATE_VIPISKI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LECH_DOCTOR_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LECH_DOCTOR_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPLAINS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPLAINS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("OSMOTR", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "OSMOTR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DIAGNISIS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DIAGNISIS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MEDICATION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MEDICATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PRIEM_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PRIEM_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DATE_VIPISKI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DATE_VIPISKI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DATE_VIPISKI", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATE_VIPISKI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LECH_DOCTOR_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LECH_DOCTOR_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LECH_DOCTOR_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LECH_DOCTOR_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_COMPLAINS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "COMPLAINS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COMPLAINS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPLAINS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_OSMOTR", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "OSMOTR", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_OSMOTR", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "OSMOTR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DIAGNISIS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DIAGNISIS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DIAGNISIS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DIAGNISIS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MEDICATION", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MEDICATION", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MEDICATION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MEDICATION", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PRIEM_ID, DATE_VIPISKI, LECH_DOCTOR_ID, COMPLAINS, OSMOTR, DIAGNISIS, MEDI" +
                "CATION FROM BIBI.MEDICAL_HISTIRY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.MEDICAL_HISTIRYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.MEDICAL_HISTIRYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.MEDICAL_HISTIRYDataTable dataTable = new DataSet1.MEDICAL_HISTIRYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.MEDICAL_HISTIRYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "MEDICAL_HISTIRY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PRIEM_ID, global::System.Nullable<global::System.DateTime> Original_DATE_VIPISKI, global::System.Nullable<decimal> Original_LECH_DOCTOR_ID, string Original_COMPLAINS, string Original_OSMOTR, string Original_DIAGNISIS, string Original_MEDICATION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PRIEM_ID));
            if ((Original_DATE_VIPISKI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_DATE_VIPISKI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_LECH_DOCTOR_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_LECH_DOCTOR_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_COMPLAINS == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_COMPLAINS));
            }
            if ((Original_OSMOTR == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_OSMOTR));
            }
            if ((Original_DIAGNISIS == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_DIAGNISIS));
            }
            if ((Original_MEDICATION == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_MEDICATION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal PRIEM_ID, global::System.Nullable<global::System.DateTime> DATE_VIPISKI, global::System.Nullable<decimal> LECH_DOCTOR_ID, string COMPLAINS, string OSMOTR, string DIAGNISIS, string MEDICATION) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(PRIEM_ID));
            if ((DATE_VIPISKI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DATE_VIPISKI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((LECH_DOCTOR_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(LECH_DOCTOR_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((COMPLAINS == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(COMPLAINS));
            }
            if ((OSMOTR == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(OSMOTR));
            }
            if ((DIAGNISIS == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DIAGNISIS));
            }
            if ((MEDICATION == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(MEDICATION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal PRIEM_ID, global::System.Nullable<global::System.DateTime> DATE_VIPISKI, global::System.Nullable<decimal> LECH_DOCTOR_ID, string COMPLAINS, string OSMOTR, string DIAGNISIS, string MEDICATION, decimal Original_PRIEM_ID, global::System.Nullable<global::System.DateTime> Original_DATE_VIPISKI, global::System.Nullable<decimal> Original_LECH_DOCTOR_ID, string Original_COMPLAINS, string Original_OSMOTR, string Original_DIAGNISIS, string Original_MEDICATION) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(PRIEM_ID));
            if ((DATE_VIPISKI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DATE_VIPISKI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((LECH_DOCTOR_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(LECH_DOCTOR_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((COMPLAINS == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(COMPLAINS));
            }
            if ((OSMOTR == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(OSMOTR));
            }
            if ((DIAGNISIS == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DIAGNISIS));
            }
            if ((MEDICATION == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(MEDICATION));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_PRIEM_ID));
            if ((Original_DATE_VIPISKI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_DATE_VIPISKI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_LECH_DOCTOR_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_LECH_DOCTOR_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_COMPLAINS == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_COMPLAINS));
            }
            if ((Original_OSMOTR == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_OSMOTR));
            }
            if ((Original_DIAGNISIS == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_DIAGNISIS));
            }
            if ((Original_MEDICATION == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_MEDICATION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> DATE_VIPISKI, global::System.Nullable<decimal> LECH_DOCTOR_ID, string COMPLAINS, string OSMOTR, string DIAGNISIS, string MEDICATION, decimal Original_PRIEM_ID, global::System.Nullable<global::System.DateTime> Original_DATE_VIPISKI, global::System.Nullable<decimal> Original_LECH_DOCTOR_ID, string Original_COMPLAINS, string Original_OSMOTR, string Original_DIAGNISIS, string Original_MEDICATION) {
            return this.Update(Original_PRIEM_ID, DATE_VIPISKI, LECH_DOCTOR_ID, COMPLAINS, OSMOTR, DIAGNISIS, MEDICATION, Original_PRIEM_ID, Original_DATE_VIPISKI, Original_LECH_DOCTOR_ID, Original_COMPLAINS, Original_OSMOTR, Original_DIAGNISIS, Original_MEDICATION);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PACIENTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PACIENTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PACIENT";
            tableMapping.ColumnMappings.Add("ФАМИЛИЯ", "ФАМИЛИЯ");
            tableMapping.ColumnMappings.Add("ИМЯ", "ИМЯ");
            tableMapping.ColumnMappings.Add("ОТЧЕСТВО", "ОТЧЕСТВО");
            tableMapping.ColumnMappings.Add("Номер карты", "Номер карты");
            tableMapping.ColumnMappings.Add("Номер полиса", "Номер полиса");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"PACIENT\" WHERE ((\"ID\" = :Original_Номер_карты))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_Номер_карты", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Номер карты", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"PACIENT\" (\"ID\", \"SURNAME\", \"NAME\", \"OTCHESTVO\", \"POLICY\") VALUES (:Н" +
                "омер_карты, :ФАМИЛИЯ, :ИМЯ, :ОТЧЕСТВО, :Номер_полиса)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Номер_карты", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Номер карты", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ФАМИЛИЯ", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ФАМИЛИЯ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ИМЯ", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ИМЯ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ОТЧЕСТВО", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ОТЧЕСТВО", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Номер_полиса", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Номер полиса", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"PACIENT\" SET \"ID\" = :Номер_карты, \"SURNAME\" = :ФАМИЛИЯ, \"NAME\" = :ИМЯ, \"O" +
                "TCHESTVO\" = :ОТЧЕСТВО, \"POLICY\" = :Номер_полиса WHERE ((\"ID\" = :Original_Номер_к" +
                "арты))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Номер_карты", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Номер карты", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ФАМИЛИЯ", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ФАМИЛИЯ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ИМЯ", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ИМЯ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ОТЧЕСТВО", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ОТЧЕСТВО", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Номер_полиса", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Номер полиса", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_Номер_карты", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "Номер карты", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[4];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID AS \"Номер карты\", SURNAME AS Фамилия, NAME AS Имя, OTCHESTVO AS " +
                "Отчество, POLICY AS \"Номер полиса\"\r\nFROM            PACIENT\r\nORDER BY \"Номер кар" +
                "ты\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT NAME AS Имя, OTCHESTVO AS Отчество, SURNAME AS Фамилия FROM PACIENT ORDER " +
                "BY ID";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "INSERT INTO \"PACIENT\" ( \"SURNAME\", \"NAME\", \"OTCHESTVO\", \"DATE_OF_BIRTH\") VALUES (" +
                ":ФАМИЛИЯ, :ИМЯ, :ОТЧЕСТВО, :Дата_рождения)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ФАМИЛИЯ", global::System.Data.OracleClient.OracleType.VarChar, 25, global::System.Data.ParameterDirection.Input, "SURNAME", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ИМЯ", global::System.Data.OracleClient.OracleType.VarChar, 25, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ОТЧЕСТВО", global::System.Data.OracleClient.OracleType.VarChar, 50, global::System.Data.ParameterDirection.Input, "OTCHESTVO", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Дата_рождения", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "DATE_OF_BIRTH", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "UPDATE       PACIENT\r\nSET                SURNAME = :ФАМИЛИЯ, NAME = :ИМЯ, OTCHEST" +
                "VO = :ОТЧЕСТВО, POLICY = :Номер_полиса";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ФАМИЛИЯ", global::System.Data.OracleClient.OracleType.VarChar, 25, global::System.Data.ParameterDirection.Input, "SURNAME", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ИМЯ", global::System.Data.OracleClient.OracleType.VarChar, 25, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ОТЧЕСТВО", global::System.Data.OracleClient.OracleType.VarChar, 50, global::System.Data.ParameterDirection.Input, "OTCHESTVO", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Номер_полиса", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "POLICY", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.PACIENTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.PACIENTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.PACIENTDataTable dataTable = new DataSet1.PACIENTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(DataSet1.PACIENTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.PACIENTDataTable GetDataBy() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            DataSet1.PACIENTDataTable dataTable = new DataSet1.PACIENTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.PACIENTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "PACIENT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQuery(string ФАМИЛИЯ, string ИМЯ, string ОТЧЕСТВО, global::System.Nullable<global::System.DateTime> Дата_рождения) {
            global::System.Data.OracleClient.OracleCommand command = this.CommandCollection[2];
            if ((ФАМИЛИЯ == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(ФАМИЛИЯ));
            }
            if ((ИМЯ == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(ИМЯ));
            }
            if ((ОТЧЕСТВО == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(ОТЧЕСТВО));
            }
            if ((Дата_рождения.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(Дата_рождения.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuery(string ФАМИЛИЯ, string ИМЯ, string ОТЧЕСТВО, global::System.Nullable<decimal> Номер_полиса) {
            global::System.Data.OracleClient.OracleCommand command = this.CommandCollection[3];
            if ((ФАМИЛИЯ == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(ФАМИЛИЯ));
            }
            if ((ИМЯ == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(ИМЯ));
            }
            if ((ОТЧЕСТВО == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(ОТЧЕСТВО));
            }
            if ((Номер_полиса.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(Номер_полиса.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class POSTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public POSTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "POST";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"BIBI\".\"POST\" WHERE ((\"ID\" = :Original_ID) AND ((:IsNull_NAME = 1 AND" +
                " \"NAME\" IS NULL) OR (\"NAME\" = :Original_NAME)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"BIBI\".\"POST\" (\"ID\", \"NAME\") VALUES (:ID, :NAME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"BIBI\".\"POST\" SET \"ID\" = :ID, \"NAME\" = :NAME WHERE ((\"ID\" = :Original_ID) " +
                "AND ((:IsNull_NAME = 1 AND \"NAME\" IS NULL) OR (\"NAME\" = :Original_NAME)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, NAME FROM BIBI.POST";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.POSTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.POSTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.POSTDataTable dataTable = new DataSet1.POSTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.POSTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "POST");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, string Original_NAME) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            if ((Original_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID, string NAME) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID));
            if ((NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ID, string NAME, decimal Original_ID, string Original_NAME) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID));
            if ((NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_ID));
            if ((Original_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NAME, decimal Original_ID, string Original_NAME) {
            return this.Update(Original_ID, NAME, Original_ID, Original_NAME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PRIEMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PRIEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PRIEM";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DATA", "DATA");
            tableMapping.ColumnMappings.Add("PACIENT_ID", "PACIENT_ID");
            tableMapping.ColumnMappings.Add("DOCTOR_ID", "DOCTOR_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""BIBI"".""PRIEM"" WHERE ((""ID"" = :Original_ID) AND ((:IsNull_DATA = 1 AND ""DATA"" IS NULL) OR (""DATA"" = :Original_DATA)) AND ((:IsNull_PACIENT_ID = 1 AND ""PACIENT_ID"" IS NULL) OR (""PACIENT_ID"" = :Original_PACIENT_ID)) AND ((:IsNull_DOCTOR_ID = 1 AND ""DOCTOR_ID"" IS NULL) OR (""DOCTOR_ID"" = :Original_DOCTOR_ID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DATA", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DATA", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DATA", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATA", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_PACIENT_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "PACIENT_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PACIENT_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PACIENT_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DOCTOR_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DOCTOR_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DOCTOR_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DOCTOR_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"BIBI\".\"PRIEM\" (\"ID\", \"DATA\", \"PACIENT_ID\", \"DOCTOR_ID\") VALUES (:ID," +
                " :DATA, :PACIENT_ID, :DOCTOR_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATA", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PACIENT_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PACIENT_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DOCTOR_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DOCTOR_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""BIBI"".""PRIEM"" SET ""ID"" = :ID, ""DATA"" = :DATA, ""PACIENT_ID"" = :PACIENT_ID, ""DOCTOR_ID"" = :DOCTOR_ID WHERE ((""ID"" = :Original_ID) AND ((:IsNull_DATA = 1 AND ""DATA"" IS NULL) OR (""DATA"" = :Original_DATA)) AND ((:IsNull_PACIENT_ID = 1 AND ""PACIENT_ID"" IS NULL) OR (""PACIENT_ID"" = :Original_PACIENT_ID)) AND ((:IsNull_DOCTOR_ID = 1 AND ""DOCTOR_ID"" IS NULL) OR (""DOCTOR_ID"" = :Original_DOCTOR_ID)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATA", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PACIENT_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PACIENT_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DOCTOR_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DOCTOR_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DATA", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DATA", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DATA", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATA", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_PACIENT_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "PACIENT_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PACIENT_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PACIENT_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DOCTOR_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DOCTOR_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DOCTOR_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DOCTOR_ID", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, DATA, PACIENT_ID, DOCTOR_ID FROM BIBI.PRIEM";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.PRIEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.PRIEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.PRIEMDataTable dataTable = new DataSet1.PRIEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.PRIEMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "PRIEM");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, global::System.Nullable<global::System.DateTime> Original_DATA, global::System.Nullable<decimal> Original_PACIENT_ID, global::System.Nullable<decimal> Original_DOCTOR_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            if ((Original_DATA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_DATA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_PACIENT_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_PACIENT_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_DOCTOR_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_DOCTOR_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID, global::System.Nullable<global::System.DateTime> DATA, global::System.Nullable<decimal> PACIENT_ID, global::System.Nullable<decimal> DOCTOR_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID));
            if ((DATA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DATA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PACIENT_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(PACIENT_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((DOCTOR_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(DOCTOR_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ID, global::System.Nullable<global::System.DateTime> DATA, global::System.Nullable<decimal> PACIENT_ID, global::System.Nullable<decimal> DOCTOR_ID, decimal Original_ID, global::System.Nullable<global::System.DateTime> Original_DATA, global::System.Nullable<decimal> Original_PACIENT_ID, global::System.Nullable<decimal> Original_DOCTOR_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID));
            if ((DATA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DATA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PACIENT_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(PACIENT_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((DOCTOR_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(DOCTOR_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_ID));
            if ((Original_DATA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_DATA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_PACIENT_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_PACIENT_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_DOCTOR_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_DOCTOR_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> DATA, global::System.Nullable<decimal> PACIENT_ID, global::System.Nullable<decimal> DOCTOR_ID, decimal Original_ID, global::System.Nullable<global::System.DateTime> Original_DATA, global::System.Nullable<decimal> Original_PACIENT_ID, global::System.Nullable<decimal> Original_DOCTOR_ID) {
            return this.Update(Original_ID, DATA, PACIENT_ID, DOCTOR_ID, Original_ID, Original_DATA, Original_PACIENT_ID, Original_DOCTOR_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SPECIALITYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SPECIALITYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SPECIALITY";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"BIBI\".\"SPECIALITY\" WHERE ((\"ID\" = :Original_ID) AND ((:IsNull_NAME =" +
                " 1 AND \"NAME\" IS NULL) OR (\"NAME\" = :Original_NAME)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"BIBI\".\"SPECIALITY\" (\"ID\", \"NAME\") VALUES (:ID, :NAME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"BIBI\".\"SPECIALITY\" SET \"ID\" = :ID, \"NAME\" = :NAME WHERE ((\"ID\" = :Origina" +
                "l_ID) AND ((:IsNull_NAME = 1 AND \"NAME\" IS NULL) OR (\"NAME\" = :Original_NAME)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, NAME FROM BIBI.SPECIALITY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.SPECIALITYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.SPECIALITYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.SPECIALITYDataTable dataTable = new DataSet1.SPECIALITYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.SPECIALITYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "SPECIALITY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, string Original_NAME) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            if ((Original_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID, string NAME) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID));
            if ((NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ID, string NAME, decimal Original_ID, string Original_NAME) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID));
            if ((NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_ID));
            if ((Original_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NAME, decimal Original_ID, string Original_NAME) {
            return this.Update(Original_ID, NAME, Original_ID, Original_NAME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UNITTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UNITTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UNIT";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            tableMapping.ColumnMappings.Add("MANAGER_ID", "MANAGER_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"BIBI\".\"UNIT\" WHERE ((\"ID\" = :Original_ID) AND ((:IsNull_NAME = 1 AND" +
                " \"NAME\" IS NULL) OR (\"NAME\" = :Original_NAME)) AND ((:IsNull_MANAGER_ID = 1 AND " +
                "\"MANAGER_ID\" IS NULL) OR (\"MANAGER_ID\" = :Original_MANAGER_ID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MANAGER_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MANAGER_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MANAGER_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MANAGER_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"BIBI\".\"UNIT\" (\"ID\", \"NAME\", \"MANAGER_ID\") VALUES (:ID, :NAME, :MANAG" +
                "ER_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MANAGER_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MANAGER_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""BIBI"".""UNIT"" SET ""ID"" = :ID, ""NAME"" = :NAME, ""MANAGER_ID"" = :MANAGER_ID WHERE ((""ID"" = :Original_ID) AND ((:IsNull_NAME = 1 AND ""NAME"" IS NULL) OR (""NAME"" = :Original_NAME)) AND ((:IsNull_MANAGER_ID = 1 AND ""MANAGER_ID"" IS NULL) OR (""MANAGER_ID"" = :Original_MANAGER_ID)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MANAGER_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MANAGER_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MANAGER_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MANAGER_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MANAGER_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MANAGER_ID", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, NAME, MANAGER_ID FROM BIBI.UNIT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.UNITDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.UNITDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.UNITDataTable dataTable = new DataSet1.UNITDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.UNITDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "UNIT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, string Original_NAME, global::System.Nullable<decimal> Original_MANAGER_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            if ((Original_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NAME));
            }
            if ((Original_MANAGER_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_MANAGER_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID, string NAME, global::System.Nullable<decimal> MANAGER_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID));
            if ((NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAME));
            }
            if ((MANAGER_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(MANAGER_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ID, string NAME, global::System.Nullable<decimal> MANAGER_ID, decimal Original_ID, string Original_NAME, global::System.Nullable<decimal> Original_MANAGER_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID));
            if ((NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAME));
            }
            if ((MANAGER_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(MANAGER_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_ID));
            if ((Original_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_NAME));
            }
            if ((Original_MANAGER_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_MANAGER_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NAME, global::System.Nullable<decimal> MANAGER_ID, decimal Original_ID, string Original_NAME, global::System.Nullable<decimal> Original_MANAGER_ID) {
            return this.Update(Original_ID, NAME, MANAGER_ID, Original_ID, Original_NAME, Original_MANAGER_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_DUAL100TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_DUAL100TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_DUAL100";
            tableMapping.ColumnMappings.Add("I", "I");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"FLOWS_020100\".\"WWV_FLOW_DUAL100\" (\"I\") VALUES (:I)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("I", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "I", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT I FROM FLOWS_020100.WWV_FLOW_DUAL100";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_DUAL100DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_DUAL100DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_DUAL100DataTable dataTable = new DataSet1.WWV_FLOW_DUAL100DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.WWV_FLOW_DUAL100DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "WWV_FLOW_DUAL100");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> I) {
            if ((I.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(I.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_FIELD_TEMPLATESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_FIELD_TEMPLATESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_FIELD_TEMPLATES";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("FLOW_ID", "FLOW_ID");
            tableMapping.ColumnMappings.Add("SECURITY_GROUP_ID", "SECURITY_GROUP_ID");
            tableMapping.ColumnMappings.Add("THEME_ID", "THEME_ID");
            tableMapping.ColumnMappings.Add("THEME_CLASS_ID", "THEME_CLASS_ID");
            tableMapping.ColumnMappings.Add("TEMPLATE_NAME", "TEMPLATE_NAME");
            tableMapping.ColumnMappings.Add("TEMPLATE_BODY1", "TEMPLATE_BODY1");
            tableMapping.ColumnMappings.Add("TEMPLATE_BODY2", "TEMPLATE_BODY2");
            tableMapping.ColumnMappings.Add("REFERENCE_ID", "REFERENCE_ID");
            tableMapping.ColumnMappings.Add("ON_ERROR_BEFORE_LABEL", "ON_ERROR_BEFORE_LABEL");
            tableMapping.ColumnMappings.Add("ON_ERROR_AFTER_LABEL", "ON_ERROR_AFTER_LABEL");
            tableMapping.ColumnMappings.Add("LAST_UPDATED_ON", "LAST_UPDATED_ON");
            tableMapping.ColumnMappings.Add("LAST_UPDATED_BY", "LAST_UPDATED_BY");
            tableMapping.ColumnMappings.Add("TRANSLATE_THIS_TEMPLATE", "TRANSLATE_THIS_TEMPLATE");
            tableMapping.ColumnMappings.Add("TEMPLATE_COMMENT", "TEMPLATE_COMMENT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""FLOWS_020100"".""WWV_FLOW_FIELD_TEMPLATES"" WHERE ((""ID"" = :Original_ID) AND (""FLOW_ID"" = :Original_FLOW_ID) AND (""SECURITY_GROUP_ID"" = :Original_SECURITY_GROUP_ID) AND ((:IsNull_THEME_ID = 1 AND ""THEME_ID"" IS NULL) OR (""THEME_ID"" = :Original_THEME_ID)) AND ((:IsNull_THEME_CLASS_ID = 1 AND ""THEME_CLASS_ID"" IS NULL) OR (""THEME_CLASS_ID"" = :Original_THEME_CLASS_ID)) AND (""TEMPLATE_NAME"" = :Original_TEMPLATE_NAME) AND ((:IsNull_TEMPLATE_BODY1 = 1 AND ""TEMPLATE_BODY1"" IS NULL) OR (""TEMPLATE_BODY1"" = :Original_TEMPLATE_BODY1)) AND ((:IsNull_TEMPLATE_BODY2 = 1 AND ""TEMPLATE_BODY2"" IS NULL) OR (""TEMPLATE_BODY2"" = :Original_TEMPLATE_BODY2)) AND ((:IsNull_REFERENCE_ID = 1 AND ""REFERENCE_ID"" IS NULL) OR (""REFERENCE_ID"" = :Original_REFERENCE_ID)) AND ((:IsNull_ON_ERROR_BEFORE_LABEL = 1 AND ""ON_ERROR_BEFORE_LABEL"" IS NULL) OR (""ON_ERROR_BEFORE_LABEL"" = :Original_ON_ERROR_BEFORE_LABEL)) AND ((:IsNull_ON_ERROR_AFTER_LABEL = 1 AND ""ON_ERROR_AFTER_LABEL"" IS NULL) OR (""ON_ERROR_AFTER_LABEL"" = :Original_ON_ERROR_AFTER_LABEL)) AND ((:IsNull_LAST_UPDATED_ON = 1 AND ""LAST_UPDATED_ON"" IS NULL) OR (""LAST_UPDATED_ON"" = :Original_LAST_UPDATED_ON)) AND ((:IsNull_LAST_UPDATED_BY = 1 AND ""LAST_UPDATED_BY"" IS NULL) OR (""LAST_UPDATED_BY"" = :Original_LAST_UPDATED_BY)) AND ((:p3 = 1 AND ""TRANSLATE_THIS_TEMPLATE"" IS NULL) OR (""TRANSLATE_THIS_TEMPLATE"" = :p2)) AND ((:IsNull_TEMPLATE_COMMENT = 1 AND ""TEMPLATE_COMMENT"" IS NULL) OR (""TEMPLATE_COMMENT"" = :Original_TEMPLATE_COMMENT)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_THEME_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "THEME_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_THEME_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "THEME_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_THEME_CLASS_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "THEME_CLASS_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_THEME_CLASS_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "THEME_CLASS_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TEMPLATE_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TEMPLATE_BODY1", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_BODY1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TEMPLATE_BODY1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_BODY1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TEMPLATE_BODY2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_BODY2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TEMPLATE_BODY2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_BODY2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_REFERENCE_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "REFERENCE_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_REFERENCE_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "REFERENCE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ON_ERROR_BEFORE_LABEL", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ON_ERROR_BEFORE_LABEL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ON_ERROR_BEFORE_LABEL", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ON_ERROR_BEFORE_LABEL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ON_ERROR_AFTER_LABEL", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ON_ERROR_AFTER_LABEL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ON_ERROR_AFTER_LABEL", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ON_ERROR_AFTER_LABEL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("p3", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TRANSLATE_THIS_TEMPLATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("p2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TRANSLATE_THIS_TEMPLATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TEMPLATE_COMMENT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_COMMENT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TEMPLATE_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_COMMENT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""FLOWS_020100"".""WWV_FLOW_FIELD_TEMPLATES"" (""ID"", ""FLOW_ID"", ""SECURITY_GROUP_ID"", ""THEME_ID"", ""THEME_CLASS_ID"", ""TEMPLATE_NAME"", ""TEMPLATE_BODY1"", ""TEMPLATE_BODY2"", ""REFERENCE_ID"", ""ON_ERROR_BEFORE_LABEL"", ""ON_ERROR_AFTER_LABEL"", ""LAST_UPDATED_ON"", ""LAST_UPDATED_BY"", ""TRANSLATE_THIS_TEMPLATE"", ""TEMPLATE_COMMENT"") VALUES (:ID, :FLOW_ID, :SECURITY_GROUP_ID, :THEME_ID, :THEME_CLASS_ID, :TEMPLATE_NAME, :TEMPLATE_BODY1, :TEMPLATE_BODY2, :REFERENCE_ID, :ON_ERROR_BEFORE_LABEL, :ON_ERROR_AFTER_LABEL, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :p1, :TEMPLATE_COMMENT)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("THEME_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "THEME_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("THEME_CLASS_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "THEME_CLASS_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMPLATE_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMPLATE_BODY1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_BODY1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMPLATE_BODY2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_BODY2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REFERENCE_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "REFERENCE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ON_ERROR_BEFORE_LABEL", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ON_ERROR_BEFORE_LABEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ON_ERROR_AFTER_LABEL", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ON_ERROR_AFTER_LABEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("p1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TRANSLATE_THIS_TEMPLATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMPLATE_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_COMMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"FLOWS_020100\".\"WWV_FLOW_FIELD_TEMPLATES\" SET \"ID\" = :ID, \"FLOW_ID\" = :FLO" +
                "W_ID, \"SECURITY_GROUP_ID\" = :SECURITY_GROUP_ID, \"THEME_ID\" = :THEME_ID, \"THEME_C" +
                "LASS_ID\" = :THEME_CLASS_ID, \"TEMPLATE_NAME\" = :TEMPLATE_NAME, \"TEMPLATE_BODY1\" =" +
                " :TEMPLATE_BODY1, \"TEMPLATE_BODY2\" = :TEMPLATE_BODY2, \"REFERENCE_ID\" = :REFERENC" +
                "E_ID, \"ON_ERROR_BEFORE_LABEL\" = :ON_ERROR_BEFORE_LABEL, \"ON_ERROR_AFTER_LABEL\" =" +
                " :ON_ERROR_AFTER_LABEL, \"LAST_UPDATED_ON\" = :LAST_UPDATED_ON, \"LAST_UPDATED_BY\" " +
                "= :LAST_UPDATED_BY, \"TRANSLATE_THIS_TEMPLATE\" = :p1, \"TEMPLATE_COMMENT\" = :TEMPL" +
                "ATE_COMMENT WHERE ((\"ID\" = :Original_ID) AND (\"FLOW_ID\" = :Original_FLOW_ID) AND" +
                " (\"SECURITY_GROUP_ID\" = :Original_SECURITY_GROUP_ID) AND ((:IsNull_THEME_ID = 1 " +
                "AND \"THEME_ID\" IS NULL) OR (\"THEME_ID\" = :Original_THEME_ID)) AND ((:IsNull_THEM" +
                "E_CLASS_ID = 1 AND \"THEME_CLASS_ID\" IS NULL) OR (\"THEME_CLASS_ID\" = :Original_TH" +
                "EME_CLASS_ID)) AND (\"TEMPLATE_NAME\" = :Original_TEMPLATE_NAME) AND ((:IsNull_TEM" +
                "PLATE_BODY1 = 1 AND \"TEMPLATE_BODY1\" IS NULL) OR (\"TEMPLATE_BODY1\" = :Original_T" +
                "EMPLATE_BODY1)) AND ((:IsNull_TEMPLATE_BODY2 = 1 AND \"TEMPLATE_BODY2\" IS NULL) O" +
                "R (\"TEMPLATE_BODY2\" = :Original_TEMPLATE_BODY2)) AND ((:IsNull_REFERENCE_ID = 1 " +
                "AND \"REFERENCE_ID\" IS NULL) OR (\"REFERENCE_ID\" = :Original_REFERENCE_ID)) AND ((" +
                ":IsNull_ON_ERROR_BEFORE_LABEL = 1 AND \"ON_ERROR_BEFORE_LABEL\" IS NULL) OR (\"ON_E" +
                "RROR_BEFORE_LABEL\" = :Original_ON_ERROR_BEFORE_LABEL)) AND ((:IsNull_ON_ERROR_AF" +
                "TER_LABEL = 1 AND \"ON_ERROR_AFTER_LABEL\" IS NULL) OR (\"ON_ERROR_AFTER_LABEL\" = :" +
                "Original_ON_ERROR_AFTER_LABEL)) AND ((:IsNull_LAST_UPDATED_ON = 1 AND \"LAST_UPDA" +
                "TED_ON\" IS NULL) OR (\"LAST_UPDATED_ON\" = :Original_LAST_UPDATED_ON)) AND ((:IsNu" +
                "ll_LAST_UPDATED_BY = 1 AND \"LAST_UPDATED_BY\" IS NULL) OR (\"LAST_UPDATED_BY\" = :O" +
                "riginal_LAST_UPDATED_BY)) AND ((:p3 = 1 AND \"TRANSLATE_THIS_TEMPLATE\" IS NULL) O" +
                "R (\"TRANSLATE_THIS_TEMPLATE\" = :p2)) AND ((:IsNull_TEMPLATE_COMMENT = 1 AND \"TEM" +
                "PLATE_COMMENT\" IS NULL) OR (\"TEMPLATE_COMMENT\" = :Original_TEMPLATE_COMMENT)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("THEME_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "THEME_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("THEME_CLASS_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "THEME_CLASS_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMPLATE_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMPLATE_BODY1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_BODY1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMPLATE_BODY2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_BODY2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REFERENCE_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "REFERENCE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ON_ERROR_BEFORE_LABEL", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ON_ERROR_BEFORE_LABEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ON_ERROR_AFTER_LABEL", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ON_ERROR_AFTER_LABEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("p1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TRANSLATE_THIS_TEMPLATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMPLATE_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_COMMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_THEME_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "THEME_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_THEME_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "THEME_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_THEME_CLASS_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "THEME_CLASS_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_THEME_CLASS_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "THEME_CLASS_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TEMPLATE_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TEMPLATE_BODY1", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_BODY1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TEMPLATE_BODY1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_BODY1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TEMPLATE_BODY2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_BODY2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TEMPLATE_BODY2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_BODY2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_REFERENCE_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "REFERENCE_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_REFERENCE_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "REFERENCE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ON_ERROR_BEFORE_LABEL", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ON_ERROR_BEFORE_LABEL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ON_ERROR_BEFORE_LABEL", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ON_ERROR_BEFORE_LABEL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ON_ERROR_AFTER_LABEL", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ON_ERROR_AFTER_LABEL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ON_ERROR_AFTER_LABEL", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ON_ERROR_AFTER_LABEL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("p3", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TRANSLATE_THIS_TEMPLATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("p2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TRANSLATE_THIS_TEMPLATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TEMPLATE_COMMENT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_COMMENT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TEMPLATE_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEMPLATE_COMMENT", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, FLOW_ID, SECURITY_GROUP_ID, THEME_ID, THEME_CLASS_ID, TEMPLATE_NAME, TEMPLATE_BODY1, TEMPLATE_BODY2, REFERENCE_ID, ON_ERROR_BEFORE_LABEL, ON_ERROR_AFTER_LABEL, LAST_UPDATED_ON, LAST_UPDATED_BY, TRANSLATE_THIS_TEMPLATE, TEMPLATE_COMMENT FROM FLOWS_020100.WWV_FLOW_FIELD_TEMPLATES";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_FIELD_TEMPLATESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_FIELD_TEMPLATESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_FIELD_TEMPLATESDataTable dataTable = new DataSet1.WWV_FLOW_FIELD_TEMPLATESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.WWV_FLOW_FIELD_TEMPLATESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "WWV_FLOW_FIELD_TEMPLATES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, decimal Original_FLOW_ID, decimal Original_SECURITY_GROUP_ID, global::System.Nullable<decimal> Original_THEME_ID, global::System.Nullable<decimal> Original_THEME_CLASS_ID, string Original_TEMPLATE_NAME, string Original_TEMPLATE_BODY1, string Original_TEMPLATE_BODY2, global::System.Nullable<decimal> Original_REFERENCE_ID, string Original_ON_ERROR_BEFORE_LABEL, string Original_ON_ERROR_AFTER_LABEL, global::System.Nullable<global::System.DateTime> Original_LAST_UPDATED_ON, string Original_LAST_UPDATED_BY, string p2, string Original_TEMPLATE_COMMENT) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_FLOW_ID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_SECURITY_GROUP_ID));
            if ((Original_THEME_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_THEME_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_THEME_CLASS_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_THEME_CLASS_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_TEMPLATE_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_TEMPLATE_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_TEMPLATE_NAME));
            }
            if ((Original_TEMPLATE_BODY1 == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_TEMPLATE_BODY1));
            }
            if ((Original_TEMPLATE_BODY2 == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_TEMPLATE_BODY2));
            }
            if ((Original_REFERENCE_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_REFERENCE_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_ON_ERROR_BEFORE_LABEL == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_ON_ERROR_BEFORE_LABEL));
            }
            if ((Original_ON_ERROR_AFTER_LABEL == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_ON_ERROR_AFTER_LABEL));
            }
            if ((Original_LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_LAST_UPDATED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_LAST_UPDATED_BY));
            }
            if ((p2 == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(p2));
            }
            if ((Original_TEMPLATE_COMMENT == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_TEMPLATE_COMMENT));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID, decimal FLOW_ID, decimal SECURITY_GROUP_ID, global::System.Nullable<decimal> THEME_ID, global::System.Nullable<decimal> THEME_CLASS_ID, string TEMPLATE_NAME, string TEMPLATE_BODY1, string TEMPLATE_BODY2, global::System.Nullable<decimal> REFERENCE_ID, string ON_ERROR_BEFORE_LABEL, string ON_ERROR_AFTER_LABEL, global::System.Nullable<global::System.DateTime> LAST_UPDATED_ON, string LAST_UPDATED_BY, string p1, string TEMPLATE_COMMENT) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(FLOW_ID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(SECURITY_GROUP_ID));
            if ((THEME_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(THEME_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((THEME_CLASS_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(THEME_CLASS_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((TEMPLATE_NAME == null)) {
                throw new global::System.ArgumentNullException("TEMPLATE_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(TEMPLATE_NAME));
            }
            if ((TEMPLATE_BODY1 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(TEMPLATE_BODY1));
            }
            if ((TEMPLATE_BODY2 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(TEMPLATE_BODY2));
            }
            if ((REFERENCE_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(REFERENCE_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ON_ERROR_BEFORE_LABEL == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ON_ERROR_BEFORE_LABEL));
            }
            if ((ON_ERROR_AFTER_LABEL == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ON_ERROR_AFTER_LABEL));
            }
            if ((LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((LAST_UPDATED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(LAST_UPDATED_BY));
            }
            if ((p1 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(p1));
            }
            if ((TEMPLATE_COMMENT == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(TEMPLATE_COMMENT));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ID, 
                    decimal FLOW_ID, 
                    decimal SECURITY_GROUP_ID, 
                    global::System.Nullable<decimal> THEME_ID, 
                    global::System.Nullable<decimal> THEME_CLASS_ID, 
                    string TEMPLATE_NAME, 
                    string TEMPLATE_BODY1, 
                    string TEMPLATE_BODY2, 
                    global::System.Nullable<decimal> REFERENCE_ID, 
                    string ON_ERROR_BEFORE_LABEL, 
                    string ON_ERROR_AFTER_LABEL, 
                    global::System.Nullable<global::System.DateTime> LAST_UPDATED_ON, 
                    string LAST_UPDATED_BY, 
                    string p1, 
                    string TEMPLATE_COMMENT, 
                    decimal Original_ID, 
                    decimal Original_FLOW_ID, 
                    decimal Original_SECURITY_GROUP_ID, 
                    global::System.Nullable<decimal> Original_THEME_ID, 
                    global::System.Nullable<decimal> Original_THEME_CLASS_ID, 
                    string Original_TEMPLATE_NAME, 
                    string Original_TEMPLATE_BODY1, 
                    string Original_TEMPLATE_BODY2, 
                    global::System.Nullable<decimal> Original_REFERENCE_ID, 
                    string Original_ON_ERROR_BEFORE_LABEL, 
                    string Original_ON_ERROR_AFTER_LABEL, 
                    global::System.Nullable<global::System.DateTime> Original_LAST_UPDATED_ON, 
                    string Original_LAST_UPDATED_BY, 
                    string p2, 
                    string Original_TEMPLATE_COMMENT) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(FLOW_ID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(SECURITY_GROUP_ID));
            if ((THEME_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(THEME_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((THEME_CLASS_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(THEME_CLASS_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((TEMPLATE_NAME == null)) {
                throw new global::System.ArgumentNullException("TEMPLATE_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(TEMPLATE_NAME));
            }
            if ((TEMPLATE_BODY1 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(TEMPLATE_BODY1));
            }
            if ((TEMPLATE_BODY2 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(TEMPLATE_BODY2));
            }
            if ((REFERENCE_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(REFERENCE_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ON_ERROR_BEFORE_LABEL == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ON_ERROR_BEFORE_LABEL));
            }
            if ((ON_ERROR_AFTER_LABEL == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ON_ERROR_AFTER_LABEL));
            }
            if ((LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((LAST_UPDATED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(LAST_UPDATED_BY));
            }
            if ((p1 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(p1));
            }
            if ((TEMPLATE_COMMENT == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(TEMPLATE_COMMENT));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_FLOW_ID));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_SECURITY_GROUP_ID));
            if ((Original_THEME_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_THEME_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_THEME_CLASS_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_THEME_CLASS_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_TEMPLATE_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_TEMPLATE_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_TEMPLATE_NAME));
            }
            if ((Original_TEMPLATE_BODY1 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_TEMPLATE_BODY1));
            }
            if ((Original_TEMPLATE_BODY2 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_TEMPLATE_BODY2));
            }
            if ((Original_REFERENCE_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_REFERENCE_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_ON_ERROR_BEFORE_LABEL == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_ON_ERROR_BEFORE_LABEL));
            }
            if ((Original_ON_ERROR_AFTER_LABEL == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_ON_ERROR_AFTER_LABEL));
            }
            if ((Original_LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(Original_LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_LAST_UPDATED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_LAST_UPDATED_BY));
            }
            if ((p2 == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(p2));
            }
            if ((Original_TEMPLATE_COMMENT == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_TEMPLATE_COMMENT));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal FLOW_ID, 
                    decimal SECURITY_GROUP_ID, 
                    global::System.Nullable<decimal> THEME_ID, 
                    global::System.Nullable<decimal> THEME_CLASS_ID, 
                    string TEMPLATE_NAME, 
                    string TEMPLATE_BODY1, 
                    string TEMPLATE_BODY2, 
                    global::System.Nullable<decimal> REFERENCE_ID, 
                    string ON_ERROR_BEFORE_LABEL, 
                    string ON_ERROR_AFTER_LABEL, 
                    global::System.Nullable<global::System.DateTime> LAST_UPDATED_ON, 
                    string LAST_UPDATED_BY, 
                    string p1, 
                    string TEMPLATE_COMMENT, 
                    decimal Original_ID, 
                    decimal Original_FLOW_ID, 
                    decimal Original_SECURITY_GROUP_ID, 
                    global::System.Nullable<decimal> Original_THEME_ID, 
                    global::System.Nullable<decimal> Original_THEME_CLASS_ID, 
                    string Original_TEMPLATE_NAME, 
                    string Original_TEMPLATE_BODY1, 
                    string Original_TEMPLATE_BODY2, 
                    global::System.Nullable<decimal> Original_REFERENCE_ID, 
                    string Original_ON_ERROR_BEFORE_LABEL, 
                    string Original_ON_ERROR_AFTER_LABEL, 
                    global::System.Nullable<global::System.DateTime> Original_LAST_UPDATED_ON, 
                    string Original_LAST_UPDATED_BY, 
                    string p2, 
                    string Original_TEMPLATE_COMMENT) {
            return this.Update(Original_ID, FLOW_ID, SECURITY_GROUP_ID, THEME_ID, THEME_CLASS_ID, TEMPLATE_NAME, TEMPLATE_BODY1, TEMPLATE_BODY2, REFERENCE_ID, ON_ERROR_BEFORE_LABEL, ON_ERROR_AFTER_LABEL, LAST_UPDATED_ON, LAST_UPDATED_BY, p1, TEMPLATE_COMMENT, Original_ID, Original_FLOW_ID, Original_SECURITY_GROUP_ID, Original_THEME_ID, Original_THEME_CLASS_ID, Original_TEMPLATE_NAME, Original_TEMPLATE_BODY1, Original_TEMPLATE_BODY2, Original_REFERENCE_ID, Original_ON_ERROR_BEFORE_LABEL, Original_ON_ERROR_AFTER_LABEL, Original_LAST_UPDATED_ON, Original_LAST_UPDATED_BY, p2, Original_TEMPLATE_COMMENT);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_LIST_OF_VALUES_DATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_LIST_OF_VALUES_DATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_LIST_OF_VALUES_DATA";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("LOV_ID", "LOV_ID");
            tableMapping.ColumnMappings.Add("FLOW_ID", "FLOW_ID");
            tableMapping.ColumnMappings.Add("LOV_DISP_SEQUENCE", "LOV_DISP_SEQUENCE");
            tableMapping.ColumnMappings.Add("LOV_DISP_VALUE", "LOV_DISP_VALUE");
            tableMapping.ColumnMappings.Add("LOV_RETURN_VALUE", "LOV_RETURN_VALUE");
            tableMapping.ColumnMappings.Add("LOV_TEMPLATE", "LOV_TEMPLATE");
            tableMapping.ColumnMappings.Add("LOV_DISP_COND_TYPE", "LOV_DISP_COND_TYPE");
            tableMapping.ColumnMappings.Add("LOV_DISP_COND", "LOV_DISP_COND");
            tableMapping.ColumnMappings.Add("LOV_DISP_COND2", "LOV_DISP_COND2");
            tableMapping.ColumnMappings.Add("REQUIRED_PATCH", "REQUIRED_PATCH");
            tableMapping.ColumnMappings.Add("SECURITY_GROUP_ID", "SECURITY_GROUP_ID");
            tableMapping.ColumnMappings.Add("LAST_UPDATED_BY", "LAST_UPDATED_BY");
            tableMapping.ColumnMappings.Add("LAST_UPDATED_ON", "LAST_UPDATED_ON");
            tableMapping.ColumnMappings.Add("LOV_DATA_COMMENT", "LOV_DATA_COMMENT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""FLOWS_020100"".""WWV_FLOW_LIST_OF_VALUES_DATA"" WHERE ((""ID"" = :Original_ID) AND ((:IsNull_LOV_ID = 1 AND ""LOV_ID"" IS NULL) OR (""LOV_ID"" = :Original_LOV_ID)) AND ((:IsNull_FLOW_ID = 1 AND ""FLOW_ID"" IS NULL) OR (""FLOW_ID"" = :Original_FLOW_ID)) AND (""LOV_DISP_SEQUENCE"" = :Original_LOV_DISP_SEQUENCE) AND (""LOV_DISP_VALUE"" = :Original_LOV_DISP_VALUE) AND (""LOV_RETURN_VALUE"" = :Original_LOV_RETURN_VALUE) AND ((:IsNull_LOV_TEMPLATE = 1 AND ""LOV_TEMPLATE"" IS NULL) OR (""LOV_TEMPLATE"" = :Original_LOV_TEMPLATE)) AND ((:IsNull_LOV_DISP_COND_TYPE = 1 AND ""LOV_DISP_COND_TYPE"" IS NULL) OR (""LOV_DISP_COND_TYPE"" = :Original_LOV_DISP_COND_TYPE)) AND ((:IsNull_LOV_DISP_COND = 1 AND ""LOV_DISP_COND"" IS NULL) OR (""LOV_DISP_COND"" = :Original_LOV_DISP_COND)) AND ((:IsNull_LOV_DISP_COND2 = 1 AND ""LOV_DISP_COND2"" IS NULL) OR (""LOV_DISP_COND2"" = :Original_LOV_DISP_COND2)) AND ((:IsNull_REQUIRED_PATCH = 1 AND ""REQUIRED_PATCH"" IS NULL) OR (""REQUIRED_PATCH"" = :Original_REQUIRED_PATCH)) AND (""SECURITY_GROUP_ID"" = :Original_SECURITY_GROUP_ID) AND ((:IsNull_LAST_UPDATED_BY = 1 AND ""LAST_UPDATED_BY"" IS NULL) OR (""LAST_UPDATED_BY"" = :Original_LAST_UPDATED_BY)) AND ((:IsNull_LAST_UPDATED_ON = 1 AND ""LAST_UPDATED_ON"" IS NULL) OR (""LAST_UPDATED_ON"" = :Original_LAST_UPDATED_ON)) AND ((:IsNull_LOV_DATA_COMMENT = 1 AND ""LOV_DATA_COMMENT"" IS NULL) OR (""LOV_DATA_COMMENT"" = :Original_LOV_DATA_COMMENT)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LOV_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LOV_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LOV_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FLOW_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_DISP_SEQUENCE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_SEQUENCE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_DISP_VALUE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_VALUE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_RETURN_VALUE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_RETURN_VALUE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LOV_TEMPLATE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LOV_TEMPLATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_TEMPLATE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_TEMPLATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LOV_DISP_COND_TYPE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND_TYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_DISP_COND_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND_TYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LOV_DISP_COND", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_DISP_COND", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LOV_DISP_COND2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_DISP_COND2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_REQUIRED_PATCH", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "REQUIRED_PATCH", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_REQUIRED_PATCH", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "REQUIRED_PATCH", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LOV_DATA_COMMENT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LOV_DATA_COMMENT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_DATA_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DATA_COMMENT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""FLOWS_020100"".""WWV_FLOW_LIST_OF_VALUES_DATA"" (""ID"", ""LOV_ID"", ""FLOW_ID"", ""LOV_DISP_SEQUENCE"", ""LOV_DISP_VALUE"", ""LOV_RETURN_VALUE"", ""LOV_TEMPLATE"", ""LOV_DISP_COND_TYPE"", ""LOV_DISP_COND"", ""LOV_DISP_COND2"", ""REQUIRED_PATCH"", ""SECURITY_GROUP_ID"", ""LAST_UPDATED_BY"", ""LAST_UPDATED_ON"", ""LOV_DATA_COMMENT"") VALUES (:ID, :LOV_ID, :FLOW_ID, :LOV_DISP_SEQUENCE, :LOV_DISP_VALUE, :LOV_RETURN_VALUE, :LOV_TEMPLATE, :LOV_DISP_COND_TYPE, :LOV_DISP_COND, :LOV_DISP_COND2, :REQUIRED_PATCH, :SECURITY_GROUP_ID, :LAST_UPDATED_BY, :LAST_UPDATED_ON, :LOV_DATA_COMMENT)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LOV_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_DISP_SEQUENCE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_SEQUENCE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_DISP_VALUE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_VALUE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_RETURN_VALUE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_RETURN_VALUE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_TEMPLATE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_TEMPLATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_DISP_COND_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND_TYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_DISP_COND", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_DISP_COND2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REQUIRED_PATCH", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "REQUIRED_PATCH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_DATA_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DATA_COMMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"FLOWS_020100\".\"WWV_FLOW_LIST_OF_VALUES_DATA\" SET \"ID\" = :ID, \"LOV_ID\" = :" +
                "LOV_ID, \"FLOW_ID\" = :FLOW_ID, \"LOV_DISP_SEQUENCE\" = :LOV_DISP_SEQUENCE, \"LOV_DIS" +
                "P_VALUE\" = :LOV_DISP_VALUE, \"LOV_RETURN_VALUE\" = :LOV_RETURN_VALUE, \"LOV_TEMPLAT" +
                "E\" = :LOV_TEMPLATE, \"LOV_DISP_COND_TYPE\" = :LOV_DISP_COND_TYPE, \"LOV_DISP_COND\" " +
                "= :LOV_DISP_COND, \"LOV_DISP_COND2\" = :LOV_DISP_COND2, \"REQUIRED_PATCH\" = :REQUIR" +
                "ED_PATCH, \"SECURITY_GROUP_ID\" = :SECURITY_GROUP_ID, \"LAST_UPDATED_BY\" = :LAST_UP" +
                "DATED_BY, \"LAST_UPDATED_ON\" = :LAST_UPDATED_ON, \"LOV_DATA_COMMENT\" = :LOV_DATA_C" +
                "OMMENT WHERE ((\"ID\" = :Original_ID) AND ((:IsNull_LOV_ID = 1 AND \"LOV_ID\" IS NUL" +
                "L) OR (\"LOV_ID\" = :Original_LOV_ID)) AND ((:IsNull_FLOW_ID = 1 AND \"FLOW_ID\" IS " +
                "NULL) OR (\"FLOW_ID\" = :Original_FLOW_ID)) AND (\"LOV_DISP_SEQUENCE\" = :Original_L" +
                "OV_DISP_SEQUENCE) AND (\"LOV_DISP_VALUE\" = :Original_LOV_DISP_VALUE) AND (\"LOV_RE" +
                "TURN_VALUE\" = :Original_LOV_RETURN_VALUE) AND ((:IsNull_LOV_TEMPLATE = 1 AND \"LO" +
                "V_TEMPLATE\" IS NULL) OR (\"LOV_TEMPLATE\" = :Original_LOV_TEMPLATE)) AND ((:IsNull" +
                "_LOV_DISP_COND_TYPE = 1 AND \"LOV_DISP_COND_TYPE\" IS NULL) OR (\"LOV_DISP_COND_TYP" +
                "E\" = :Original_LOV_DISP_COND_TYPE)) AND ((:IsNull_LOV_DISP_COND = 1 AND \"LOV_DIS" +
                "P_COND\" IS NULL) OR (\"LOV_DISP_COND\" = :Original_LOV_DISP_COND)) AND ((:IsNull_L" +
                "OV_DISP_COND2 = 1 AND \"LOV_DISP_COND2\" IS NULL) OR (\"LOV_DISP_COND2\" = :Original" +
                "_LOV_DISP_COND2)) AND ((:IsNull_REQUIRED_PATCH = 1 AND \"REQUIRED_PATCH\" IS NULL)" +
                " OR (\"REQUIRED_PATCH\" = :Original_REQUIRED_PATCH)) AND (\"SECURITY_GROUP_ID\" = :O" +
                "riginal_SECURITY_GROUP_ID) AND ((:IsNull_LAST_UPDATED_BY = 1 AND \"LAST_UPDATED_B" +
                "Y\" IS NULL) OR (\"LAST_UPDATED_BY\" = :Original_LAST_UPDATED_BY)) AND ((:IsNull_LA" +
                "ST_UPDATED_ON = 1 AND \"LAST_UPDATED_ON\" IS NULL) OR (\"LAST_UPDATED_ON\" = :Origin" +
                "al_LAST_UPDATED_ON)) AND ((:IsNull_LOV_DATA_COMMENT = 1 AND \"LOV_DATA_COMMENT\" I" +
                "S NULL) OR (\"LOV_DATA_COMMENT\" = :Original_LOV_DATA_COMMENT)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LOV_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_DISP_SEQUENCE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_SEQUENCE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_DISP_VALUE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_VALUE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_RETURN_VALUE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_RETURN_VALUE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_TEMPLATE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_TEMPLATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_DISP_COND_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND_TYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_DISP_COND", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_DISP_COND2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REQUIRED_PATCH", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "REQUIRED_PATCH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_DATA_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DATA_COMMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LOV_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LOV_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LOV_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FLOW_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_DISP_SEQUENCE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_SEQUENCE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_DISP_VALUE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_VALUE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_RETURN_VALUE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_RETURN_VALUE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LOV_TEMPLATE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LOV_TEMPLATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_TEMPLATE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_TEMPLATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LOV_DISP_COND_TYPE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND_TYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_DISP_COND_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND_TYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LOV_DISP_COND", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_DISP_COND", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LOV_DISP_COND2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_DISP_COND2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DISP_COND2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_REQUIRED_PATCH", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "REQUIRED_PATCH", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_REQUIRED_PATCH", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "REQUIRED_PATCH", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LOV_DATA_COMMENT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LOV_DATA_COMMENT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_DATA_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_DATA_COMMENT", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, LOV_ID, FLOW_ID, LOV_DISP_SEQUENCE, LOV_DISP_VALUE, LOV_RETURN_VALUE, LOV_TEMPLATE, LOV_DISP_COND_TYPE, LOV_DISP_COND, LOV_DISP_COND2, REQUIRED_PATCH, SECURITY_GROUP_ID, LAST_UPDATED_BY, LAST_UPDATED_ON, LOV_DATA_COMMENT FROM FLOWS_020100.WWV_FLOW_LIST_OF_VALUES_DATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_LIST_OF_VALUES_DATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_LIST_OF_VALUES_DATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_LIST_OF_VALUES_DATADataTable dataTable = new DataSet1.WWV_FLOW_LIST_OF_VALUES_DATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.WWV_FLOW_LIST_OF_VALUES_DATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "WWV_FLOW_LIST_OF_VALUES_DATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, global::System.Nullable<decimal> Original_LOV_ID, global::System.Nullable<decimal> Original_FLOW_ID, decimal Original_LOV_DISP_SEQUENCE, string Original_LOV_DISP_VALUE, string Original_LOV_RETURN_VALUE, string Original_LOV_TEMPLATE, string Original_LOV_DISP_COND_TYPE, string Original_LOV_DISP_COND, string Original_LOV_DISP_COND2, global::System.Nullable<decimal> Original_REQUIRED_PATCH, decimal Original_SECURITY_GROUP_ID, string Original_LAST_UPDATED_BY, global::System.Nullable<global::System.DateTime> Original_LAST_UPDATED_ON, string Original_LOV_DATA_COMMENT) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            if ((Original_LOV_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_LOV_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_FLOW_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_FLOW_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_LOV_DISP_SEQUENCE));
            if ((Original_LOV_DISP_VALUE == null)) {
                throw new global::System.ArgumentNullException("Original_LOV_DISP_VALUE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_LOV_DISP_VALUE));
            }
            if ((Original_LOV_RETURN_VALUE == null)) {
                throw new global::System.ArgumentNullException("Original_LOV_RETURN_VALUE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_LOV_RETURN_VALUE));
            }
            if ((Original_LOV_TEMPLATE == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_LOV_TEMPLATE));
            }
            if ((Original_LOV_DISP_COND_TYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_LOV_DISP_COND_TYPE));
            }
            if ((Original_LOV_DISP_COND == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_LOV_DISP_COND));
            }
            if ((Original_LOV_DISP_COND2 == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_LOV_DISP_COND2));
            }
            if ((Original_REQUIRED_PATCH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_REQUIRED_PATCH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_SECURITY_GROUP_ID));
            if ((Original_LAST_UPDATED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_LAST_UPDATED_BY));
            }
            if ((Original_LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_LOV_DATA_COMMENT == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_LOV_DATA_COMMENT));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID, global::System.Nullable<decimal> LOV_ID, global::System.Nullable<decimal> FLOW_ID, decimal LOV_DISP_SEQUENCE, string LOV_DISP_VALUE, string LOV_RETURN_VALUE, string LOV_TEMPLATE, string LOV_DISP_COND_TYPE, string LOV_DISP_COND, string LOV_DISP_COND2, global::System.Nullable<decimal> REQUIRED_PATCH, decimal SECURITY_GROUP_ID, string LAST_UPDATED_BY, global::System.Nullable<global::System.DateTime> LAST_UPDATED_ON, string LOV_DATA_COMMENT) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID));
            if ((LOV_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(LOV_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FLOW_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(FLOW_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(LOV_DISP_SEQUENCE));
            if ((LOV_DISP_VALUE == null)) {
                throw new global::System.ArgumentNullException("LOV_DISP_VALUE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(LOV_DISP_VALUE));
            }
            if ((LOV_RETURN_VALUE == null)) {
                throw new global::System.ArgumentNullException("LOV_RETURN_VALUE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(LOV_RETURN_VALUE));
            }
            if ((LOV_TEMPLATE == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(LOV_TEMPLATE));
            }
            if ((LOV_DISP_COND_TYPE == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(LOV_DISP_COND_TYPE));
            }
            if ((LOV_DISP_COND == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(LOV_DISP_COND));
            }
            if ((LOV_DISP_COND2 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(LOV_DISP_COND2));
            }
            if ((REQUIRED_PATCH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(REQUIRED_PATCH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(SECURITY_GROUP_ID));
            if ((LAST_UPDATED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(LAST_UPDATED_BY));
            }
            if ((LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((LOV_DATA_COMMENT == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(LOV_DATA_COMMENT));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ID, 
                    global::System.Nullable<decimal> LOV_ID, 
                    global::System.Nullable<decimal> FLOW_ID, 
                    decimal LOV_DISP_SEQUENCE, 
                    string LOV_DISP_VALUE, 
                    string LOV_RETURN_VALUE, 
                    string LOV_TEMPLATE, 
                    string LOV_DISP_COND_TYPE, 
                    string LOV_DISP_COND, 
                    string LOV_DISP_COND2, 
                    global::System.Nullable<decimal> REQUIRED_PATCH, 
                    decimal SECURITY_GROUP_ID, 
                    string LAST_UPDATED_BY, 
                    global::System.Nullable<global::System.DateTime> LAST_UPDATED_ON, 
                    string LOV_DATA_COMMENT, 
                    decimal Original_ID, 
                    global::System.Nullable<decimal> Original_LOV_ID, 
                    global::System.Nullable<decimal> Original_FLOW_ID, 
                    decimal Original_LOV_DISP_SEQUENCE, 
                    string Original_LOV_DISP_VALUE, 
                    string Original_LOV_RETURN_VALUE, 
                    string Original_LOV_TEMPLATE, 
                    string Original_LOV_DISP_COND_TYPE, 
                    string Original_LOV_DISP_COND, 
                    string Original_LOV_DISP_COND2, 
                    global::System.Nullable<decimal> Original_REQUIRED_PATCH, 
                    decimal Original_SECURITY_GROUP_ID, 
                    string Original_LAST_UPDATED_BY, 
                    global::System.Nullable<global::System.DateTime> Original_LAST_UPDATED_ON, 
                    string Original_LOV_DATA_COMMENT) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID));
            if ((LOV_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(LOV_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FLOW_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(FLOW_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(LOV_DISP_SEQUENCE));
            if ((LOV_DISP_VALUE == null)) {
                throw new global::System.ArgumentNullException("LOV_DISP_VALUE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(LOV_DISP_VALUE));
            }
            if ((LOV_RETURN_VALUE == null)) {
                throw new global::System.ArgumentNullException("LOV_RETURN_VALUE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(LOV_RETURN_VALUE));
            }
            if ((LOV_TEMPLATE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(LOV_TEMPLATE));
            }
            if ((LOV_DISP_COND_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(LOV_DISP_COND_TYPE));
            }
            if ((LOV_DISP_COND == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(LOV_DISP_COND));
            }
            if ((LOV_DISP_COND2 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(LOV_DISP_COND2));
            }
            if ((REQUIRED_PATCH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(REQUIRED_PATCH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(SECURITY_GROUP_ID));
            if ((LAST_UPDATED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(LAST_UPDATED_BY));
            }
            if ((LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((LOV_DATA_COMMENT == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(LOV_DATA_COMMENT));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_ID));
            if ((Original_LOV_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_LOV_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_FLOW_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_FLOW_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_LOV_DISP_SEQUENCE));
            if ((Original_LOV_DISP_VALUE == null)) {
                throw new global::System.ArgumentNullException("Original_LOV_DISP_VALUE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_LOV_DISP_VALUE));
            }
            if ((Original_LOV_RETURN_VALUE == null)) {
                throw new global::System.ArgumentNullException("Original_LOV_RETURN_VALUE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_LOV_RETURN_VALUE));
            }
            if ((Original_LOV_TEMPLATE == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_LOV_TEMPLATE));
            }
            if ((Original_LOV_DISP_COND_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_LOV_DISP_COND_TYPE));
            }
            if ((Original_LOV_DISP_COND == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_LOV_DISP_COND));
            }
            if ((Original_LOV_DISP_COND2 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_LOV_DISP_COND2));
            }
            if ((Original_REQUIRED_PATCH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Original_REQUIRED_PATCH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_SECURITY_GROUP_ID));
            if ((Original_LAST_UPDATED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_LAST_UPDATED_BY));
            }
            if ((Original_LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(Original_LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_LOV_DATA_COMMENT == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_LOV_DATA_COMMENT));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> LOV_ID, 
                    global::System.Nullable<decimal> FLOW_ID, 
                    decimal LOV_DISP_SEQUENCE, 
                    string LOV_DISP_VALUE, 
                    string LOV_RETURN_VALUE, 
                    string LOV_TEMPLATE, 
                    string LOV_DISP_COND_TYPE, 
                    string LOV_DISP_COND, 
                    string LOV_DISP_COND2, 
                    global::System.Nullable<decimal> REQUIRED_PATCH, 
                    decimal SECURITY_GROUP_ID, 
                    string LAST_UPDATED_BY, 
                    global::System.Nullable<global::System.DateTime> LAST_UPDATED_ON, 
                    string LOV_DATA_COMMENT, 
                    decimal Original_ID, 
                    global::System.Nullable<decimal> Original_LOV_ID, 
                    global::System.Nullable<decimal> Original_FLOW_ID, 
                    decimal Original_LOV_DISP_SEQUENCE, 
                    string Original_LOV_DISP_VALUE, 
                    string Original_LOV_RETURN_VALUE, 
                    string Original_LOV_TEMPLATE, 
                    string Original_LOV_DISP_COND_TYPE, 
                    string Original_LOV_DISP_COND, 
                    string Original_LOV_DISP_COND2, 
                    global::System.Nullable<decimal> Original_REQUIRED_PATCH, 
                    decimal Original_SECURITY_GROUP_ID, 
                    string Original_LAST_UPDATED_BY, 
                    global::System.Nullable<global::System.DateTime> Original_LAST_UPDATED_ON, 
                    string Original_LOV_DATA_COMMENT) {
            return this.Update(Original_ID, LOV_ID, FLOW_ID, LOV_DISP_SEQUENCE, LOV_DISP_VALUE, LOV_RETURN_VALUE, LOV_TEMPLATE, LOV_DISP_COND_TYPE, LOV_DISP_COND, LOV_DISP_COND2, REQUIRED_PATCH, SECURITY_GROUP_ID, LAST_UPDATED_BY, LAST_UPDATED_ON, LOV_DATA_COMMENT, Original_ID, Original_LOV_ID, Original_FLOW_ID, Original_LOV_DISP_SEQUENCE, Original_LOV_DISP_VALUE, Original_LOV_RETURN_VALUE, Original_LOV_TEMPLATE, Original_LOV_DISP_COND_TYPE, Original_LOV_DISP_COND, Original_LOV_DISP_COND2, Original_REQUIRED_PATCH, Original_SECURITY_GROUP_ID, Original_LAST_UPDATED_BY, Original_LAST_UPDATED_ON, Original_LOV_DATA_COMMENT);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_LISTS_OF_VALUES_TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_LISTS_OF_VALUES_TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_LISTS_OF_VALUES$";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("FLOW_ID", "FLOW_ID");
            tableMapping.ColumnMappings.Add("LOV_NAME", "LOV_NAME");
            tableMapping.ColumnMappings.Add("LOV_QUERY", "LOV_QUERY");
            tableMapping.ColumnMappings.Add("SECURITY_GROUP_ID", "SECURITY_GROUP_ID");
            tableMapping.ColumnMappings.Add("REFERENCE_ID", "REFERENCE_ID");
            tableMapping.ColumnMappings.Add("LAST_UPDATED_BY", "LAST_UPDATED_BY");
            tableMapping.ColumnMappings.Add("LAST_UPDATED_ON", "LAST_UPDATED_ON");
            tableMapping.ColumnMappings.Add("LOV_COMMENT", "LOV_COMMENT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""FLOWS_020100"".""WWV_FLOW_LISTS_OF_VALUES$"" WHERE ((""ID"" = :Original_ID) AND (""FLOW_ID"" = :Original_FLOW_ID) AND (""LOV_NAME"" = :Original_LOV_NAME) AND (""LOV_QUERY"" = :Original_LOV_QUERY) AND (""SECURITY_GROUP_ID"" = :Original_SECURITY_GROUP_ID) AND ((:IsNull_REFERENCE_ID = 1 AND ""REFERENCE_ID"" IS NULL) OR (""REFERENCE_ID"" = :Original_REFERENCE_ID)) AND ((:IsNull_LAST_UPDATED_BY = 1 AND ""LAST_UPDATED_BY"" IS NULL) OR (""LAST_UPDATED_BY"" = :Original_LAST_UPDATED_BY)) AND ((:IsNull_LAST_UPDATED_ON = 1 AND ""LAST_UPDATED_ON"" IS NULL) OR (""LAST_UPDATED_ON"" = :Original_LAST_UPDATED_ON)) AND ((:IsNull_LOV_COMMENT = 1 AND ""LOV_COMMENT"" IS NULL) OR (""LOV_COMMENT"" = :Original_LOV_COMMENT)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_QUERY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_QUERY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_REFERENCE_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "REFERENCE_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_REFERENCE_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "REFERENCE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LOV_COMMENT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LOV_COMMENT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_COMMENT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""FLOWS_020100"".""WWV_FLOW_LISTS_OF_VALUES$"" (""ID"", ""FLOW_ID"", ""LOV_NAME"", ""LOV_QUERY"", ""SECURITY_GROUP_ID"", ""REFERENCE_ID"", ""LAST_UPDATED_BY"", ""LAST_UPDATED_ON"", ""LOV_COMMENT"") VALUES (:ID, :FLOW_ID, :LOV_NAME, :LOV_QUERY, :SECURITY_GROUP_ID, :REFERENCE_ID, :LAST_UPDATED_BY, :LAST_UPDATED_ON, :LOV_COMMENT)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_QUERY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_QUERY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REFERENCE_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "REFERENCE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_COMMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""FLOWS_020100"".""WWV_FLOW_LISTS_OF_VALUES$"" SET ""ID"" = :ID, ""FLOW_ID"" = :FLOW_ID, ""LOV_NAME"" = :LOV_NAME, ""LOV_QUERY"" = :LOV_QUERY, ""SECURITY_GROUP_ID"" = :SECURITY_GROUP_ID, ""REFERENCE_ID"" = :REFERENCE_ID, ""LAST_UPDATED_BY"" = :LAST_UPDATED_BY, ""LAST_UPDATED_ON"" = :LAST_UPDATED_ON, ""LOV_COMMENT"" = :LOV_COMMENT WHERE ((""ID"" = :Original_ID) AND (""FLOW_ID"" = :Original_FLOW_ID) AND (""LOV_NAME"" = :Original_LOV_NAME) AND (""LOV_QUERY"" = :Original_LOV_QUERY) AND (""SECURITY_GROUP_ID"" = :Original_SECURITY_GROUP_ID) AND ((:IsNull_REFERENCE_ID = 1 AND ""REFERENCE_ID"" IS NULL) OR (""REFERENCE_ID"" = :Original_REFERENCE_ID)) AND ((:IsNull_LAST_UPDATED_BY = 1 AND ""LAST_UPDATED_BY"" IS NULL) OR (""LAST_UPDATED_BY"" = :Original_LAST_UPDATED_BY)) AND ((:IsNull_LAST_UPDATED_ON = 1 AND ""LAST_UPDATED_ON"" IS NULL) OR (""LAST_UPDATED_ON"" = :Original_LAST_UPDATED_ON)) AND ((:IsNull_LOV_COMMENT = 1 AND ""LOV_COMMENT"" IS NULL) OR (""LOV_COMMENT"" = :Original_LOV_COMMENT)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_QUERY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_QUERY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REFERENCE_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "REFERENCE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOV_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_COMMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_QUERY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_QUERY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_REFERENCE_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "REFERENCE_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_REFERENCE_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "REFERENCE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LOV_COMMENT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LOV_COMMENT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOV_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOV_COMMENT", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, FLOW_ID, LOV_NAME, LOV_QUERY, SECURITY_GROUP_ID, REFERENCE_ID, LAST_UP" +
                "DATED_BY, LAST_UPDATED_ON, LOV_COMMENT FROM FLOWS_020100.WWV_FLOW_LISTS_OF_VALUE" +
                "S$";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1._WWV_FLOW_LISTS_OF_VALUES_DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1._WWV_FLOW_LISTS_OF_VALUES_DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1._WWV_FLOW_LISTS_OF_VALUES_DataTable dataTable = new DataSet1._WWV_FLOW_LISTS_OF_VALUES_DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1._WWV_FLOW_LISTS_OF_VALUES_DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "WWV_FLOW_LISTS_OF_VALUES$");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, decimal Original_FLOW_ID, string Original_LOV_NAME, string Original_LOV_QUERY, decimal Original_SECURITY_GROUP_ID, global::System.Nullable<decimal> Original_REFERENCE_ID, string Original_LAST_UPDATED_BY, global::System.Nullable<global::System.DateTime> Original_LAST_UPDATED_ON, string Original_LOV_COMMENT) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_FLOW_ID));
            if ((Original_LOV_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_LOV_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_LOV_NAME));
            }
            if ((Original_LOV_QUERY == null)) {
                throw new global::System.ArgumentNullException("Original_LOV_QUERY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_LOV_QUERY));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_SECURITY_GROUP_ID));
            if ((Original_REFERENCE_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_REFERENCE_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_LAST_UPDATED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_LAST_UPDATED_BY));
            }
            if ((Original_LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_LOV_COMMENT == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_LOV_COMMENT));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID, decimal FLOW_ID, string LOV_NAME, string LOV_QUERY, decimal SECURITY_GROUP_ID, global::System.Nullable<decimal> REFERENCE_ID, string LAST_UPDATED_BY, global::System.Nullable<global::System.DateTime> LAST_UPDATED_ON, string LOV_COMMENT) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(FLOW_ID));
            if ((LOV_NAME == null)) {
                throw new global::System.ArgumentNullException("LOV_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(LOV_NAME));
            }
            if ((LOV_QUERY == null)) {
                throw new global::System.ArgumentNullException("LOV_QUERY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(LOV_QUERY));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(SECURITY_GROUP_ID));
            if ((REFERENCE_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(REFERENCE_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((LAST_UPDATED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(LAST_UPDATED_BY));
            }
            if ((LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((LOV_COMMENT == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(LOV_COMMENT));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ID, 
                    decimal FLOW_ID, 
                    string LOV_NAME, 
                    string LOV_QUERY, 
                    decimal SECURITY_GROUP_ID, 
                    global::System.Nullable<decimal> REFERENCE_ID, 
                    string LAST_UPDATED_BY, 
                    global::System.Nullable<global::System.DateTime> LAST_UPDATED_ON, 
                    string LOV_COMMENT, 
                    decimal Original_ID, 
                    decimal Original_FLOW_ID, 
                    string Original_LOV_NAME, 
                    string Original_LOV_QUERY, 
                    decimal Original_SECURITY_GROUP_ID, 
                    global::System.Nullable<decimal> Original_REFERENCE_ID, 
                    string Original_LAST_UPDATED_BY, 
                    global::System.Nullable<global::System.DateTime> Original_LAST_UPDATED_ON, 
                    string Original_LOV_COMMENT) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(FLOW_ID));
            if ((LOV_NAME == null)) {
                throw new global::System.ArgumentNullException("LOV_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(LOV_NAME));
            }
            if ((LOV_QUERY == null)) {
                throw new global::System.ArgumentNullException("LOV_QUERY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(LOV_QUERY));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(SECURITY_GROUP_ID));
            if ((REFERENCE_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(REFERENCE_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((LAST_UPDATED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(LAST_UPDATED_BY));
            }
            if ((LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((LOV_COMMENT == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(LOV_COMMENT));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_FLOW_ID));
            if ((Original_LOV_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_LOV_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_LOV_NAME));
            }
            if ((Original_LOV_QUERY == null)) {
                throw new global::System.ArgumentNullException("Original_LOV_QUERY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_LOV_QUERY));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_SECURITY_GROUP_ID));
            if ((Original_REFERENCE_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_REFERENCE_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_LAST_UPDATED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_LAST_UPDATED_BY));
            }
            if ((Original_LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_LOV_COMMENT == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_LOV_COMMENT));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal FLOW_ID, 
                    string LOV_NAME, 
                    string LOV_QUERY, 
                    decimal SECURITY_GROUP_ID, 
                    global::System.Nullable<decimal> REFERENCE_ID, 
                    string LAST_UPDATED_BY, 
                    global::System.Nullable<global::System.DateTime> LAST_UPDATED_ON, 
                    string LOV_COMMENT, 
                    decimal Original_ID, 
                    decimal Original_FLOW_ID, 
                    string Original_LOV_NAME, 
                    string Original_LOV_QUERY, 
                    decimal Original_SECURITY_GROUP_ID, 
                    global::System.Nullable<decimal> Original_REFERENCE_ID, 
                    string Original_LAST_UPDATED_BY, 
                    global::System.Nullable<global::System.DateTime> Original_LAST_UPDATED_ON, 
                    string Original_LOV_COMMENT) {
            return this.Update(Original_ID, FLOW_ID, LOV_NAME, LOV_QUERY, SECURITY_GROUP_ID, REFERENCE_ID, LAST_UPDATED_BY, LAST_UPDATED_ON, LOV_COMMENT, Original_ID, Original_FLOW_ID, Original_LOV_NAME, Original_LOV_QUERY, Original_SECURITY_GROUP_ID, Original_REFERENCE_ID, Original_LAST_UPDATED_BY, Original_LAST_UPDATED_ON, Original_LOV_COMMENT);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_LOV_TEMPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_LOV_TEMPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_LOV_TEMP";
            tableMapping.ColumnMappings.Add("INSERT_ORDER", "INSERT_ORDER");
            tableMapping.ColumnMappings.Add("DISP", "DISP");
            tableMapping.ColumnMappings.Add("VAL", "VAL");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"FLOWS_020100\".\"WWV_FLOW_LOV_TEMP\" (\"INSERT_ORDER\", \"DISP\", \"VAL\") VA" +
                "LUES (:INSERT_ORDER, :DISP, :VAL)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INSERT_ORDER", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "INSERT_ORDER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DISP", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DISP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("VAL", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "VAL", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT INSERT_ORDER, DISP, VAL FROM FLOWS_020100.WWV_FLOW_LOV_TEMP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_LOV_TEMPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_LOV_TEMPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_LOV_TEMPDataTable dataTable = new DataSet1.WWV_FLOW_LOV_TEMPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.WWV_FLOW_LOV_TEMPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "WWV_FLOW_LOV_TEMP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> INSERT_ORDER, string DISP, string VAL) {
            if ((INSERT_ORDER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(INSERT_ORDER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((DISP == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DISP));
            }
            if ((VAL == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(VAL));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_PATCHESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_PATCHESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_PATCHES";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("FLOW_ID", "FLOW_ID");
            tableMapping.ColumnMappings.Add("PATCH_NAME", "PATCH_NAME");
            tableMapping.ColumnMappings.Add("PATCH_STATUS", "PATCH_STATUS");
            tableMapping.ColumnMappings.Add("SECURITY_GROUP_ID", "SECURITY_GROUP_ID");
            tableMapping.ColumnMappings.Add("DEFAULT_ON_EXPORT", "DEFAULT_ON_EXPORT");
            tableMapping.ColumnMappings.Add("ATTRIBUTE1", "ATTRIBUTE1");
            tableMapping.ColumnMappings.Add("ATTRIBUTE2", "ATTRIBUTE2");
            tableMapping.ColumnMappings.Add("ATTRIBUTE3", "ATTRIBUTE3");
            tableMapping.ColumnMappings.Add("ATTRIBUTE4", "ATTRIBUTE4");
            tableMapping.ColumnMappings.Add("LAST_UPDATED_BY", "LAST_UPDATED_BY");
            tableMapping.ColumnMappings.Add("LAST_UPDATED_ON", "LAST_UPDATED_ON");
            tableMapping.ColumnMappings.Add("PATCH_COMMENT", "PATCH_COMMENT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""FLOWS_020100"".""WWV_FLOW_PATCHES"" WHERE ((""ID"" = :Original_ID) AND (""FLOW_ID"" = :Original_FLOW_ID) AND (""PATCH_NAME"" = :Original_PATCH_NAME) AND ((:IsNull_PATCH_STATUS = 1 AND ""PATCH_STATUS"" IS NULL) OR (""PATCH_STATUS"" = :Original_PATCH_STATUS)) AND (""SECURITY_GROUP_ID"" = :Original_SECURITY_GROUP_ID) AND ((:IsNull_DEFAULT_ON_EXPORT = 1 AND ""DEFAULT_ON_EXPORT"" IS NULL) OR (""DEFAULT_ON_EXPORT"" = :Original_DEFAULT_ON_EXPORT)) AND ((:IsNull_ATTRIBUTE1 = 1 AND ""ATTRIBUTE1"" IS NULL) OR (""ATTRIBUTE1"" = :Original_ATTRIBUTE1)) AND ((:IsNull_ATTRIBUTE2 = 1 AND ""ATTRIBUTE2"" IS NULL) OR (""ATTRIBUTE2"" = :Original_ATTRIBUTE2)) AND ((:IsNull_ATTRIBUTE3 = 1 AND ""ATTRIBUTE3"" IS NULL) OR (""ATTRIBUTE3"" = :Original_ATTRIBUTE3)) AND ((:IsNull_ATTRIBUTE4 = 1 AND ""ATTRIBUTE4"" IS NULL) OR (""ATTRIBUTE4"" = :Original_ATTRIBUTE4)) AND ((:IsNull_LAST_UPDATED_BY = 1 AND ""LAST_UPDATED_BY"" IS NULL) OR (""LAST_UPDATED_BY"" = :Original_LAST_UPDATED_BY)) AND ((:IsNull_LAST_UPDATED_ON = 1 AND ""LAST_UPDATED_ON"" IS NULL) OR (""LAST_UPDATED_ON"" = :Original_LAST_UPDATED_ON)) AND ((:IsNull_PATCH_COMMENT = 1 AND ""PATCH_COMMENT"" IS NULL) OR (""PATCH_COMMENT"" = :Original_PATCH_COMMENT)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PATCH_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PATCH_NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_PATCH_STATUS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "PATCH_STATUS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PATCH_STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PATCH_STATUS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DEFAULT_ON_EXPORT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DEFAULT_ON_EXPORT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEFAULT_ON_EXPORT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEFAULT_ON_EXPORT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ATTRIBUTE1", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ATTRIBUTE1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ATTRIBUTE2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ATTRIBUTE2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ATTRIBUTE3", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ATTRIBUTE3", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ATTRIBUTE4", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE4", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ATTRIBUTE4", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE4", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_PATCH_COMMENT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "PATCH_COMMENT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PATCH_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PATCH_COMMENT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""FLOWS_020100"".""WWV_FLOW_PATCHES"" (""ID"", ""FLOW_ID"", ""PATCH_NAME"", ""PATCH_STATUS"", ""SECURITY_GROUP_ID"", ""DEFAULT_ON_EXPORT"", ""ATTRIBUTE1"", ""ATTRIBUTE2"", ""ATTRIBUTE3"", ""ATTRIBUTE4"", ""LAST_UPDATED_BY"", ""LAST_UPDATED_ON"", ""PATCH_COMMENT"") VALUES (:ID, :FLOW_ID, :PATCH_NAME, :PATCH_STATUS, :SECURITY_GROUP_ID, :DEFAULT_ON_EXPORT, :ATTRIBUTE1, :ATTRIBUTE2, :ATTRIBUTE3, :ATTRIBUTE4, :LAST_UPDATED_BY, :LAST_UPDATED_ON, :PATCH_COMMENT)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PATCH_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PATCH_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PATCH_STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PATCH_STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEFAULT_ON_EXPORT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEFAULT_ON_EXPORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ATTRIBUTE1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ATTRIBUTE2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ATTRIBUTE3", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ATTRIBUTE4", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PATCH_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PATCH_COMMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"FLOWS_020100\".\"WWV_FLOW_PATCHES\" SET \"ID\" = :ID, \"FLOW_ID\" = :FLOW_ID, \"P" +
                "ATCH_NAME\" = :PATCH_NAME, \"PATCH_STATUS\" = :PATCH_STATUS, \"SECURITY_GROUP_ID\" = " +
                ":SECURITY_GROUP_ID, \"DEFAULT_ON_EXPORT\" = :DEFAULT_ON_EXPORT, \"ATTRIBUTE1\" = :AT" +
                "TRIBUTE1, \"ATTRIBUTE2\" = :ATTRIBUTE2, \"ATTRIBUTE3\" = :ATTRIBUTE3, \"ATTRIBUTE4\" =" +
                " :ATTRIBUTE4, \"LAST_UPDATED_BY\" = :LAST_UPDATED_BY, \"LAST_UPDATED_ON\" = :LAST_UP" +
                "DATED_ON, \"PATCH_COMMENT\" = :PATCH_COMMENT WHERE ((\"ID\" = :Original_ID) AND (\"FL" +
                "OW_ID\" = :Original_FLOW_ID) AND (\"PATCH_NAME\" = :Original_PATCH_NAME) AND ((:IsN" +
                "ull_PATCH_STATUS = 1 AND \"PATCH_STATUS\" IS NULL) OR (\"PATCH_STATUS\" = :Original_" +
                "PATCH_STATUS)) AND (\"SECURITY_GROUP_ID\" = :Original_SECURITY_GROUP_ID) AND ((:Is" +
                "Null_DEFAULT_ON_EXPORT = 1 AND \"DEFAULT_ON_EXPORT\" IS NULL) OR (\"DEFAULT_ON_EXPO" +
                "RT\" = :Original_DEFAULT_ON_EXPORT)) AND ((:IsNull_ATTRIBUTE1 = 1 AND \"ATTRIBUTE1" +
                "\" IS NULL) OR (\"ATTRIBUTE1\" = :Original_ATTRIBUTE1)) AND ((:IsNull_ATTRIBUTE2 = " +
                "1 AND \"ATTRIBUTE2\" IS NULL) OR (\"ATTRIBUTE2\" = :Original_ATTRIBUTE2)) AND ((:IsN" +
                "ull_ATTRIBUTE3 = 1 AND \"ATTRIBUTE3\" IS NULL) OR (\"ATTRIBUTE3\" = :Original_ATTRIB" +
                "UTE3)) AND ((:IsNull_ATTRIBUTE4 = 1 AND \"ATTRIBUTE4\" IS NULL) OR (\"ATTRIBUTE4\" =" +
                " :Original_ATTRIBUTE4)) AND ((:IsNull_LAST_UPDATED_BY = 1 AND \"LAST_UPDATED_BY\" " +
                "IS NULL) OR (\"LAST_UPDATED_BY\" = :Original_LAST_UPDATED_BY)) AND ((:IsNull_LAST_" +
                "UPDATED_ON = 1 AND \"LAST_UPDATED_ON\" IS NULL) OR (\"LAST_UPDATED_ON\" = :Original_" +
                "LAST_UPDATED_ON)) AND ((:IsNull_PATCH_COMMENT = 1 AND \"PATCH_COMMENT\" IS NULL) O" +
                "R (\"PATCH_COMMENT\" = :Original_PATCH_COMMENT)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PATCH_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PATCH_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PATCH_STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PATCH_STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEFAULT_ON_EXPORT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEFAULT_ON_EXPORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ATTRIBUTE1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ATTRIBUTE2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ATTRIBUTE3", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ATTRIBUTE4", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PATCH_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PATCH_COMMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FLOW_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FLOW_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PATCH_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PATCH_NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_PATCH_STATUS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "PATCH_STATUS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PATCH_STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PATCH_STATUS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SECURITY_GROUP_ID", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SECURITY_GROUP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DEFAULT_ON_EXPORT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DEFAULT_ON_EXPORT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEFAULT_ON_EXPORT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEFAULT_ON_EXPORT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ATTRIBUTE1", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ATTRIBUTE1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ATTRIBUTE2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ATTRIBUTE2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ATTRIBUTE3", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ATTRIBUTE3", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ATTRIBUTE4", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE4", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ATTRIBUTE4", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ATTRIBUTE4", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_BY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_BY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LAST_UPDATED_ON", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LAST_UPDATED_ON", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_PATCH_COMMENT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "PATCH_COMMENT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PATCH_COMMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PATCH_COMMENT", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, FLOW_ID, PATCH_NAME, PATCH_STATUS, SECURITY_GROUP_ID, DEFAULT_ON_EXPOR" +
                "T, ATTRIBUTE1, ATTRIBUTE2, ATTRIBUTE3, ATTRIBUTE4, LAST_UPDATED_BY, LAST_UPDATED" +
                "_ON, PATCH_COMMENT FROM FLOWS_020100.WWV_FLOW_PATCHES";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_PATCHESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_PATCHESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_PATCHESDataTable dataTable = new DataSet1.WWV_FLOW_PATCHESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.WWV_FLOW_PATCHESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "WWV_FLOW_PATCHES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, decimal Original_FLOW_ID, string Original_PATCH_NAME, string Original_PATCH_STATUS, decimal Original_SECURITY_GROUP_ID, string Original_DEFAULT_ON_EXPORT, string Original_ATTRIBUTE1, string Original_ATTRIBUTE2, string Original_ATTRIBUTE3, string Original_ATTRIBUTE4, string Original_LAST_UPDATED_BY, global::System.Nullable<global::System.DateTime> Original_LAST_UPDATED_ON, string Original_PATCH_COMMENT) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_FLOW_ID));
            if ((Original_PATCH_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_PATCH_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PATCH_NAME));
            }
            if ((Original_PATCH_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PATCH_STATUS));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_SECURITY_GROUP_ID));
            if ((Original_DEFAULT_ON_EXPORT == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_DEFAULT_ON_EXPORT));
            }
            if ((Original_ATTRIBUTE1 == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ATTRIBUTE1));
            }
            if ((Original_ATTRIBUTE2 == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ATTRIBUTE2));
            }
            if ((Original_ATTRIBUTE3 == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_ATTRIBUTE3));
            }
            if ((Original_ATTRIBUTE4 == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_ATTRIBUTE4));
            }
            if ((Original_LAST_UPDATED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_LAST_UPDATED_BY));
            }
            if ((Original_LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_PATCH_COMMENT == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_PATCH_COMMENT));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID, decimal FLOW_ID, string PATCH_NAME, string PATCH_STATUS, decimal SECURITY_GROUP_ID, string DEFAULT_ON_EXPORT, string ATTRIBUTE1, string ATTRIBUTE2, string ATTRIBUTE3, string ATTRIBUTE4, string LAST_UPDATED_BY, global::System.Nullable<global::System.DateTime> LAST_UPDATED_ON, string PATCH_COMMENT) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(FLOW_ID));
            if ((PATCH_NAME == null)) {
                throw new global::System.ArgumentNullException("PATCH_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PATCH_NAME));
            }
            if ((PATCH_STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PATCH_STATUS));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(SECURITY_GROUP_ID));
            if ((DEFAULT_ON_EXPORT == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DEFAULT_ON_EXPORT));
            }
            if ((ATTRIBUTE1 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ATTRIBUTE1));
            }
            if ((ATTRIBUTE2 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ATTRIBUTE2));
            }
            if ((ATTRIBUTE3 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ATTRIBUTE3));
            }
            if ((ATTRIBUTE4 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ATTRIBUTE4));
            }
            if ((LAST_UPDATED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(LAST_UPDATED_BY));
            }
            if ((LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((PATCH_COMMENT == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(PATCH_COMMENT));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ID, 
                    decimal FLOW_ID, 
                    string PATCH_NAME, 
                    string PATCH_STATUS, 
                    decimal SECURITY_GROUP_ID, 
                    string DEFAULT_ON_EXPORT, 
                    string ATTRIBUTE1, 
                    string ATTRIBUTE2, 
                    string ATTRIBUTE3, 
                    string ATTRIBUTE4, 
                    string LAST_UPDATED_BY, 
                    global::System.Nullable<global::System.DateTime> LAST_UPDATED_ON, 
                    string PATCH_COMMENT, 
                    decimal Original_ID, 
                    decimal Original_FLOW_ID, 
                    string Original_PATCH_NAME, 
                    string Original_PATCH_STATUS, 
                    decimal Original_SECURITY_GROUP_ID, 
                    string Original_DEFAULT_ON_EXPORT, 
                    string Original_ATTRIBUTE1, 
                    string Original_ATTRIBUTE2, 
                    string Original_ATTRIBUTE3, 
                    string Original_ATTRIBUTE4, 
                    string Original_LAST_UPDATED_BY, 
                    global::System.Nullable<global::System.DateTime> Original_LAST_UPDATED_ON, 
                    string Original_PATCH_COMMENT) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(FLOW_ID));
            if ((PATCH_NAME == null)) {
                throw new global::System.ArgumentNullException("PATCH_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PATCH_NAME));
            }
            if ((PATCH_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PATCH_STATUS));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(SECURITY_GROUP_ID));
            if ((DEFAULT_ON_EXPORT == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DEFAULT_ON_EXPORT));
            }
            if ((ATTRIBUTE1 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ATTRIBUTE1));
            }
            if ((ATTRIBUTE2 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ATTRIBUTE2));
            }
            if ((ATTRIBUTE3 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ATTRIBUTE3));
            }
            if ((ATTRIBUTE4 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ATTRIBUTE4));
            }
            if ((LAST_UPDATED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(LAST_UPDATED_BY));
            }
            if ((LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((PATCH_COMMENT == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(PATCH_COMMENT));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_FLOW_ID));
            if ((Original_PATCH_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_PATCH_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_PATCH_NAME));
            }
            if ((Original_PATCH_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_PATCH_STATUS));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_SECURITY_GROUP_ID));
            if ((Original_DEFAULT_ON_EXPORT == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_DEFAULT_ON_EXPORT));
            }
            if ((Original_ATTRIBUTE1 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_ATTRIBUTE1));
            }
            if ((Original_ATTRIBUTE2 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_ATTRIBUTE2));
            }
            if ((Original_ATTRIBUTE3 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_ATTRIBUTE3));
            }
            if ((Original_ATTRIBUTE4 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_ATTRIBUTE4));
            }
            if ((Original_LAST_UPDATED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_LAST_UPDATED_BY));
            }
            if ((Original_LAST_UPDATED_ON.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_LAST_UPDATED_ON.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_PATCH_COMMENT == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_PATCH_COMMENT));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal FLOW_ID, 
                    string PATCH_NAME, 
                    string PATCH_STATUS, 
                    decimal SECURITY_GROUP_ID, 
                    string DEFAULT_ON_EXPORT, 
                    string ATTRIBUTE1, 
                    string ATTRIBUTE2, 
                    string ATTRIBUTE3, 
                    string ATTRIBUTE4, 
                    string LAST_UPDATED_BY, 
                    global::System.Nullable<global::System.DateTime> LAST_UPDATED_ON, 
                    string PATCH_COMMENT, 
                    decimal Original_ID, 
                    decimal Original_FLOW_ID, 
                    string Original_PATCH_NAME, 
                    string Original_PATCH_STATUS, 
                    decimal Original_SECURITY_GROUP_ID, 
                    string Original_DEFAULT_ON_EXPORT, 
                    string Original_ATTRIBUTE1, 
                    string Original_ATTRIBUTE2, 
                    string Original_ATTRIBUTE3, 
                    string Original_ATTRIBUTE4, 
                    string Original_LAST_UPDATED_BY, 
                    global::System.Nullable<global::System.DateTime> Original_LAST_UPDATED_ON, 
                    string Original_PATCH_COMMENT) {
            return this.Update(Original_ID, FLOW_ID, PATCH_NAME, PATCH_STATUS, SECURITY_GROUP_ID, DEFAULT_ON_EXPORT, ATTRIBUTE1, ATTRIBUTE2, ATTRIBUTE3, ATTRIBUTE4, LAST_UPDATED_BY, LAST_UPDATED_ON, PATCH_COMMENT, Original_ID, Original_FLOW_ID, Original_PATCH_NAME, Original_PATCH_STATUS, Original_SECURITY_GROUP_ID, Original_DEFAULT_ON_EXPORT, Original_ATTRIBUTE1, Original_ATTRIBUTE2, Original_ATTRIBUTE3, Original_ATTRIBUTE4, Original_LAST_UPDATED_BY, Original_LAST_UPDATED_ON, Original_PATCH_COMMENT);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_TEMP_TABLETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_TEMP_TABLETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_TEMP_TABLE";
            tableMapping.ColumnMappings.Add("R", "R");
            tableMapping.ColumnMappings.Add("C001", "C001");
            tableMapping.ColumnMappings.Add("C002", "C002");
            tableMapping.ColumnMappings.Add("C003", "C003");
            tableMapping.ColumnMappings.Add("C004", "C004");
            tableMapping.ColumnMappings.Add("C005", "C005");
            tableMapping.ColumnMappings.Add("C006", "C006");
            tableMapping.ColumnMappings.Add("C007", "C007");
            tableMapping.ColumnMappings.Add("C008", "C008");
            tableMapping.ColumnMappings.Add("C009", "C009");
            tableMapping.ColumnMappings.Add("C010", "C010");
            tableMapping.ColumnMappings.Add("C011", "C011");
            tableMapping.ColumnMappings.Add("C012", "C012");
            tableMapping.ColumnMappings.Add("C013", "C013");
            tableMapping.ColumnMappings.Add("C014", "C014");
            tableMapping.ColumnMappings.Add("C015", "C015");
            tableMapping.ColumnMappings.Add("C016", "C016");
            tableMapping.ColumnMappings.Add("C017", "C017");
            tableMapping.ColumnMappings.Add("C018", "C018");
            tableMapping.ColumnMappings.Add("C019", "C019");
            tableMapping.ColumnMappings.Add("C020", "C020");
            tableMapping.ColumnMappings.Add("C021", "C021");
            tableMapping.ColumnMappings.Add("C022", "C022");
            tableMapping.ColumnMappings.Add("C023", "C023");
            tableMapping.ColumnMappings.Add("C024", "C024");
            tableMapping.ColumnMappings.Add("C025", "C025");
            tableMapping.ColumnMappings.Add("C026", "C026");
            tableMapping.ColumnMappings.Add("C027", "C027");
            tableMapping.ColumnMappings.Add("C028", "C028");
            tableMapping.ColumnMappings.Add("C029", "C029");
            tableMapping.ColumnMappings.Add("C030", "C030");
            tableMapping.ColumnMappings.Add("C031", "C031");
            tableMapping.ColumnMappings.Add("C032", "C032");
            tableMapping.ColumnMappings.Add("C033", "C033");
            tableMapping.ColumnMappings.Add("C034", "C034");
            tableMapping.ColumnMappings.Add("C035", "C035");
            tableMapping.ColumnMappings.Add("C036", "C036");
            tableMapping.ColumnMappings.Add("C037", "C037");
            tableMapping.ColumnMappings.Add("C038", "C038");
            tableMapping.ColumnMappings.Add("C039", "C039");
            tableMapping.ColumnMappings.Add("C040", "C040");
            tableMapping.ColumnMappings.Add("C041", "C041");
            tableMapping.ColumnMappings.Add("C042", "C042");
            tableMapping.ColumnMappings.Add("C043", "C043");
            tableMapping.ColumnMappings.Add("C044", "C044");
            tableMapping.ColumnMappings.Add("C045", "C045");
            tableMapping.ColumnMappings.Add("C046", "C046");
            tableMapping.ColumnMappings.Add("C047", "C047");
            tableMapping.ColumnMappings.Add("C048", "C048");
            tableMapping.ColumnMappings.Add("C049", "C049");
            tableMapping.ColumnMappings.Add("C050", "C050");
            tableMapping.ColumnMappings.Add("C051", "C051");
            tableMapping.ColumnMappings.Add("C052", "C052");
            tableMapping.ColumnMappings.Add("C053", "C053");
            tableMapping.ColumnMappings.Add("C054", "C054");
            tableMapping.ColumnMappings.Add("C055", "C055");
            tableMapping.ColumnMappings.Add("C056", "C056");
            tableMapping.ColumnMappings.Add("C057", "C057");
            tableMapping.ColumnMappings.Add("C058", "C058");
            tableMapping.ColumnMappings.Add("C059", "C059");
            tableMapping.ColumnMappings.Add("C060", "C060");
            tableMapping.ColumnMappings.Add("C061", "C061");
            tableMapping.ColumnMappings.Add("C062", "C062");
            tableMapping.ColumnMappings.Add("C063", "C063");
            tableMapping.ColumnMappings.Add("C064", "C064");
            tableMapping.ColumnMappings.Add("C065", "C065");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""FLOWS_020100"".""WWV_FLOW_TEMP_TABLE"" (""R"", ""C001"", ""C002"", ""C003"", ""C004"", ""C005"", ""C006"", ""C007"", ""C008"", ""C009"", ""C010"", ""C011"", ""C012"", ""C013"", ""C014"", ""C015"", ""C016"", ""C017"", ""C018"", ""C019"", ""C020"", ""C021"", ""C022"", ""C023"", ""C024"", ""C025"", ""C026"", ""C027"", ""C028"", ""C029"", ""C030"", ""C031"", ""C032"", ""C033"", ""C034"", ""C035"", ""C036"", ""C037"", ""C038"", ""C039"", ""C040"", ""C041"", ""C042"", ""C043"", ""C044"", ""C045"", ""C046"", ""C047"", ""C048"", ""C049"", ""C050"", ""C051"", ""C052"", ""C053"", ""C054"", ""C055"", ""C056"", ""C057"", ""C058"", ""C059"", ""C060"", ""C061"", ""C062"", ""C063"", ""C064"", ""C065"") VALUES (:R, :C001, :C002, :C003, :C004, :C005, :C006, :C007, :C008, :C009, :C010, :C011, :C012, :C013, :C014, :C015, :C016, :C017, :C018, :C019, :C020, :C021, :C022, :C023, :C024, :C025, :C026, :C027, :C028, :C029, :C030, :C031, :C032, :C033, :C034, :C035, :C036, :C037, :C038, :C039, :C040, :C041, :C042, :C043, :C044, :C045, :C046, :C047, :C048, :C049, :C050, :C051, :C052, :C053, :C054, :C055, :C056, :C057, :C058, :C059, :C060, :C061, :C062, :C063, :C064, :C065)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("R", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "R", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C001", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C001", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C002", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C002", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C003", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C003", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C004", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C004", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C005", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C005", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C006", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C006", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C007", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C007", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C008", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C008", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C009", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C009", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C010", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C010", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C011", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C011", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C012", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C012", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C013", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C013", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C014", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C014", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C015", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C015", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C016", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C016", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C017", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C017", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C018", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C018", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C019", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C019", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C020", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C020", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C021", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C021", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C022", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C022", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C023", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C023", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C024", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C024", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C025", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C025", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C026", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C026", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C027", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C027", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C028", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C028", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C029", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C029", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C030", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C030", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C031", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C031", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C032", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C032", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C033", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C033", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C034", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C034", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C035", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C035", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C036", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C036", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C037", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C037", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C038", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C038", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C039", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C039", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C040", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C040", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C041", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C041", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C042", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C042", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C043", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C043", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C044", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C044", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C045", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C045", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C046", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C046", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C047", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C047", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C048", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C048", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C049", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C049", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C050", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C050", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C051", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C051", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C052", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C052", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C053", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C053", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C054", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C054", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C055", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C055", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C056", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C056", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C057", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C057", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C058", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C058", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C059", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C059", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C060", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C060", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C061", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C061", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C062", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C062", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C063", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C063", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C064", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C064", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("C065", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "C065", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT R, C001, C002, C003, C004, C005, C006, C007, C008, C009, C010, C011, C012, C013, C014, C015, C016, C017, C018, C019, C020, C021, C022, C023, C024, C025, C026, C027, C028, C029, C030, C031, C032, C033, C034, C035, C036, C037, C038, C039, C040, C041, C042, C043, C044, C045, C046, C047, C048, C049, C050, C051, C052, C053, C054, C055, C056, C057, C058, C059, C060, C061, C062, C063, C064, C065 FROM FLOWS_020100.WWV_FLOW_TEMP_TABLE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_TEMP_TABLEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_TEMP_TABLEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_TEMP_TABLEDataTable dataTable = new DataSet1.WWV_FLOW_TEMP_TABLEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.WWV_FLOW_TEMP_TABLEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "WWV_FLOW_TEMP_TABLE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<decimal> R, 
                    string C001, 
                    string C002, 
                    string C003, 
                    string C004, 
                    string C005, 
                    string C006, 
                    string C007, 
                    string C008, 
                    string C009, 
                    string C010, 
                    string C011, 
                    string C012, 
                    string C013, 
                    string C014, 
                    string C015, 
                    string C016, 
                    string C017, 
                    string C018, 
                    string C019, 
                    string C020, 
                    string C021, 
                    string C022, 
                    string C023, 
                    string C024, 
                    string C025, 
                    string C026, 
                    string C027, 
                    string C028, 
                    string C029, 
                    string C030, 
                    string C031, 
                    string C032, 
                    string C033, 
                    string C034, 
                    string C035, 
                    string C036, 
                    string C037, 
                    string C038, 
                    string C039, 
                    string C040, 
                    string C041, 
                    string C042, 
                    string C043, 
                    string C044, 
                    string C045, 
                    string C046, 
                    string C047, 
                    string C048, 
                    string C049, 
                    string C050, 
                    string C051, 
                    string C052, 
                    string C053, 
                    string C054, 
                    string C055, 
                    string C056, 
                    string C057, 
                    string C058, 
                    string C059, 
                    string C060, 
                    string C061, 
                    string C062, 
                    string C063, 
                    string C064, 
                    string C065) {
            if ((R.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(R.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((C001 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(C001));
            }
            if ((C002 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(C002));
            }
            if ((C003 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(C003));
            }
            if ((C004 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(C004));
            }
            if ((C005 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(C005));
            }
            if ((C006 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(C006));
            }
            if ((C007 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(C007));
            }
            if ((C008 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(C008));
            }
            if ((C009 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(C009));
            }
            if ((C010 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(C010));
            }
            if ((C011 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(C011));
            }
            if ((C012 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(C012));
            }
            if ((C013 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(C013));
            }
            if ((C014 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(C014));
            }
            if ((C015 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(C015));
            }
            if ((C016 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(C016));
            }
            if ((C017 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(C017));
            }
            if ((C018 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(C018));
            }
            if ((C019 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(C019));
            }
            if ((C020 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(C020));
            }
            if ((C021 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(C021));
            }
            if ((C022 == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(C022));
            }
            if ((C023 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(C023));
            }
            if ((C024 == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(C024));
            }
            if ((C025 == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(C025));
            }
            if ((C026 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(C026));
            }
            if ((C027 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(C027));
            }
            if ((C028 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(C028));
            }
            if ((C029 == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(C029));
            }
            if ((C030 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(C030));
            }
            if ((C031 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(C031));
            }
            if ((C032 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(C032));
            }
            if ((C033 == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(C033));
            }
            if ((C034 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(C034));
            }
            if ((C035 == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(C035));
            }
            if ((C036 == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(C036));
            }
            if ((C037 == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(C037));
            }
            if ((C038 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(C038));
            }
            if ((C039 == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(C039));
            }
            if ((C040 == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(C040));
            }
            if ((C041 == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(C041));
            }
            if ((C042 == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(C042));
            }
            if ((C043 == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(C043));
            }
            if ((C044 == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(C044));
            }
            if ((C045 == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(C045));
            }
            if ((C046 == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(C046));
            }
            if ((C047 == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(C047));
            }
            if ((C048 == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(C048));
            }
            if ((C049 == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(C049));
            }
            if ((C050 == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(C050));
            }
            if ((C051 == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(C051));
            }
            if ((C052 == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(C052));
            }
            if ((C053 == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(C053));
            }
            if ((C054 == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(C054));
            }
            if ((C055 == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(C055));
            }
            if ((C056 == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(C056));
            }
            if ((C057 == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(C057));
            }
            if ((C058 == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(C058));
            }
            if ((C059 == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(C059));
            }
            if ((C060 == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(C060));
            }
            if ((C061 == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(C061));
            }
            if ((C062 == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(C062));
            }
            if ((C063 == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(C063));
            }
            if ((C064 == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(C064));
            }
            if ((C065 == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(C065));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_CLICKTHRU_LOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_CLICKTHRU_LOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_CLICKTHRU_LOG";
            tableMapping.ColumnMappings.Add("CLICKDATE", "CLICKDATE");
            tableMapping.ColumnMappings.Add("CATEGORY", "CATEGORY");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("FLOW_USER", "FLOW_USER");
            tableMapping.ColumnMappings.Add("IP", "IP");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CLICKDATE, CATEGORY, ID, FLOW_USER, IP FROM FLOWS_020100.WWV_FLOW_CLICKTHR" +
                "U_LOG";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_CLICKTHRU_LOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_CLICKTHRU_LOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_CLICKTHRU_LOGDataTable dataTable = new DataSet1.WWV_FLOW_CLICKTHRU_LOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_COLLECTIONSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_COLLECTIONSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_COLLECTIONS";
            tableMapping.ColumnMappings.Add("COLLECTION_NAME", "COLLECTION_NAME");
            tableMapping.ColumnMappings.Add("SEQ_ID", "SEQ_ID");
            tableMapping.ColumnMappings.Add("C001", "C001");
            tableMapping.ColumnMappings.Add("C002", "C002");
            tableMapping.ColumnMappings.Add("C003", "C003");
            tableMapping.ColumnMappings.Add("C004", "C004");
            tableMapping.ColumnMappings.Add("C005", "C005");
            tableMapping.ColumnMappings.Add("C006", "C006");
            tableMapping.ColumnMappings.Add("C007", "C007");
            tableMapping.ColumnMappings.Add("C008", "C008");
            tableMapping.ColumnMappings.Add("C009", "C009");
            tableMapping.ColumnMappings.Add("C010", "C010");
            tableMapping.ColumnMappings.Add("C011", "C011");
            tableMapping.ColumnMappings.Add("C012", "C012");
            tableMapping.ColumnMappings.Add("C013", "C013");
            tableMapping.ColumnMappings.Add("C014", "C014");
            tableMapping.ColumnMappings.Add("C015", "C015");
            tableMapping.ColumnMappings.Add("C016", "C016");
            tableMapping.ColumnMappings.Add("C017", "C017");
            tableMapping.ColumnMappings.Add("C018", "C018");
            tableMapping.ColumnMappings.Add("C019", "C019");
            tableMapping.ColumnMappings.Add("C020", "C020");
            tableMapping.ColumnMappings.Add("C021", "C021");
            tableMapping.ColumnMappings.Add("C022", "C022");
            tableMapping.ColumnMappings.Add("C023", "C023");
            tableMapping.ColumnMappings.Add("C024", "C024");
            tableMapping.ColumnMappings.Add("C025", "C025");
            tableMapping.ColumnMappings.Add("C026", "C026");
            tableMapping.ColumnMappings.Add("C027", "C027");
            tableMapping.ColumnMappings.Add("C028", "C028");
            tableMapping.ColumnMappings.Add("C029", "C029");
            tableMapping.ColumnMappings.Add("C030", "C030");
            tableMapping.ColumnMappings.Add("C031", "C031");
            tableMapping.ColumnMappings.Add("C032", "C032");
            tableMapping.ColumnMappings.Add("C033", "C033");
            tableMapping.ColumnMappings.Add("C034", "C034");
            tableMapping.ColumnMappings.Add("C035", "C035");
            tableMapping.ColumnMappings.Add("C036", "C036");
            tableMapping.ColumnMappings.Add("C037", "C037");
            tableMapping.ColumnMappings.Add("C038", "C038");
            tableMapping.ColumnMappings.Add("C039", "C039");
            tableMapping.ColumnMappings.Add("C040", "C040");
            tableMapping.ColumnMappings.Add("C041", "C041");
            tableMapping.ColumnMappings.Add("C042", "C042");
            tableMapping.ColumnMappings.Add("C043", "C043");
            tableMapping.ColumnMappings.Add("C044", "C044");
            tableMapping.ColumnMappings.Add("C045", "C045");
            tableMapping.ColumnMappings.Add("C046", "C046");
            tableMapping.ColumnMappings.Add("C047", "C047");
            tableMapping.ColumnMappings.Add("C048", "C048");
            tableMapping.ColumnMappings.Add("C049", "C049");
            tableMapping.ColumnMappings.Add("C050", "C050");
            tableMapping.ColumnMappings.Add("CLOB001", "CLOB001");
            tableMapping.ColumnMappings.Add("MD5_ORIGINAL", "MD5_ORIGINAL");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT COLLECTION_NAME, SEQ_ID, C001, C002, C003, C004, C005, C006, C007, C008, C009, C010, C011, C012, C013, C014, C015, C016, C017, C018, C019, C020, C021, C022, C023, C024, C025, C026, C027, C028, C029, C030, C031, C032, C033, C034, C035, C036, C037, C038, C039, C040, C041, C042, C043, C044, C045, C046, C047, C048, C049, C050, CLOB001, MD5_ORIGINAL FROM FLOWS_020100.WWV_FLOW_COLLECTIONS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_COLLECTIONSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_COLLECTIONSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_COLLECTIONSDataTable dataTable = new DataSet1.WWV_FLOW_COLLECTIONSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_FILESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_FILESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_FILES";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("FLOW_ID", "FLOW_ID");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            tableMapping.ColumnMappings.Add("FILENAME", "FILENAME");
            tableMapping.ColumnMappings.Add("TITLE", "TITLE");
            tableMapping.ColumnMappings.Add("MIME_TYPE", "MIME_TYPE");
            tableMapping.ColumnMappings.Add("DOC_SIZE", "DOC_SIZE");
            tableMapping.ColumnMappings.Add("DAD_CHARSET", "DAD_CHARSET");
            tableMapping.ColumnMappings.Add("CREATED_BY", "CREATED_BY");
            tableMapping.ColumnMappings.Add("CREATED_ON", "CREATED_ON");
            tableMapping.ColumnMappings.Add("UPDATED_BY", "UPDATED_BY");
            tableMapping.ColumnMappings.Add("UPDATED_ON", "UPDATED_ON");
            tableMapping.ColumnMappings.Add("LAST_UPDATED", "LAST_UPDATED");
            tableMapping.ColumnMappings.Add("CONTENT_TYPE", "CONTENT_TYPE");
            tableMapping.ColumnMappings.Add("BLOB_CONTENT", "BLOB_CONTENT");
            tableMapping.ColumnMappings.Add("LANGUAGE", "LANGUAGE");
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION");
            tableMapping.ColumnMappings.Add("FILE_TYPE", "FILE_TYPE");
            tableMapping.ColumnMappings.Add("FILE_CHARSET", "FILE_CHARSET");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, FLOW_ID, NAME, FILENAME, TITLE, MIME_TYPE, DOC_SIZE, DAD_CHARSET, CREA" +
                "TED_BY, CREATED_ON, UPDATED_BY, UPDATED_ON, LAST_UPDATED, CONTENT_TYPE, BLOB_CON" +
                "TENT, \"LANGUAGE\", DESCRIPTION, FILE_TYPE, FILE_CHARSET FROM FLOWS_020100.WWV_FLO" +
                "W_FILES";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_FILESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_FILESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_FILESDataTable dataTable = new DataSet1.WWV_FLOW_FILESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_GROUP_USERSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_GROUP_USERSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_GROUP_USERS";
            tableMapping.ColumnMappings.Add("GROUP_ID", "GROUP_ID");
            tableMapping.ColumnMappings.Add("GROUP_NAME", "GROUP_NAME");
            tableMapping.ColumnMappings.Add("USER_ID", "USER_ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT GROUP_ID, GROUP_NAME, USER_ID FROM FLOWS_020100.WWV_FLOW_GROUP_USERS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_GROUP_USERSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_GROUP_USERSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_GROUP_USERSDataTable dataTable = new DataSet1.WWV_FLOW_GROUP_USERSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_HOURS_12TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_HOURS_12TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_HOURS_12";
            tableMapping.ColumnMappings.Add("HOUR_VALUE", "HOUR_VALUE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT HOUR_VALUE FROM FLOWS_020100.WWV_FLOW_HOURS_12";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_HOURS_12DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_HOURS_12DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_HOURS_12DataTable dataTable = new DataSet1.WWV_FLOW_HOURS_12DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_HOURS_24TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_HOURS_24TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_HOURS_24";
            tableMapping.ColumnMappings.Add("HOUR_VALUE", "HOUR_VALUE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT HOUR_VALUE FROM FLOWS_020100.WWV_FLOW_HOURS_24";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_HOURS_24DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_HOURS_24DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_HOURS_24DataTable dataTable = new DataSet1.WWV_FLOW_HOURS_24DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_MINUTESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_MINUTESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_MINUTES";
            tableMapping.ColumnMappings.Add("MINUTE_VALUE", "MINUTE_VALUE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MINUTE_VALUE FROM FLOWS_020100.WWV_FLOW_MINUTES";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_MINUTESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_MINUTESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_MINUTESDataTable dataTable = new DataSet1.WWV_FLOW_MINUTESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_MINUTES_5TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_MINUTES_5TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_MINUTES_5";
            tableMapping.ColumnMappings.Add("MINUTE_VALUE", "MINUTE_VALUE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MINUTE_VALUE FROM FLOWS_020100.WWV_FLOW_MINUTES_5";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_MINUTES_5DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_MINUTES_5DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_MINUTES_5DataTable dataTable = new DataSet1.WWV_FLOW_MINUTES_5DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_MONTHS_MONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_MONTHS_MONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_MONTHS_MON";
            tableMapping.ColumnMappings.Add("MONTH_DISPLAY", "MONTH_DISPLAY");
            tableMapping.ColumnMappings.Add("MONTH_VALUE", "MONTH_VALUE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MONTH_DISPLAY, MONTH_VALUE FROM FLOWS_020100.WWV_FLOW_MONTHS_MON";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_MONTHS_MONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_MONTHS_MONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_MONTHS_MONDataTable dataTable = new DataSet1.WWV_FLOW_MONTHS_MONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_MONTHS_MONTHTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_MONTHS_MONTHTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_MONTHS_MONTH";
            tableMapping.ColumnMappings.Add("MONTH_DISPLAY", "MONTH_DISPLAY");
            tableMapping.ColumnMappings.Add("MONTH_VALUE", "MONTH_VALUE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MONTH_DISPLAY, MONTH_VALUE FROM FLOWS_020100.WWV_FLOW_MONTHS_MONTH";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_MONTHS_MONTHDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_MONTHS_MONTHDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_MONTHS_MONTHDataTable dataTable = new DataSet1.WWV_FLOW_MONTHS_MONTHDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_PLSQL_JOBSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_PLSQL_JOBSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_PLSQL_JOBS";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("JOB", "JOB");
            tableMapping.ColumnMappings.Add("FLOW_ID", "FLOW_ID");
            tableMapping.ColumnMappings.Add("OWNER", "OWNER");
            tableMapping.ColumnMappings.Add("ENDUSER", "ENDUSER");
            tableMapping.ColumnMappings.Add("CREATED", "CREATED");
            tableMapping.ColumnMappings.Add("MODIFIED", "MODIFIED");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("SYSTEM_STATUS", "SYSTEM_STATUS");
            tableMapping.ColumnMappings.Add("SYSTEM_MODIFIED", "SYSTEM_MODIFIED");
            tableMapping.ColumnMappings.Add("SECURITY_GROUP_ID", "SECURITY_GROUP_ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, JOB, FLOW_ID, OWNER, ENDUSER, CREATED, MODIFIED, STATUS, SYSTEM_STATUS" +
                ", SYSTEM_MODIFIED, SECURITY_GROUP_ID FROM FLOWS_020100.WWV_FLOW_PLSQL_JOBS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_PLSQL_JOBSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_PLSQL_JOBSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_PLSQL_JOBSDataTable dataTable = new DataSet1.WWV_FLOW_PLSQL_JOBSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_USER_ACTIVITY_LOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_USER_ACTIVITY_LOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_USER_ACTIVITY_LOG";
            tableMapping.ColumnMappings.Add("TIME_STAMP", "TIME_STAMP");
            tableMapping.ColumnMappings.Add("COMPONENT_TYPE", "COMPONENT_TYPE");
            tableMapping.ColumnMappings.Add("COMPONENT_NAME", "COMPONENT_NAME");
            tableMapping.ColumnMappings.Add("COMPONENT_ATTRIBUTE", "COMPONENT_ATTRIBUTE");
            tableMapping.ColumnMappings.Add("INFORMATION", "INFORMATION");
            tableMapping.ColumnMappings.Add("ELAP", "ELAP");
            tableMapping.ColumnMappings.Add("NUM_ROWS", "NUM_ROWS");
            tableMapping.ColumnMappings.Add("USERID", "USERID");
            tableMapping.ColumnMappings.Add("IP_ADDRESS", "IP_ADDRESS");
            tableMapping.ColumnMappings.Add("USER_AGENT", "USER_AGENT");
            tableMapping.ColumnMappings.Add("FLOW_ID", "FLOW_ID");
            tableMapping.ColumnMappings.Add("STEP_ID", "STEP_ID");
            tableMapping.ColumnMappings.Add("SESSION_ID", "SESSION_ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TIME_STAMP, COMPONENT_TYPE, COMPONENT_NAME, COMPONENT_ATTRIBUTE, INFORMATI" +
                "ON, ELAP, NUM_ROWS, USERID, IP_ADDRESS, USER_AGENT, FLOW_ID, STEP_ID, SESSION_ID" +
                " FROM FLOWS_020100.WWV_FLOW_USER_ACTIVITY_LOG";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_USER_ACTIVITY_LOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_USER_ACTIVITY_LOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_USER_ACTIVITY_LOGDataTable dataTable = new DataSet1.WWV_FLOW_USER_ACTIVITY_LOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_USER_MAIL_LOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_USER_MAIL_LOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_USER_MAIL_LOG";
            tableMapping.ColumnMappings.Add("MAIL_TO", "MAIL_TO");
            tableMapping.ColumnMappings.Add("MAIL_FROM", "MAIL_FROM");
            tableMapping.ColumnMappings.Add("MAIL_SUBJ", "MAIL_SUBJ");
            tableMapping.ColumnMappings.Add("MAIL_CC", "MAIL_CC");
            tableMapping.ColumnMappings.Add("MAIL_BCC", "MAIL_BCC");
            tableMapping.ColumnMappings.Add("LAST_UPDATED_ON", "LAST_UPDATED_ON");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MAIL_TO, MAIL_FROM, MAIL_SUBJ, MAIL_CC, MAIL_BCC, LAST_UPDATED_ON FROM FLO" +
                "WS_020100.WWV_FLOW_USER_MAIL_LOG";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_USER_MAIL_LOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_USER_MAIL_LOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_USER_MAIL_LOGDataTable dataTable = new DataSet1.WWV_FLOW_USER_MAIL_LOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_USER_MAIL_QUEUETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_USER_MAIL_QUEUETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_USER_MAIL_QUEUE";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("MAIL_TO", "MAIL_TO");
            tableMapping.ColumnMappings.Add("MAIL_FROM", "MAIL_FROM");
            tableMapping.ColumnMappings.Add("MAIL_SUBJ", "MAIL_SUBJ");
            tableMapping.ColumnMappings.Add("MAIL_CC", "MAIL_CC");
            tableMapping.ColumnMappings.Add("MAIL_BCC", "MAIL_BCC");
            tableMapping.ColumnMappings.Add("MAIL_BODY", "MAIL_BODY");
            tableMapping.ColumnMappings.Add("MAIL_BODY_HTML", "MAIL_BODY_HTML");
            tableMapping.ColumnMappings.Add("LAST_UPDATED_BY", "LAST_UPDATED_BY");
            tableMapping.ColumnMappings.Add("LAST_UPDATED_ON", "LAST_UPDATED_ON");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, MAIL_TO, MAIL_FROM, MAIL_SUBJ, MAIL_CC, MAIL_BCC, MAIL_BODY, MAIL_BODY" +
                "_HTML, LAST_UPDATED_BY, LAST_UPDATED_ON FROM FLOWS_020100.WWV_FLOW_USER_MAIL_QUE" +
                "UE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_USER_MAIL_QUEUEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_USER_MAIL_QUEUEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_USER_MAIL_QUEUEDataTable dataTable = new DataSet1.WWV_FLOW_USER_MAIL_QUEUEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_USERSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_USERSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_USERS";
            tableMapping.ColumnMappings.Add("USER_ID", "USER_ID");
            tableMapping.ColumnMappings.Add("USER_NAME", "USER_NAME");
            tableMapping.ColumnMappings.Add("FIRST_NAME", "FIRST_NAME");
            tableMapping.ColumnMappings.Add("LAST_NAME", "LAST_NAME");
            tableMapping.ColumnMappings.Add("KNOWN_AS", "KNOWN_AS");
            tableMapping.ColumnMappings.Add("LAST_UPDATE_DATE", "LAST_UPDATE_DATE");
            tableMapping.ColumnMappings.Add("LAST_UPDATED_BY", "LAST_UPDATED_BY");
            tableMapping.ColumnMappings.Add("CREATION_DATE", "CREATION_DATE");
            tableMapping.ColumnMappings.Add("CREATED_BY", "CREATED_BY");
            tableMapping.ColumnMappings.Add("START_DATE", "START_DATE");
            tableMapping.ColumnMappings.Add("END_DATE", "END_DATE");
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION");
            tableMapping.ColumnMappings.Add("PASSWORD_DATE", "PASSWORD_DATE");
            tableMapping.ColumnMappings.Add("PASSWORD_ACCESSES_LEFT", "PASSWORD_ACCESSES_LEFT");
            tableMapping.ColumnMappings.Add("PASSWORD_LIFESPAN_ACCESSES", "PASSWORD_LIFESPAN_ACCESSES");
            tableMapping.ColumnMappings.Add("PASSWORD_LIFESPAN_DAYS", "PASSWORD_LIFESPAN_DAYS");
            tableMapping.ColumnMappings.Add("EMPLOYEE_ID", "EMPLOYEE_ID");
            tableMapping.ColumnMappings.Add("PERSON_TYPE", "PERSON_TYPE");
            tableMapping.ColumnMappings.Add("EMAIL_ADDRESS", "EMAIL_ADDRESS");
            tableMapping.ColumnMappings.Add("PERSON_ID", "PERSON_ID");
            tableMapping.ColumnMappings.Add("SECURITY_GROUP_ID", "SECURITY_GROUP_ID");
            tableMapping.ColumnMappings.Add("WEB_PASSWORD", "WEB_PASSWORD");
            tableMapping.ColumnMappings.Add("WEB_PASSWORD_RAW", "WEB_PASSWORD_RAW");
            tableMapping.ColumnMappings.Add("DEFAULT_SCHEMA", "DEFAULT_SCHEMA");
            tableMapping.ColumnMappings.Add("ALLOW_ACCESS_TO_SCHEMAS", "ALLOW_ACCESS_TO_SCHEMAS");
            tableMapping.ColumnMappings.Add("ATTRIBUTE_01", "ATTRIBUTE_01");
            tableMapping.ColumnMappings.Add("ATTRIBUTE_02", "ATTRIBUTE_02");
            tableMapping.ColumnMappings.Add("ATTRIBUTE_03", "ATTRIBUTE_03");
            tableMapping.ColumnMappings.Add("ATTRIBUTE_04", "ATTRIBUTE_04");
            tableMapping.ColumnMappings.Add("ATTRIBUTE_05", "ATTRIBUTE_05");
            tableMapping.ColumnMappings.Add("ATTRIBUTE_06", "ATTRIBUTE_06");
            tableMapping.ColumnMappings.Add("ATTRIBUTE_07", "ATTRIBUTE_07");
            tableMapping.ColumnMappings.Add("ATTRIBUTE_08", "ATTRIBUTE_08");
            tableMapping.ColumnMappings.Add("ATTRIBUTE_09", "ATTRIBUTE_09");
            tableMapping.ColumnMappings.Add("ATTRIBUTE_10", "ATTRIBUTE_10");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT USER_ID, USER_NAME, FIRST_NAME, LAST_NAME, KNOWN_AS, LAST_UPDATE_DATE, LAST_UPDATED_BY, CREATION_DATE, CREATED_BY, START_DATE, END_DATE, DESCRIPTION, PASSWORD_DATE, PASSWORD_ACCESSES_LEFT, PASSWORD_LIFESPAN_ACCESSES, PASSWORD_LIFESPAN_DAYS, EMPLOYEE_ID, PERSON_TYPE, EMAIL_ADDRESS, PERSON_ID, SECURITY_GROUP_ID, WEB_PASSWORD, WEB_PASSWORD_RAW, DEFAULT_SCHEMA, ALLOW_ACCESS_TO_SCHEMAS, ATTRIBUTE_01, ATTRIBUTE_02, ATTRIBUTE_03, ATTRIBUTE_04, ATTRIBUTE_05, ATTRIBUTE_06, ATTRIBUTE_07, ATTRIBUTE_08, ATTRIBUTE_09, ATTRIBUTE_10 FROM FLOWS_020100.WWV_FLOW_USERS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_USERSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_USERSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_USERSDataTable dataTable = new DataSet1.WWV_FLOW_USERSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WWV_FLOW_YEARSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WWV_FLOW_YEARSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WWV_FLOW_YEARS";
            tableMapping.ColumnMappings.Add("YEAR_VALUE", "YEAR_VALUE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT YEAR_VALUE FROM FLOWS_020100.WWV_FLOW_YEARS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WWV_FLOW_YEARSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WWV_FLOW_YEARSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WWV_FLOW_YEARSDataTable dataTable = new DataSet1.WWV_FLOW_YEARSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PASSWORDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PASSWORDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PASSWORD";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("USER_NAME", "USER_NAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"BIBI\".\"PASSWORD\" WHERE ((\"ID\" = :Original_ID) AND ((:IsNull_USER_NAM" +
                "E = 1 AND \"USER_NAME\" IS NULL) OR (\"USER_NAME\" = :Original_USER_NAME)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_USER_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "USER_NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_USER_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "USER_NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"BIBI\".\"PASSWORD\" (\"ID\", \"USER_NAME\") VALUES (:ID, :USER_NAME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("USER_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "USER_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"BIBI\".\"PASSWORD\" SET \"ID\" = :ID, \"USER_NAME\" = :USER_NAME WHERE ((\"ID\" = " +
                ":Original_ID) AND ((:IsNull_USER_NAME = 1 AND \"USER_NAME\" IS NULL) OR (\"USER_NAM" +
                "E\" = :Original_USER_NAME)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("USER_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "USER_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_USER_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "USER_NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_USER_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "USER_NAME", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::AISbibiDoctor1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, USER_NAME FROM BIBI.\"PASSWORD\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.PASSWORDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.PASSWORDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.PASSWORDDataTable dataTable = new DataSet1.PASSWORDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.PASSWORDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "PASSWORD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ID, string Original_USER_NAME) {
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ID));
            }
            if ((Original_USER_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_USER_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ID, string USER_NAME) {
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID));
            }
            if ((USER_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(USER_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ID, string USER_NAME, string Original_ID, string Original_USER_NAME) {
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ID));
            }
            if ((USER_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(USER_NAME));
            }
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_ID));
            }
            if ((Original_USER_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_USER_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string USER_NAME, string Original_ID, string Original_USER_NAME) {
            return this.Update(Original_ID, USER_NAME, Original_ID, Original_USER_NAME);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private CHAMBERTableAdapter _cHAMBERTableAdapter;
        
        private DOCTORTableAdapter _dOCTORTableAdapter;
        
        private MEDICAL_HISTIRYTableAdapter _mEDICAL_HISTIRYTableAdapter;
        
        private PACIENTTableAdapter _pACIENTTableAdapter;
        
        private POSTTableAdapter _pOSTTableAdapter;
        
        private PRIEMTableAdapter _pRIEMTableAdapter;
        
        private SPECIALITYTableAdapter _sPECIALITYTableAdapter;
        
        private UNITTableAdapter _uNITTableAdapter;
        
        private WWV_FLOW_DUAL100TableAdapter _wWV_FLOW_DUAL100TableAdapter;
        
        private WWV_FLOW_FIELD_TEMPLATESTableAdapter _wWV_FLOW_FIELD_TEMPLATESTableAdapter;
        
        private WWV_FLOW_LIST_OF_VALUES_DATATableAdapter _wWV_FLOW_LIST_OF_VALUES_DATATableAdapter;
        
        private WWV_FLOW_LISTS_OF_VALUES_TableAdapter _wWV_FLOW_LISTS_OF_VALUES_TableAdapter;
        
        private WWV_FLOW_LOV_TEMPTableAdapter _wWV_FLOW_LOV_TEMPTableAdapter;
        
        private WWV_FLOW_PATCHESTableAdapter _wWV_FLOW_PATCHESTableAdapter;
        
        private WWV_FLOW_TEMP_TABLETableAdapter _wWV_FLOW_TEMP_TABLETableAdapter;
        
        private PASSWORDTableAdapter _pASSWORDTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CHAMBERTableAdapter CHAMBERTableAdapter {
            get {
                return this._cHAMBERTableAdapter;
            }
            set {
                this._cHAMBERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public DOCTORTableAdapter DOCTORTableAdapter {
            get {
                return this._dOCTORTableAdapter;
            }
            set {
                this._dOCTORTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MEDICAL_HISTIRYTableAdapter MEDICAL_HISTIRYTableAdapter {
            get {
                return this._mEDICAL_HISTIRYTableAdapter;
            }
            set {
                this._mEDICAL_HISTIRYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PACIENTTableAdapter PACIENTTableAdapter {
            get {
                return this._pACIENTTableAdapter;
            }
            set {
                this._pACIENTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public POSTTableAdapter POSTTableAdapter {
            get {
                return this._pOSTTableAdapter;
            }
            set {
                this._pOSTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PRIEMTableAdapter PRIEMTableAdapter {
            get {
                return this._pRIEMTableAdapter;
            }
            set {
                this._pRIEMTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public SPECIALITYTableAdapter SPECIALITYTableAdapter {
            get {
                return this._sPECIALITYTableAdapter;
            }
            set {
                this._sPECIALITYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public UNITTableAdapter UNITTableAdapter {
            get {
                return this._uNITTableAdapter;
            }
            set {
                this._uNITTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public WWV_FLOW_DUAL100TableAdapter WWV_FLOW_DUAL100TableAdapter {
            get {
                return this._wWV_FLOW_DUAL100TableAdapter;
            }
            set {
                this._wWV_FLOW_DUAL100TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public WWV_FLOW_FIELD_TEMPLATESTableAdapter WWV_FLOW_FIELD_TEMPLATESTableAdapter {
            get {
                return this._wWV_FLOW_FIELD_TEMPLATESTableAdapter;
            }
            set {
                this._wWV_FLOW_FIELD_TEMPLATESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public WWV_FLOW_LIST_OF_VALUES_DATATableAdapter WWV_FLOW_LIST_OF_VALUES_DATATableAdapter {
            get {
                return this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter;
            }
            set {
                this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public WWV_FLOW_LISTS_OF_VALUES_TableAdapter WWV_FLOW_LISTS_OF_VALUES_TableAdapter {
            get {
                return this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter;
            }
            set {
                this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public WWV_FLOW_LOV_TEMPTableAdapter WWV_FLOW_LOV_TEMPTableAdapter {
            get {
                return this._wWV_FLOW_LOV_TEMPTableAdapter;
            }
            set {
                this._wWV_FLOW_LOV_TEMPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public WWV_FLOW_PATCHESTableAdapter WWV_FLOW_PATCHESTableAdapter {
            get {
                return this._wWV_FLOW_PATCHESTableAdapter;
            }
            set {
                this._wWV_FLOW_PATCHESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public WWV_FLOW_TEMP_TABLETableAdapter WWV_FLOW_TEMP_TABLETableAdapter {
            get {
                return this._wWV_FLOW_TEMP_TABLETableAdapter;
            }
            set {
                this._wWV_FLOW_TEMP_TABLETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PASSWORDTableAdapter PASSWORDTableAdapter {
            get {
                return this._pASSWORDTableAdapter;
            }
            set {
                this._pASSWORDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._cHAMBERTableAdapter != null) 
                            && (this._cHAMBERTableAdapter.Connection != null))) {
                    return this._cHAMBERTableAdapter.Connection;
                }
                if (((this._dOCTORTableAdapter != null) 
                            && (this._dOCTORTableAdapter.Connection != null))) {
                    return this._dOCTORTableAdapter.Connection;
                }
                if (((this._mEDICAL_HISTIRYTableAdapter != null) 
                            && (this._mEDICAL_HISTIRYTableAdapter.Connection != null))) {
                    return this._mEDICAL_HISTIRYTableAdapter.Connection;
                }
                if (((this._pACIENTTableAdapter != null) 
                            && (this._pACIENTTableAdapter.Connection != null))) {
                    return this._pACIENTTableAdapter.Connection;
                }
                if (((this._pOSTTableAdapter != null) 
                            && (this._pOSTTableAdapter.Connection != null))) {
                    return this._pOSTTableAdapter.Connection;
                }
                if (((this._pRIEMTableAdapter != null) 
                            && (this._pRIEMTableAdapter.Connection != null))) {
                    return this._pRIEMTableAdapter.Connection;
                }
                if (((this._sPECIALITYTableAdapter != null) 
                            && (this._sPECIALITYTableAdapter.Connection != null))) {
                    return this._sPECIALITYTableAdapter.Connection;
                }
                if (((this._uNITTableAdapter != null) 
                            && (this._uNITTableAdapter.Connection != null))) {
                    return this._uNITTableAdapter.Connection;
                }
                if (((this._wWV_FLOW_DUAL100TableAdapter != null) 
                            && (this._wWV_FLOW_DUAL100TableAdapter.Connection != null))) {
                    return this._wWV_FLOW_DUAL100TableAdapter.Connection;
                }
                if (((this._wWV_FLOW_FIELD_TEMPLATESTableAdapter != null) 
                            && (this._wWV_FLOW_FIELD_TEMPLATESTableAdapter.Connection != null))) {
                    return this._wWV_FLOW_FIELD_TEMPLATESTableAdapter.Connection;
                }
                if (((this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter != null) 
                            && (this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter.Connection != null))) {
                    return this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter.Connection;
                }
                if (((this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter != null) 
                            && (this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter.Connection != null))) {
                    return this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter.Connection;
                }
                if (((this._wWV_FLOW_LOV_TEMPTableAdapter != null) 
                            && (this._wWV_FLOW_LOV_TEMPTableAdapter.Connection != null))) {
                    return this._wWV_FLOW_LOV_TEMPTableAdapter.Connection;
                }
                if (((this._wWV_FLOW_PATCHESTableAdapter != null) 
                            && (this._wWV_FLOW_PATCHESTableAdapter.Connection != null))) {
                    return this._wWV_FLOW_PATCHESTableAdapter.Connection;
                }
                if (((this._wWV_FLOW_TEMP_TABLETableAdapter != null) 
                            && (this._wWV_FLOW_TEMP_TABLETableAdapter.Connection != null))) {
                    return this._wWV_FLOW_TEMP_TABLETableAdapter.Connection;
                }
                if (((this._pASSWORDTableAdapter != null) 
                            && (this._pASSWORDTableAdapter.Connection != null))) {
                    return this._pASSWORDTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._cHAMBERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dOCTORTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mEDICAL_HISTIRYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pACIENTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pOSTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pRIEMTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sPECIALITYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._uNITTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._wWV_FLOW_DUAL100TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._wWV_FLOW_FIELD_TEMPLATESTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._wWV_FLOW_LOV_TEMPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._wWV_FLOW_PATCHESTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._wWV_FLOW_TEMP_TABLETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pASSWORDTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pOSTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.POST.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pOSTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sPECIALITYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SPECIALITY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sPECIALITYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dOCTORTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DOCTOR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dOCTORTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._uNITTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UNIT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._uNITTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pACIENTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PACIENT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pACIENTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet._WWV_FLOW_LISTS_OF_VALUES_.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pRIEMTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PRIEM.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pRIEMTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pASSWORDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PASSWORD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pASSWORDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._wWV_FLOW_FIELD_TEMPLATESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.WWV_FLOW_FIELD_TEMPLATES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._wWV_FLOW_FIELD_TEMPLATESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.WWV_FLOW_LIST_OF_VALUES_DATA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._wWV_FLOW_LOV_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.WWV_FLOW_LOV_TEMP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._wWV_FLOW_LOV_TEMPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cHAMBERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CHAMBER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cHAMBERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mEDICAL_HISTIRYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MEDICAL_HISTIRY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mEDICAL_HISTIRYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._wWV_FLOW_DUAL100TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.WWV_FLOW_DUAL100.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._wWV_FLOW_DUAL100TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._wWV_FLOW_PATCHESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.WWV_FLOW_PATCHES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._wWV_FLOW_PATCHESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._wWV_FLOW_TEMP_TABLETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.WWV_FLOW_TEMP_TABLE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._wWV_FLOW_TEMP_TABLETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pOSTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.POST.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pOSTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sPECIALITYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SPECIALITY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sPECIALITYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dOCTORTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DOCTOR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dOCTORTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._uNITTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UNIT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._uNITTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pACIENTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PACIENT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pACIENTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet._WWV_FLOW_LISTS_OF_VALUES_.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pRIEMTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PRIEM.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pRIEMTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pASSWORDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PASSWORD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pASSWORDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._wWV_FLOW_FIELD_TEMPLATESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.WWV_FLOW_FIELD_TEMPLATES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._wWV_FLOW_FIELD_TEMPLATESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.WWV_FLOW_LIST_OF_VALUES_DATA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._wWV_FLOW_LOV_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.WWV_FLOW_LOV_TEMP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._wWV_FLOW_LOV_TEMPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cHAMBERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CHAMBER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cHAMBERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mEDICAL_HISTIRYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MEDICAL_HISTIRY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mEDICAL_HISTIRYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._wWV_FLOW_DUAL100TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.WWV_FLOW_DUAL100.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._wWV_FLOW_DUAL100TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._wWV_FLOW_PATCHESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.WWV_FLOW_PATCHES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._wWV_FLOW_PATCHESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._wWV_FLOW_TEMP_TABLETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.WWV_FLOW_TEMP_TABLE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._wWV_FLOW_TEMP_TABLETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._wWV_FLOW_TEMP_TABLETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.WWV_FLOW_TEMP_TABLE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._wWV_FLOW_TEMP_TABLETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._wWV_FLOW_PATCHESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.WWV_FLOW_PATCHES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._wWV_FLOW_PATCHESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._wWV_FLOW_DUAL100TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.WWV_FLOW_DUAL100.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._wWV_FLOW_DUAL100TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mEDICAL_HISTIRYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MEDICAL_HISTIRY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mEDICAL_HISTIRYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cHAMBERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CHAMBER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cHAMBERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._wWV_FLOW_LOV_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.WWV_FLOW_LOV_TEMP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._wWV_FLOW_LOV_TEMPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.WWV_FLOW_LIST_OF_VALUES_DATA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._wWV_FLOW_FIELD_TEMPLATESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.WWV_FLOW_FIELD_TEMPLATES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._wWV_FLOW_FIELD_TEMPLATESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pASSWORDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PASSWORD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pASSWORDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pRIEMTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PRIEM.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pRIEMTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet._WWV_FLOW_LISTS_OF_VALUES_.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pACIENTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PACIENT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pACIENTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uNITTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UNIT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._uNITTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dOCTORTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DOCTOR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dOCTORTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sPECIALITYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SPECIALITY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sPECIALITYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pOSTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.POST.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pOSTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._cHAMBERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cHAMBERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            if (((this._dOCTORTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dOCTORTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            if (((this._mEDICAL_HISTIRYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mEDICAL_HISTIRYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            if (((this._pACIENTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pACIENTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            if (((this._pOSTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pOSTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            if (((this._pRIEMTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pRIEMTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            if (((this._sPECIALITYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sPECIALITYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            if (((this._uNITTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uNITTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            if (((this._wWV_FLOW_DUAL100TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._wWV_FLOW_DUAL100TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            if (((this._wWV_FLOW_FIELD_TEMPLATESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._wWV_FLOW_FIELD_TEMPLATESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            if (((this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            if (((this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            if (((this._wWV_FLOW_LOV_TEMPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._wWV_FLOW_LOV_TEMPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            if (((this._wWV_FLOW_PATCHESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._wWV_FLOW_PATCHESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            if (((this._wWV_FLOW_TEMP_TABLETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._wWV_FLOW_TEMP_TABLETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            if (((this._pASSWORDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pASSWORDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все TableAdapters, которые управляются TableAdapterManager, должны использовать о" +
                        "дну и ту же строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Установите каждое свойств" +
                        "о TableAdapter TableAdapterManager действительному экземпляру TableAdapter.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удалось начать транзакцию. Текущее подключение к данным не поддерживает транза" +
                        "кций или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._cHAMBERTableAdapter != null)) {
                    revertConnections.Add(this._cHAMBERTableAdapter, this._cHAMBERTableAdapter.Connection);
                    this._cHAMBERTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._cHAMBERTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._cHAMBERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cHAMBERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cHAMBERTableAdapter.Adapter);
                    }
                }
                if ((this._dOCTORTableAdapter != null)) {
                    revertConnections.Add(this._dOCTORTableAdapter, this._dOCTORTableAdapter.Connection);
                    this._dOCTORTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._dOCTORTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._dOCTORTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dOCTORTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dOCTORTableAdapter.Adapter);
                    }
                }
                if ((this._mEDICAL_HISTIRYTableAdapter != null)) {
                    revertConnections.Add(this._mEDICAL_HISTIRYTableAdapter, this._mEDICAL_HISTIRYTableAdapter.Connection);
                    this._mEDICAL_HISTIRYTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._mEDICAL_HISTIRYTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._mEDICAL_HISTIRYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mEDICAL_HISTIRYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mEDICAL_HISTIRYTableAdapter.Adapter);
                    }
                }
                if ((this._pACIENTTableAdapter != null)) {
                    revertConnections.Add(this._pACIENTTableAdapter, this._pACIENTTableAdapter.Connection);
                    this._pACIENTTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._pACIENTTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._pACIENTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pACIENTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pACIENTTableAdapter.Adapter);
                    }
                }
                if ((this._pOSTTableAdapter != null)) {
                    revertConnections.Add(this._pOSTTableAdapter, this._pOSTTableAdapter.Connection);
                    this._pOSTTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._pOSTTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._pOSTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pOSTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pOSTTableAdapter.Adapter);
                    }
                }
                if ((this._pRIEMTableAdapter != null)) {
                    revertConnections.Add(this._pRIEMTableAdapter, this._pRIEMTableAdapter.Connection);
                    this._pRIEMTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._pRIEMTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._pRIEMTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pRIEMTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pRIEMTableAdapter.Adapter);
                    }
                }
                if ((this._sPECIALITYTableAdapter != null)) {
                    revertConnections.Add(this._sPECIALITYTableAdapter, this._sPECIALITYTableAdapter.Connection);
                    this._sPECIALITYTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._sPECIALITYTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._sPECIALITYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sPECIALITYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sPECIALITYTableAdapter.Adapter);
                    }
                }
                if ((this._uNITTableAdapter != null)) {
                    revertConnections.Add(this._uNITTableAdapter, this._uNITTableAdapter.Connection);
                    this._uNITTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._uNITTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._uNITTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uNITTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uNITTableAdapter.Adapter);
                    }
                }
                if ((this._wWV_FLOW_DUAL100TableAdapter != null)) {
                    revertConnections.Add(this._wWV_FLOW_DUAL100TableAdapter, this._wWV_FLOW_DUAL100TableAdapter.Connection);
                    this._wWV_FLOW_DUAL100TableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._wWV_FLOW_DUAL100TableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._wWV_FLOW_DUAL100TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._wWV_FLOW_DUAL100TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._wWV_FLOW_DUAL100TableAdapter.Adapter);
                    }
                }
                if ((this._wWV_FLOW_FIELD_TEMPLATESTableAdapter != null)) {
                    revertConnections.Add(this._wWV_FLOW_FIELD_TEMPLATESTableAdapter, this._wWV_FLOW_FIELD_TEMPLATESTableAdapter.Connection);
                    this._wWV_FLOW_FIELD_TEMPLATESTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._wWV_FLOW_FIELD_TEMPLATESTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._wWV_FLOW_FIELD_TEMPLATESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._wWV_FLOW_FIELD_TEMPLATESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._wWV_FLOW_FIELD_TEMPLATESTableAdapter.Adapter);
                    }
                }
                if ((this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter != null)) {
                    revertConnections.Add(this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter, this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter.Connection);
                    this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter.Adapter);
                    }
                }
                if ((this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter != null)) {
                    revertConnections.Add(this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter, this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter.Connection);
                    this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter.Adapter);
                    }
                }
                if ((this._wWV_FLOW_LOV_TEMPTableAdapter != null)) {
                    revertConnections.Add(this._wWV_FLOW_LOV_TEMPTableAdapter, this._wWV_FLOW_LOV_TEMPTableAdapter.Connection);
                    this._wWV_FLOW_LOV_TEMPTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._wWV_FLOW_LOV_TEMPTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._wWV_FLOW_LOV_TEMPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._wWV_FLOW_LOV_TEMPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._wWV_FLOW_LOV_TEMPTableAdapter.Adapter);
                    }
                }
                if ((this._wWV_FLOW_PATCHESTableAdapter != null)) {
                    revertConnections.Add(this._wWV_FLOW_PATCHESTableAdapter, this._wWV_FLOW_PATCHESTableAdapter.Connection);
                    this._wWV_FLOW_PATCHESTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._wWV_FLOW_PATCHESTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._wWV_FLOW_PATCHESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._wWV_FLOW_PATCHESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._wWV_FLOW_PATCHESTableAdapter.Adapter);
                    }
                }
                if ((this._wWV_FLOW_TEMP_TABLETableAdapter != null)) {
                    revertConnections.Add(this._wWV_FLOW_TEMP_TABLETableAdapter, this._wWV_FLOW_TEMP_TABLETableAdapter.Connection);
                    this._wWV_FLOW_TEMP_TABLETableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._wWV_FLOW_TEMP_TABLETableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._wWV_FLOW_TEMP_TABLETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._wWV_FLOW_TEMP_TABLETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._wWV_FLOW_TEMP_TABLETableAdapter.Adapter);
                    }
                }
                if ((this._pASSWORDTableAdapter != null)) {
                    revertConnections.Add(this._pASSWORDTableAdapter, this._pASSWORDTableAdapter.Connection);
                    this._pASSWORDTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._pASSWORDTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._pASSWORDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pASSWORDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pASSWORDTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._cHAMBERTableAdapter != null)) {
                    this._cHAMBERTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._cHAMBERTableAdapter]));
                    this._cHAMBERTableAdapter.Transaction = null;
                }
                if ((this._dOCTORTableAdapter != null)) {
                    this._dOCTORTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._dOCTORTableAdapter]));
                    this._dOCTORTableAdapter.Transaction = null;
                }
                if ((this._mEDICAL_HISTIRYTableAdapter != null)) {
                    this._mEDICAL_HISTIRYTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._mEDICAL_HISTIRYTableAdapter]));
                    this._mEDICAL_HISTIRYTableAdapter.Transaction = null;
                }
                if ((this._pACIENTTableAdapter != null)) {
                    this._pACIENTTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._pACIENTTableAdapter]));
                    this._pACIENTTableAdapter.Transaction = null;
                }
                if ((this._pOSTTableAdapter != null)) {
                    this._pOSTTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._pOSTTableAdapter]));
                    this._pOSTTableAdapter.Transaction = null;
                }
                if ((this._pRIEMTableAdapter != null)) {
                    this._pRIEMTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._pRIEMTableAdapter]));
                    this._pRIEMTableAdapter.Transaction = null;
                }
                if ((this._sPECIALITYTableAdapter != null)) {
                    this._sPECIALITYTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._sPECIALITYTableAdapter]));
                    this._sPECIALITYTableAdapter.Transaction = null;
                }
                if ((this._uNITTableAdapter != null)) {
                    this._uNITTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._uNITTableAdapter]));
                    this._uNITTableAdapter.Transaction = null;
                }
                if ((this._wWV_FLOW_DUAL100TableAdapter != null)) {
                    this._wWV_FLOW_DUAL100TableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._wWV_FLOW_DUAL100TableAdapter]));
                    this._wWV_FLOW_DUAL100TableAdapter.Transaction = null;
                }
                if ((this._wWV_FLOW_FIELD_TEMPLATESTableAdapter != null)) {
                    this._wWV_FLOW_FIELD_TEMPLATESTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._wWV_FLOW_FIELD_TEMPLATESTableAdapter]));
                    this._wWV_FLOW_FIELD_TEMPLATESTableAdapter.Transaction = null;
                }
                if ((this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter != null)) {
                    this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter]));
                    this._wWV_FLOW_LIST_OF_VALUES_DATATableAdapter.Transaction = null;
                }
                if ((this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter != null)) {
                    this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter]));
                    this._wWV_FLOW_LISTS_OF_VALUES_TableAdapter.Transaction = null;
                }
                if ((this._wWV_FLOW_LOV_TEMPTableAdapter != null)) {
                    this._wWV_FLOW_LOV_TEMPTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._wWV_FLOW_LOV_TEMPTableAdapter]));
                    this._wWV_FLOW_LOV_TEMPTableAdapter.Transaction = null;
                }
                if ((this._wWV_FLOW_PATCHESTableAdapter != null)) {
                    this._wWV_FLOW_PATCHESTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._wWV_FLOW_PATCHESTableAdapter]));
                    this._wWV_FLOW_PATCHESTableAdapter.Transaction = null;
                }
                if ((this._wWV_FLOW_TEMP_TABLETableAdapter != null)) {
                    this._wWV_FLOW_TEMP_TABLETableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._wWV_FLOW_TEMP_TABLETableAdapter]));
                    this._wWV_FLOW_TEMP_TABLETableAdapter.Transaction = null;
                }
                if ((this._pASSWORDTableAdapter != null)) {
                    this._pASSWORDTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._pASSWORDTableAdapter]));
                    this._pASSWORDTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591